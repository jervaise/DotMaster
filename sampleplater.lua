
PlaterDB = {
["captured_spells"] = {
[1217528] = {
["isChanneled"] = false,
["source"] = "Thunderpunch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[419204] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[419205] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[325174] = {
["isChanneled"] = false,
["source"] = "Spirit Link Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 53006,
},
[1217280] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Addled Thug",
["npcID"] = 130435,
},
[199373] = {
["isChanneled"] = false,
["source"] = "Army of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237409,
},
[1217283] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[267354] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hired Assassin",
["npcID"] = 134232,
},
[3600] = {
["isChanneled"] = false,
["source"] = "Earthbind Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 2630,
},
[267546] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rowdy Reveler",
["npcID"] = 144231,
},
[157331] = {
["isChanneled"] = false,
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77942,
},
[267547] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
},
[134477] = {
["isChanneled"] = false,
["source"] = "Chinilkryz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[1217294] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2105,
},
[428453] = {
["isChanneled"] = false,
["source"] = "Charhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226269,
},
[454782] = {
["source"] = "Cleave Training Dummy",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225982,
},
[270481] = {
["isChanneled"] = false,
["source"] = "Demonic Tyrant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135002,
},
[3606] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Searing Totem",
["npcID"] = 2523,
},
[434574] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Beast",
["npcID"] = 217228,
},
[438973] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pit Lord",
["npcID"] = 228574,
},
[263215] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonefury",
["npcID"] = 130635,
},
[5672] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Healing Stream Totem",
["npcID"] = 3527,
},
[191726] = {
["isChanneled"] = false,
["source"] = "Greater Lightning Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97022,
},
[267997] = {
["isChanneled"] = false,
["source"] = "Charhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226269,
},
[267551] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
},
[263854] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Raptor",
["npcID"] = 165189,
},
[392375] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29264,
},
[471999] = {
["source"] = "Bear",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 234018,
},
[433622] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brann Bronzebeard",
["npcID"] = 210759,
},
[268702] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonefury",
["npcID"] = 130635,
},
[419344] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[457913] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deployed Wind-Wrangling Spire",
["npcID"] = 227482,
},
[343737] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Yu'lon",
["npcID"] = 165374,
},
[317791] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
},
[386195] = {
["source"] = "Greater Dreadstalker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 237376,
},
[377589] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Braincrawler",
["npcID"] = 26125,
},
[1227275] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[317792] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
},
[267367] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 130485,
},
[26262] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Tendril",
["npcID"] = 65282,
},
[453773] = {
["source"] = "High Inquisitor Whitemane",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221633,
},
[396972] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Invisible Bunny, Controller - gameobject assist [DNT]",
["npcID"] = 199568,
},
[192082] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wind Rush Totem",
["npcID"] = 97285,
},
[390599] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Child of Ohn'ahra",
["npcID"] = 191869,
},
[419287] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[152175] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[30151] = {
["isChanneled"] = false,
["source"] = "Rinnkrill",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[271579] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Earthshaper",
["npcID"] = 130661,
},
[50245] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crab",
["npcID"] = 165189,
},
[264057] = {
["isChanneled"] = false,
["source"] = "Chinilkryz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[434589] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overfiend",
["npcID"] = 217429,
},
[268712] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Wanton Sapper",
["npcID"] = 130653,
},
[167381] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dungeoneer's Training Dummy",
["npcID"] = 225977,
},
[228645] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[259277] = {
["source"] = "Gruffhorn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[124009] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xuen",
["npcID"] = 63508,
},
[198837] = {
["isChanneled"] = false,
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99541,
},
[457797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deployed Battle Supplies",
["npcID"] = 227453,
},
[3110] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bizpit",
["npcID"] = 416,
},
[114893] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stone Bulwark Totem",
["npcID"] = 59712,
},
[1215334] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brann Bronzebeard",
["npcID"] = 210759,
},
[271903] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2105,
},
[117952] = {
["isChanneled"] = false,
["source"] = "Fire Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69791,
},
[449001] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103822,
},
[58729] = {
["source"] = "Dwarven Spirit Guide",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 31842,
},
[284401] = {
["source"] = "Falania Nightsoul",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144566,
},
[114404] = {
["source"] = "Void Tendril",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 65282,
},
[1214576] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pitbot Geardo",
["npcID"] = 235472,
},
[290577] = {
["isChanneled"] = false,
["source"] = "Abomination",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 149555,
},
[392959] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[276304] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rowdy Reveler",
["npcID"] = 136005,
},
[258674] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Off-Duty Laborer",
["npcID"] = 130436,
},
[36213] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Earth Elemental",
["npcID"] = 61056,
},
[157375] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[283700] = {
["source"] = "Dawyn the Rabid",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 150732,
},
[186254] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Raptor",
["npcID"] = 165189,
},
[41600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Beast",
["npcID"] = 217228,
},
[284402] = {
["source"] = "Falania Nightsoul",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144566,
},
[124007] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xuen",
["npcID"] = 63508,
},
[290490] = {
["source"] = "Kyara Bladeturner",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 150726,
},
[24450] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "OizZ",
["npcID"] = 165189,
},
[452514] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Boulderbane",
["npcID"] = 224756,
},
[115804] = {
["source"] = "Earth Spirit",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69792,
},
[167385] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dungeoneer's Training Dummy",
["npcID"] = 225977,
},
[196742] = {
["source"] = "Earth Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69792,
},
[228649] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[432113] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overlord",
["npcID"] = 228575,
},
[262347] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2105,
},
[89766] = {
["isChanneled"] = false,
["source"] = "Felguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[428735] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103822,
},
[360969] = {
["isChanneled"] = false,
["source"] = "Gruffhorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[113656] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[1217279] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Addled Thug",
["npcID"] = 130435,
},
[384366] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ashwhite Kestrel",
["npcID"] = 215070,
},
[428545] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 103822,
},
[271784] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Footbomb Hooligan",
["npcID"] = 138369,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2105,
},
[445504] = {
["isChanneled"] = false,
["source"] = "Highlord Darion Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221632,
},
[224125] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 100820,
},
[1213859] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pitbot Geardo",
["npcID"] = 235472,
},
[94022] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "OlmtheWise",
["npcID"] = 165189,
},
[462844] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stone Bulwark Totem",
["npcID"] = 59712,
},
[357650] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 165189,
},
[433925] = {
["source"] = "Rune Weapon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[89751] = {
["isChanneled"] = false,
["source"] = "Chinilkryz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[444740] = {
["isChanneled"] = false,
["source"] = "Highlord Darion Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221632,
},
[104318] = {
["isChanneled"] = false,
["source"] = "Wild Imp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 143622,
},
[257371] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[100780] = {
["isChanneled"] = false,
["source"] = "Fire Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69791,
},
[444741] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "King Thoras Trollbane",
["npcID"] = 221635,
},
[451435] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voidwraith",
["npcID"] = 224466,
},
[2649] = {
["isChanneled"] = false,
["source"] = "Snuggles",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[224126] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 100820,
},
[445507] = {
["isChanneled"] = false,
["source"] = "King Thoras Trollbane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221635,
},
[444826] = {
["isChanneled"] = false,
["source"] = "King Thoras Trollbane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221635,
},
[432120] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overlord",
["npcID"] = 228575,
},
[267964] = {
["isChanneled"] = false,
["source"] = "Chinilkryz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[445508] = {
["isChanneled"] = false,
["source"] = "Nazgrim",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221634,
},
[1604] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Disturbed Mudspawn",
["npcID"] = 219897,
},
[283499] = {
["source"] = "Len'te the Bitter",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144528,
},
[224127] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212489,
},
[101546] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[157348] = {
["isChanneled"] = false,
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77942,
},
[188046] = {
["isChanneled"] = false,
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198489,
},
[54216] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "OlmtheWise",
["npcID"] = 165189,
},
[444490] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ancestor",
["npcID"] = 221177,
},
[432569] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mother of Chaos",
["npcID"] = 228576,
},
[64695] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthgrab Totem",
["npcID"] = 60561,
},
[264667] = {
["source"] = "Core Hound",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[317898] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Hired Assassin",
["npcID"] = 134232,
},
[1217698] = {
["isChanneled"] = false,
["source"] = "Pocket Ace",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237263,
},
[392983] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[472478] = {
["source"] = "Bear",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 234018,
},
[198533] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jade Serpent Statue",
["npcID"] = 60849,
},
[138130] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[54049] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Khaazhem",
["npcID"] = 417,
},
[89753] = {
["isChanneled"] = false,
["source"] = "Chinilkryz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[445513] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 221633,
},
[1215411] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azerite Extractor",
["npcID"] = 136643,
},
[389541] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "White Tiger Statue",
["npcID"] = 196581,
},
[116847] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[107428] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[443028] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[118297] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Fire Elemental",
["npcID"] = 61029,
},
[268880] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Venture Co. Mastermind",
["npcID"] = 133430,
},
[201754] = {
["isChanneled"] = false,
["source"] = "Thunderpunch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[290539] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Taga Stoneaxe",
["npcID"] = 149753,
},
[62305] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "OlmtheWise",
["npcID"] = 165189,
},
[419207] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[269493] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2105,
},
[268865] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Weapons Tester",
["npcID"] = 136934,
},
[1215934] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Venture Co. Earthshaper",
["npcID"] = 130661,
},
[438823] = {
["isChanneled"] = false,
["source"] = "Diabolic Imp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219161,
},
[1217721] = {
["isChanneled"] = false,
["source"] = "Snake Eyes",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237264,
},
[208963] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Totem of Wrath",
["npcID"] = 105427,
},
[269313] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wanton Sapper",
["npcID"] = 130653,
},
[90328] = {
["isChanneled"] = false,
["source"] = "Sul'raka",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[383298] = {
["source"] = "Enraged Magma Fury",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214924,
},
[263262] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shalebiter",
["npcID"] = 134005,
},
[267999] = {
["isChanneled"] = false,
["source"] = "Charhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226269,
},
[108446] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghaaghon",
["npcID"] = 417,
},
[268362] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wanton Sapper",
["npcID"] = 130653,
},
[1213140] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["type"] = "BUFF",
["source"] = "Taskmaster Askari",
["npcID"] = 134012,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2105,
},
[199845] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Psyfiend",
["npcID"] = 101398,
},
[453616] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Doomguard",
["npcID"] = 225493,
},
[465] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Captain Garrick",
["npcID"] = 209057,
},
[439209] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Beast",
["npcID"] = 217228,
},
[192226] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Liquid Magma Totem",
["npcID"] = 97369,
},
[55078] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[472041] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[290422] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Perek Tidesweeper",
["npcID"] = 150750,
},
[282449] = {
["isChanneled"] = false,
["source"] = "Akaari's Soul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 144961,
},
[100784] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[118905] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Capacitor Totem",
["npcID"] = 61245,
},
[393056] = {
["isChanneled"] = false,
["source"] = "Fire Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69791,
},
[205231] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkglare",
["npcID"] = 103673,
},
[31707] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[135029] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[19483] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infernal",
["npcID"] = 89,
},
[1213893] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mech Jockey",
["npcID"] = 130488,
},
[91800] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Risen Ghoul",
["npcID"] = 26125,
},
[260249] = {
["source"] = "Gruffhorn",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[263209] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mine Rat",
["npcID"] = 130437,
},
[30213] = {
["isChanneled"] = false,
["source"] = "Chinilkryz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[473168] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azerite Extractor",
["npcID"] = 136643,
},
[17253] = {
["isChanneled"] = false,
["source"] = "Snuggles",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[280604] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Refreshment Vendor",
["npcID"] = 136470,
},
[227291] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Niuzao",
["npcID"] = 73967,
},
[434242] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Blood Beast",
["npcID"] = 217228,
},
[262092] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Addled Thug",
["npcID"] = 130435,
},
[1217695] = {
["isChanneled"] = false,
["source"] = "Thwack Jack",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 237262,
},
[96243] = {
["source"] = "Water Elemental",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 208441,
},
[195321] = {
["source"] = "Earth Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69792,
},
[263202] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Earthshaper",
["npcID"] = 130661,
},
[386176] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[81262] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Efflorescence",
["npcID"] = 47649,
},
[373279] = {
["isChanneled"] = false,
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189988,
},
[263628] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[193473] = {
["source"] = "Void Tendril",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 192337,
},
[117588] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lesser Primal Fire Elemental",
["npcID"] = 229799,
},
[91797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Plaguechomp",
["npcID"] = 26125,
},
[57984] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Fire Elemental",
["npcID"] = 61029,
},
[283668] = {
["source"] = "Jeniba Sharpwrench",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144543,
},
[16827] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "OizZ",
["npcID"] = 165189,
},
[394976] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Void Lasher",
["npcID"] = 198757,
},
[268815] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Test Subject",
["npcID"] = 133963,
},
[115098] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[59638] = {
["isChanneled"] = false,
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 31216,
},
[383061] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Liquid Magma Totem",
["npcID"] = 97369,
},
[452545] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Boulderbane",
["npcID"] = 224756,
},
[116947] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Earthgrab Totem",
["npcID"] = 60561,
},
[256493] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["type"] = "BUFF",
["source"] = "Azerite Footbomb",
["npcID"] = 129246,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2105,
},
[53271] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "zeli",
["npcID"] = 165189,
},
[49966] = {
["isChanneled"] = false,
["source"] = "Gruffhorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[191732] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[459753] = {
["isChanneled"] = false,
["source"] = "Fenryr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228224,
},
},
["profileKeys"] = {
["Jervaise - Kazzak"] = "Jervaise TWW Season 2",
["Jervaidhe - Kazzak"] = "Jervaise TWW Season 2",
["Jervaiwe - Kazzak"] = "Default",
["Jervaidke - Kazzak"] = "Jervaise TWW Season 2",
["Jervaipe - Kazzak"] = "Default",
["Jervaime - Kazzak"] = "Jervaise TWW Season 2",
["Jervaige - Kazzak"] = "Default",
},
["profiles"] = {
["Default"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Hide Neutral Units"] = 1,
["Combo Points"] = 6,
["Target Color"] = 3,
["Execute Range"] = 1,
["Attacking Specific Unit"] = 2,
},
["expansion_triggerwipe"] = {
[10] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["Name"] = "Cast - Important by Color [P]",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["Name"] = "Aura - Buff Alert [Plater]",
["SpellIds"] = {
398151,
377738,
378149,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Cast - Effect After Cast [P]",
["SpellIds"] = {
191284,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = false,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Name"] = "Explosion Affix M+ [Plater]",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
389446,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 368,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Add the debuff name in the trigger box.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["Name"] = "Cast - Shining Green [P]",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
268702,
268797,
330562,
330868,
341969,
440687,
1214780,
1214468,
426295,
422541,
427011,
427157,
427601,
424420,
444743,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["Name"] = "Cast - Ultra Important [P]",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"214840",
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Add - Health Markers [P]",
["SpellIds"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["Name"] = "Cast - Small Alert [Plater]",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
200630,
415437,
264050,
267824,
271579,
301088,
423479,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
194745,
190426,
152033,
170234,
220368,
231176,
213751,
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullScale",
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["Name"] = "Add - Important [P]",
["SpellIds"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Name"] = "Aura - Blink by Time Left [Plater]",
["SpellIds"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["Name"] = "Cast - Circle AoE [P]",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["Name"] = "Add - Tag Number [P]",
["SpellIds"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Name"] = "Cast - Special Ability [P]",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
282801,
1215412,
474298,
339573,
468841,
444034,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["Name"] = "Cast - Heroic Leap [P]",
["SpellIds"] = {
447141,
432967,
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["Name"] = "Cast - Spark Color [P]",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 551,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Name"] = "Cast - Heal Stun [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Healing effect that cannot be interrupted.",
["SpellIds"] = {
432520,
320822,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 887,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Name"] = "Cast - Quick Flash [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play a very fast flash when the cast start",
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1741042861,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 1285,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.1098039299249649,
0.1137254983186722,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --don't execute if the player is not the tank\n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tankbuster.png",
["Name"] = "Cast - Tankbuster [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Abilities casted on the tank.",
["SpellIds"] = {
280604,
1215411,
1215065,
331316,
320644,
330586,
323515,
324079,
434773,
432229,
439031,
473351,
459799,
469478,
465666,
466190,
448485,
424414,
448515,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 878,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Name"] = "Cast - Important Target [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Highlight the target name",
["SpellIds"] = {
270042,
260813,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Alert + Timer [P]",
["SpellIds"] = {
350421,
355787,
348513,
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 547,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Name"] = "Cast - Glowing [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show a different animation for the cast bar.",
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 828,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["Author"] = "Bombad o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
377488,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 101,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Name"] = "Cast - Shield Interrupt [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["SpellIds"] = {
373688,
391050,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 318,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Name"] = "Cast - AoE Hit All [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
258622,
269429,
271456,
1215102,
1215409,
291946,
297128,
1215741,
330716,
463206,
442995,
435622,
465827,
460156,
1218117,
428266,
427404,
1214628,
424431,
448791,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 73,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["Icon"] = 4038101,
["Name"] = "Cast - On Going Cast [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["SpellIds"] = {
388886,
209676,
377912,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 83,
["Options"] = {
},
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = 610472,
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["SpellIds"] = {
343470,
423228,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
186696,
101075,
100818,
98081,
52019,
},
["Enabled"] = true,
["Revision"] = 162,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Name"] = "Add - Warning [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Change the color of  add",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 958,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Name"] = "Cast - Simple Interrupt [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play a very fast flash when the cast start.",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
269302,
263215,
342675,
453909,
462771,
424322,
426145,
427260,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 18,
["Options"] = {
},
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = 236209,
["Name"] = "Aura While Casting [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["SpellIds"] = {
372743,
372749,
384933,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = false,
["Revision"] = 1194,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Name"] = "Cast - Big Alert [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 158,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Name"] = "Cast - Ongoing Cast [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["SpellIds"] = {
431364,
423327,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["NpcNames"] = {
"174773",
},
["Enabled"] = true,
["Revision"] = 186,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Icon"] = 135945,
["Name"] = "M+ Spiteful",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Time to die Spiteful affix",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 1254,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Name"] = "Cast - Heal Cut [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
293729,
341902,
341977,
441351,
441627,
463058,
471733,
425536,
427356,
424419,
423051,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
["Enabled"] = true,
["Revision"] = 233,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Icon"] = 136048,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show the energy amount above the nameplate.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
["Enabled"] = false,
["Revision"] = 63,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Name"] = "Auto Set Skull",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Auto set skull marker",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["NpcNames"] = {
"165560",
},
["Enabled"] = true,
["Revision"] = 269,
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Icon"] = 1029718,
["Name"] = "Fixate [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show above the nameplate who is the player fixated",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["Enabled"] = true,
["Revision"] = 111,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "scale",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/duck_64",
["Name"] = "Add - Non Elite Trash [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 506,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Name"] = "Cast - Stop Casting [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Just stop casting",
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["Enabled"] = true,
["Revision"] = 234,
["Options"] = {
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Name"] = "Countdown",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 220,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Name"] = "Cast - Voidzone [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
472041,
473168,
473304,
1216431,
320182,
1215850,
331237,
434706,
434998,
439365,
473070,
427484,
424462,
424429,
423062,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 281,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Name"] = "Cast - AoE With Range [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
267354,
1214754,
260280,
293861,
285454,
317605,
339415,
331223,
318406,
442589,
423501,
440652,
424621,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 754,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Name"] = "Cast - Frontal Cone [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
352833,
330403,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
1217279,
267551,
275907,
259940,
283421,
293986,
291865,
292264,
1215738,
334023,
317231,
320729,
333294,
330614,
323608,
432198,
441119,
448619,
436592,
473220,
472452,
465682,
465754,
473114,
1217496,
422122,
426261,
421277,
427025,
426893,
474018,
1214546,
445457,
447270,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
130653,
231497,
},
["Enabled"] = true,
["Revision"] = 106,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/radio_64",
["Name"] = "Add - Explode on Die [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "",
["SpellIds"] = {
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 27,
["Options"] = {
},
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Name"] = "Aura - Is Cast Bar [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show a castbar for the aura duration.",
["SpellIds"] = {
438494,
335141,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 33,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Name"] = "Fixate by Unit Buff [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["SpellIds"] = {
426662,
426663,
},
["version"] = -1,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 741,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Name"] = "Cast - Debuff [P]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "Show a different animation for the cast bar.",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["version"] = -1,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["NpcNames"] = {
"Illusionary Vulpin",
129802,
133482,
235631,
231014,
},
["Enabled"] = true,
["Revision"] = 279,
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Icon"] = 841383,
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["version"] = -1,
},
},
["aura2_x_offset"] = 0,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1547392935,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Name"] = "Color Automation [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["Name"] = "Cast Bar Icon Settings [P]",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["version"] = -1,
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 363,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Name"] = "Attacking Specific Unit [Plater]",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["version"] = -1,
["Time"] = 1620377377,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1541606242,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Name"] = "Hide Neutral Units [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1547406548,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Name"] = "Execute Range [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Name"] = "Reorder Nameplate [Plater]",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["version"] = -1,
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["version"] = -1,
["Time"] = 1554138845,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Name"] = "Don't Have Aura [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["Time"] = 1547409079,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Name"] = "Extra Border [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Combo Points [Plater]",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["version"] = -1,
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["Time"] = 1548278227,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Name"] = "Players Targeting a Target [Plater]",
},
{
["Enabled"] = false,
["Revision"] = 424,
["Options"] = {
},
["HooksTemp"] = {
},
["LastHookEdited"] = "",
["Author"] = "Ditador-Azralon",
["Name"] = "Aura Reorder [Plater]",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    local sortByTime = true\n    local invertSort = true\n    local npcSeparatedFromPlayer = true\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 90,\n        [\"Sigil of Flame\"] = 50,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or aura1.layoutIndex or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or aura2.layoutIndex or 1\n        \n        if npcSeparatedFromPlayer then\n            if aura1.IsFromPlayer and not aura2.IsFromPlayer then\n                return false\n            elseif not aura1.IsFromPlayer and aura2.IsFromPlayer then\n                return true\n            end\n        end\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1741092085,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["semver"] = "",
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["HooksTemp"] = {
},
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["Time"] = 1552354619,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Name"] = "Current Target Color [Plater]",
},
},
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:1583",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:1583",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:1583",
["nameplateShowPersonalCooldowns"] = "Interface/AddOns/Plater/Plater.lua:1583",
["nameplateShowFriendlyBuffs"] = "Interface/AddOns/Plater/Plater.lua:1583",
},
["resources_settings"] = {
["chr"] = {
["Player-1305-0CB1A1F7"] = "ArcaneCharges",
["Player-1305-0CB1B33D"] = "HolyPower",
["Player-1305-0D00569E"] = "ComboPoints",
["Player-1305-0CEDF8AA"] = "SoulShards",
["Player-1305-0D259CB0"] = "Runes",
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["patch_version"] = 39,
["ui_parent_scale_tune"] = 1,
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Shining Green [P]"] = 3,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Special Ability [P]"] = 3,
["Cast - Heroic Leap [P]"] = 3,
["Fixate On You"] = 12,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Tankbuster [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Add - Explode on Die [P]"] = 1,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Cast - Debuff [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Voidzone [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Countdown"] = 12,
["Spiteful Affix"] = 3,
["Cast - Stop Casting"] = 4,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Auto Set Skull"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Shield Interrupt"] = 2,
["Cast - Circular Swipe"] = 4,
["Unit - Show Energy"] = 11,
},
["saved_cvars"] = {
["nameplateMinAlpha"] = "0.90135484",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelectedAlpha"] = "1",
["nameplateShowPersonalCooldowns"] = "0",
["nameplateShowFriendlyBuffs"] = "0",
},
["ghost_auras"] = {
["auras"] = {
["ROGUE"] = {
[5] = {
},
},
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["plugins_data"] = {
["PERFORMANCE_UNITS_PLUGIN"] = {
["enabled"] = true,
},
},
["aura2_y_offset"] = 5,
["login_counter"] = 10,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["__TrashAt"] = 1743763699,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
},
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["first_run3"] = true,
["plate_config"] = {
["global_health_width"] = 112,
["global_health_height"] = 12,
},
["number_region_first_run"] = true,
["aura_y_offset"] = 5,
},
["Jervaise TWW Season 2"] = {
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1743332383,
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"214840",
"197697",
"59544",
"186227",
"184020",
"91005",
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 168,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Add - Health Markers [P]",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1741169956,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 382,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Name"] = "Aura - Debuff Alert [Plater]",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
["Desc"] = "Add the debuff name in the trigger box.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Temp_Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1741169882,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 117,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Aura - Invalidate Unit [Plater]",
["Author"] = "Izimode-Azralon",
["Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
261265,
261266,
271590,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Temp_Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1741169884,
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 34,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["Name"] = "Aura - Is Cast Bar [P]",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1741169942,
["Icon"] = 610472,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 97,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Aura is Shield [P]",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1741041029,
["Icon"] = 1958262,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 1010,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Key"] = "animSpeed",
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["Name"] = "Frontals TWW S2",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
388623,
384699,
153501,
153686,
154442,
192018,
219488,
387067,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
265540,
226304,
375327,
372202,
209495,
260894,
226406,
193505,
375348,
257426,
255952,
257870,
413147,
383107,
377559,
390111,
369791,
369335,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
373742,
374533,
377204,
204667,
255567,
201226,
200768,
265372,
413529,
408141,
412215,
412129,
412505,
419351,
200261,
200345,
197974,
200913,
164357,
169179,
426645,
428293,
169929,
388976,
385958,
377383,
377034,
374361,
370764,
386660,
391118,
372222,
385578,
384696,
384868,
387629,
382277,
376892,
375943,
376683,
372087,
391726,
391723,
381525,
388060,
376170,
393432,
384524,
375351,
382708,
375251,
375439,
372311,
372201,
369563,
369573,
369409,
369061,
382712,
434824,
453161,
443500,
434779,
451496,
451543,
439621,
440218,
431494,
450854,
449130,
448640,
321968,
331718,
340160,
324323,
333488,
333477,
256627,
269029,
257862,
462216,
447395,
448105,
432198,
441119,
448619,
449090,
427323,
422414,
425027,
340300,
427025,
257288,
268260,
426261,
321834,
427869,
465754,
472452,
465682,
1217653,
459779,
473114,
1217496,
421910,
421277,
447270,
436592,
426893,
1214315,
424958,
451843,
1214546,
445457,
317231,
320729,
333294,
330614,
323608,
339706,
267551,
1217294,
275907,
259940,
283422,
293986,
291865,
466124,
468813,
473220,
332708,
1215738,
474087,
426260,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --save current cast bar color before changing it later\n    envTable.OldCastbarColor = unitFrame.castBar:GetColor()\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.ActorType == \"enemyplayer\" or unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"friendlynpc\" ) then\n        return\n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    --set color back to what it was before\n    unitFrame.castBar:SetColor(Plater:ParseColors(envTable.OldCastbarColor))\n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (unitFrame.ActorType == \"enemyplayer\" or unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"friendlynpc\" ) then\n        return\n    end\n    \n    if scriptTable.config.interruptSoundToggle then\n        PlaySoundFile(scriptTable.config.interruptSound, \"Master\")\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    --Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    unitFrame.castBar:SetColor(Plater:ParseColors(scriptTable.config.castbarColor))\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1743259712,
["Icon"] = 1305153,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --save current cast bar color before changing it later\n    envTable.OldCastbarColor = unitFrame.castBar:GetColor()\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 1966,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "interruptSoundToggle",
["Value"] = false,
["Name"] = "Play Sound On Spell Cast",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Plays \"Interrupt\" Sound When Spell Casted",
},
{
["Type"] = 8,
["Key"] = "interruptSound",
["Value"] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Interrupt.ogg",
["Name"] = "Choose Sound",
["Icon"] = "Interface\\AddOns\\Plater\\images\\options_audio_dropdown.png",
["Desc"] = "Choose The Sound Played",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "blank space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (unitFrame.ActorType == \"enemyplayer\" or unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"friendlynpc\" ) then\n        return\n    end\n    \n    if scriptTable.config.interruptSoundToggle then\n        PlaySoundFile(scriptTable.config.interruptSound, \"Master\")\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    --Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    unitFrame.castBar:SetColor(Plater:ParseColors(scriptTable.config.castbarColor))\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Must Interrupt TWW S2",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
387955,
387615,
387606,
225100,
211401,
211470,
192563,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
263365,
395859,
395872,
397914,
209410,
392924,
397889,
153395,
265089,
278755,
266106,
272183,
265523,
202181,
374080,
400386,
209413,
207980,
257397,
257736,
382787,
369602,
369465,
381593,
265091,
265433,
382791,
376780,
257784,
88010,
410870,
266209,
342797,
413044,
204243,
279118,
255041,
259572,
200630,
225562,
201399,
264390,
265346,
263959,
278444,
265876,
264407,
266225,
415770,
415437,
412922,
417481,
418200,
411300,
412378,
412233,
407891,
416139,
227913,
164965,
164887,
168082,
427460,
429176,
271174,
165213,
169839,
413607,
388392,
388863,
396640,
377389,
387975,
387564,
375596,
386546,
384365,
386025,
386024,
386015,
387125,
387411,
387596,
384808,
373395,
397394,
372743,
384194,
373017,
367500,
367503,
377950,
372711,
374544,
385029,
384633,
374339,
374045,
395694,
374563,
374699,
376171,
377341,
377402,
395427,
372223,
384161,
378282,
369675,
369365,
369411,
436841,
392451,
434802,
434793,
436322,
448248,
448047,
433841,
443430,
443433,
442536,
452162,
453840,
431309,
450756,
451097,
431333,
429545,
445207,
429109,
322938,
324914,
326046,
340544,
337235,
322450,
335143,
324293,
327130,
256957,
275826,
272571,
454440,
451871,
76711,
324776,
427356,
432959,
426145,
427157,
338353,
442210,
449455,
377488,
386549,
1214468,
463058,
1214780,
462771,
471733,
428019,
425536,
424322,
426295,
422541,
427176,
424420,
424419,
423051,
444743,
437721,
441627,
440687,
427260,
341902,
330868,
342675,
341969,
341977,
280604,
269302,
263202,
271579,
268702,
293729,
301088,
441351,
268797,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.ActorType == \"enemyplayer\" or unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"friendlynpc\" ) then\n        return\n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    --set color back to what it was before\n    unitFrame.castBar:SetColor(Plater:ParseColors(envTable.OldCastbarColor))\n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1741041039,
["Icon"] = 136048,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 253,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Unit - Show Energy [Plater]",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1741041039,
["Icon"] = 136048,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 146,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "UnitPower [Plater]",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
["Desc"] = "Show the energy amount above the nameplate",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Temp_Initialization"] = "					function (scriptTable)\n						--insert code here\n						\n					end\n				",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1743963395,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 645,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["Name"] = "Aura - Buff Alert [Plater]",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
398151,
375596,
377738,
378149,
282801,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1741169884,
["Icon"] = 236209,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 34,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Aura While Casting [P]",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1741042861,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tankbuster.png",
["Enabled"] = true,
["Revision"] = 1285,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Abilities casted on the tank.",
["NpcNames"] = {
},
["SpellIds"] = {
280604,
1215411,
1215065,
331316,
320644,
330586,
323515,
324079,
434773,
432229,
439031,
473351,
459799,
469478,
465666,
466190,
448485,
424414,
448515,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Tankbuster [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.1098039299249649,
0.1137254983186722,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 2,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 10,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --don't execute if the player is not the tank\n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.agonyFlash = envTable.agonyFlash or Plater.CreateFlash (unitFrame.healthBar, 0.5, scriptTable.config.threshold * 2, scriptTable.config.agonyColor)\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame)\n    envTable.agonyFlash:Stop()\nend\n\n\n",
["OptionsValues"] = {
["threshold"] = 8,
["agonyColor"] = {
0.2235294282436371,
0.4274510145187378,
1,
1,
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, scriptTable.config.agonyColor)\n    if envTable._RemainingTime <=scriptTable.config.threshold  then\n        envTable.agonyFlash:Play()\n    else\n        envTable.agonyFlash:Stop()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1744399182,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \n    \n    \nend",
["url"] = "https://wago.io/WbMKwW5j5/3",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame)\n    envTable.agonyFlash:Stop()\nend\n\n\n",
["Enabled"] = false,
["Revision"] = 174,
["Options"] = {
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "The threshold for remaining duration to begin flashing.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "threshold",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash when time remaining",
},
{
["Type"] = 1,
["Name"] = "Agony applied color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "agonyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.agonyFlash = envTable.agonyFlash or Plater.CreateFlash (unitFrame.healthBar, 0.5, scriptTable.config.threshold * 2, scriptTable.config.agonyColor)\nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n",
["Author"] = "Nemzi-Sargeras",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \n    \n    \nend",
["Desc"] = "Created by Nemzi-Sargeras",
["SpellIds"] = {
285135,
295425,
441277,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.SetNameplateColor (unitFrame, scriptTable.config.agonyColor)\n    if envTable._RemainingTime <=scriptTable.config.threshold  then\n        envTable.agonyFlash:Play()\n    else\n        envTable.agonyFlash:Stop()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Agony Tracker",
["PlaterCore"] = 1,
["Prio"] = 99,
["version"] = 3,
["semver"] = "1.0.2",
["Icon"] = 136139,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    -- Initialize the tracking spells table\n    -- This caches the DoT information when the script first loads\n    -- We'll rebuild it whenever settings change\n    envTable.trackingSpells = {}\n\n    -- Populate tracking spells from DotMaster config\n    if DotMaster and DotMaster.dmspellsdb then\n        local _, playerClass = UnitClass(\"player\")\n        for spellID, config in pairs(DotMaster.dmspellsdb) do\n            if config.enabled == 1 and config.wowclass == playerClass then\n                envTable.trackingSpells[spellID] = {\n                    id = spellID,\n                    name = config.spellname or \"Unknown\",\n                    priority = config.priority or 999,\n                    color = config.color or {1, 0, 1, 1}\n                }\n            end\n        end\n    end\nend\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    -- Reset nameplate color if needed when hidden\n    if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n        Plater.RefreshNameplateColor(unitFrame)\n        DotMaster.coloredPlates[unitId] = nil\n    end\nend\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    -- Run at 60 FPS\n    self.ThrottleUpdate = 0.016\n\n    -- Use cached spell list instead of rebuilding every frame\n    local trackingSpells = envTable.trackingSpells or {}\n\n    -- Check for DoTs on this nameplate\n    local hasDoT = false\n    local bestColor = nil\n    local bestPriority = 9999\n\n    for spellID, spellData in pairs(trackingSpells) do\n        if Plater.NameplateHasAura(unitFrame, spellID) then\n            if spellData.priority < bestPriority then\n                hasDoT = true\n                bestColor = spellData.color\n                bestPriority = spellData.priority\n            end\n        end\n    end\n\n    -- Apply color if needed\n    if hasDoT and bestColor then\n        -- We have a DoT, apply DotMaster color\n        if DotMaster.coloredPlates then\n            DotMaster.coloredPlates[unitId] = true\n        end\n        Plater.SetNameplateColor(unitFrame, bestColor[1], bestColor[2], bestColor[3], bestColor[4] or 1)\n    else\n        -- No DotMaster DoT found for this unit\n        if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n            Plater.RefreshNameplateColor(unitFrame)\n            DotMaster.coloredPlates[unitId] = nil\n        end\n    end\nend\n",
["Time"] = 1747067156,
["Icon"] = "Interface\\Icons\\Spell_Shadow_ShadowWordPain",
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["Author"] = "Jervaise",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    -- This is called when the script first runs for a nameplate\n\n    -- Rebuild tracking spells in case config changed\n    envTable.trackingSpells = {}\n\n    if DotMaster and DotMaster.dmspellsdb then\n        local _, playerClass = UnitClass(\"player\")\n        for spellID, config in pairs(DotMaster.dmspellsdb) do\n            if config.enabled == 1 and config.wowclass == playerClass then\n                envTable.trackingSpells[spellID] = {\n                    id = spellID,\n                    name = config.spellname or \"Unknown\",\n                    priority = config.priority or 999,\n                    color = config.color or {1, 0, 1, 1}\n                }\n            end\n        end\n    end\nend\n",
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["SpellIds"] = {
34914,
589,
"trackers",
},
["Desc"] = "Colors nameplates based on DoTs tracked by DotMaster",
},
},
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:4347",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateOtherBottomInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowEnemies"] = "[C]: ?\n[C]: in function 'SetCVar'\n[Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua]:76: in function 'SetValue'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua]:264: in function 'SetValueDerived'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua]:110: in function 'ApplyValue'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua]:86: in function 'SetValue'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Settings.lua]:224: in function 'SetValue'\n[NAMEPLATES]:6: in function <[string \"NAMEPLATES\"]:1>\n",
["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4347",
["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowPersonalCooldowns"] = "Interface/AddOns/Plater/Plater.lua:4347",
["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowEnemyGuardians"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowFriends"] = "[C]: ?\n[C]: in function 'SetCVar'\n[Interface/AddOns/Blizzard_SharedXMLBase/CvarUtil.lua]:76: in function 'SetValue'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua]:264: in function 'SetValueDerived'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua]:110: in function 'ApplyValue'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua]:86: in function 'SetValue'\n[Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Settings.lua]:224: in function 'SetValue'\n[FRIENDNAMEPLATES]:6: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
["nameplateShowEnemyTotems"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:4347",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateLargeBottomInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateMinScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplatePlayerMaxDistance"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowAll"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:1342",
["nameplateShowFriendlyBuffs"] = "Interface/AddOns/Plater/Plater.lua:4347",
},
["aura_cache_by_name"] = {
["shard of bek"] = {
355721,
},
["decomposing aura"] = {
199720,
199721,
228581,
232352,
},
["soulletting ruby"] = {
345801,
},
["necrotic aura"] = {
55593,
199642,
201752,
201753,
214968,
228583,
305621,
},
["chaos brand"] = {
1490,
255260,
281242,
},
["mindgames"] = {
323673,
323701,
323705,
323706,
323707,
337051,
375901,
375902,
375903,
375904,
375905,
},
["ancient flame"] = {
144691,
144695,
144699,
295365,
295367,
295369,
295372,
295381,
299348,
299350,
303380,
},
["idol of n'zoth"] = {
373280,
},
["azerite globules"] = {
266936,
279955,
279956,
279958,
},
["death and madness"] = {
321291,
321973,
322098,
},
["mind flay"] = {
15407,
16568,
17165,
22919,
23953,
26044,
26143,
28310,
29407,
29570,
32417,
35507,
37276,
37330,
37621,
38243,
40842,
42396,
43512,
46562,
52586,
54339,
54805,
57779,
57941,
59367,
59974,
60006,
60472,
65488,
78751,
79541,
79711,
89032,
91134,
103024,
129033,
144293,
149984,
150886,
150893,
154125,
164445,
172670,
183324,
189873,
193473,
193635,
196508,
196509,
201520,
202894,
203037,
203313,
203375,
208697,
216513,
218510,
222075,
234696,
241934,
254123,
260182,
260304,
263117,
264892,
271649,
274019,
274032,
277358,
277521,
278311,
284414,
290402,
292974,
299301,
303566,
306391,
308172,
308884,
308885,
310552,
310555,
312526,
312679,
314187,
314188,
314592,
315949,
316835,
317490,
319027,
321330,
394167,
406078,
406083,
406182,
406231,
},
["exsanguinated"] = {
294100,
328897,
356372,
},
["mind sear"] = {
32000,
36447,
60440,
60441,
85643,
85647,
135513,
157170,
157172,
172877,
172878,
177402,
177403,
284430,
284431,
294009,
294018,
344752,
344754,
394976,
394979,
},
["scouring touch"] = {
356329,
},
["hungering void"] = {
339426,
339958,
339969,
339980,
345218,
345219,
},
["mind flay: insanity"] = {
391401,
391403,
},
["inspire"] = {
19779,
228294,
228295,
235728,
256538,
259938,
274294,
281449,
308887,
309799,
325937,
325942,
},
["echoing void"] = {
307232,
307236,
317014,
317020,
317022,
317029,
318280,
318485,
318486,
373281,
373304,
373305,
},
["reaping flames"] = {
310690,
310705,
310710,
310711,
311194,
311195,
311202,
311947,
311959,
311964,
},
["void torrent"] = {
205065,
214860,
263165,
289577,
304969,
305036,
307863,
307866,
317581,
317582,
317583,
},
["n'zoth"] = {
312521,
316763,
},
["scouring"] = {
305476,
},
},
["cast_statusbar_fadein_time"] = 0.0099999997764826,
["target_shady_enabled"] = false,
["aura2_y_offset"] = 3,
["buffs_on_aura2"] = true,
["health_selection_overlay"] = "BuiMelli",
["expansion_triggerwipe"] = {
[10] = true,
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.6156862745098,
0,
0.007843137254902,
0.96000000089407,
},
["hide_blizzard_castbar"] = true,
["npc_cache"] = {
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[98177] = {
"Glayvianna Soulrender",
"Vault of the Wardens",
"enUS",
},
[225204] = {
"Zekvir",
"Zekvir's Lair",
},
[230322] = {
"Stix Bunkjunker",
"Liberation of Undermine",
"enUS",
},
[210108] = {
"E.D.N.A.",
"The Stonevault",
"enUS",
},
[220599] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[91781] = {
"Hatecoil Warrior",
"Khaz Algar",
"enUS",
},
[212412] = {
"Sootsnout",
"Darkflame Cleft",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[219066] = {
"Afflicted Civilian",
"The Rookery",
"enUS",
},
[217531] = {
"Ixin",
"Ara-Kara, City of Echoes",
"enUS",
},
[91782] = {
"Hatecoil Crusher",
"Eye of Azshara",
"enUS",
},
[235187] = {
"Voltaic Image",
"Liberation of Undermine",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
"enUS",
},
[217533] = {
"Atik",
"Ara-Kara, City of Echoes",
"enUS",
},
[174802] = {
"Venomous Sniper",
"Plaguefall",
},
[91783] = {
"Hatecoil Stormweaver",
"Eye of Azshara",
"enUS",
},
[416] = {
"Zornip",
"Liberation of Undermine",
"enUS",
},
[228537] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
"enUS",
},
[131817] = {
"Cragmaw the Infested",
"The Underrot",
},
[91784] = {
"Warlord Parjesh",
"Eye of Azshara",
"enUS",
},
[236982] = {
"Darkfuse Soldier",
"Operation: Floodgate",
"enUS",
},
[234168] = {
"The Underpin",
"Demolition Dome",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[152033] = {
"Inconspicuous Plant",
"Operation: Mechagon",
"enUS",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
},
[228540] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[102404] = {
"Stoneclaw Grubmaster",
"Neltharion's Lair",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
},
[187602] = {
"Qalashi Scaleripper",
"10.0 Dragon Isles",
},
[238011] = {
"Trashmaster Blazedump",
"Liberation of Undermine",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
},
[91787] = {
"Cove Seagull",
"Eye of Azshara",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[233152] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[136688] = {
"Fanatical Driller",
"The MOTHERLODE!!",
"enUS",
},
[91789] = {
"Lady Hatecoil",
"Eye of Azshara",
"enUS",
},
[220616] = {
"Corridor Sleeper",
"Darkflame Cleft",
"enUS",
},
[233154] = {
"Stagehand",
"Liberation of Undermine",
"enUS",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[98954] = {
"Felsworn Myrmidon",
"Vault of the Wardens",
"enUS",
},
[225479] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[91790] = {
"Mak'rana Siltwalker",
"Eye of Azshara",
"enUS",
},
[131318] = {
"Elder Leaxa",
"The Underrot",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
},
[137716] = {
"Bottom Feeder",
"The MOTHERLODE!!",
"enUS",
},
[95885] = {
"Tirathon Saltheril",
"Vault of the Wardens",
"enUS",
},
[237252] = {
"Underpin's Friend's Agent",
"Mycomancer Cavern",
"enUS",
},
[97677] = {
"Barbed Spiderling",
"Vault of the Wardens",
"enUS",
},
[95886] = {
"Ash'Golm",
"Vault of the Wardens",
"enUS",
},
[31216] = {
"Giggalfiaß",
"Theater of Pain",
"enUS",
},
[100364] = {
"Spirit of Vengeance",
"Vault of the Wardens",
"enUS",
},
[97678] = {
"Aranasi Broodmother",
"Vault of the Wardens",
"enUS",
},
[95887] = {
"Glazer",
"Vault of the Wardens",
"enUS",
},
[96015] = {
"Inquisitor Tormentorum",
"Vault of the Wardens",
"enUS",
},
[222927] = {
"Sacred Flame Vintner",
"Khaz Algar",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"Fungal Folly",
"enUS",
},
[229069] = {
"Mechadrone Sniper",
"Operation: Floodgate",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
"enUS",
},
[234443] = {
"Руббио",
"Theater of Pain",
"enUS",
},
[91794] = {
"Saltscale Lurker",
"Eye of Azshara",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
},
[218324] = {
"Nakt",
"Ara-Kara, City of Echoes",
"enUS",
},
[237516] = {
"Geargrinder Biker",
"Liberation of Undermine",
"enUS",
},
[96657] = {
"Blade Dancer Illianna",
"Vault of the Wardens",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
},
[103822] = {
"Treant",
"Liberation of Undermine",
"enUS",
},
[91796] = {
"Skrog Wavecrasher",
"Eye of Azshara",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[118791] = {
"Sturdy Love Fool",
"Priory of the Sacred Flame",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[97170] = {
"Hatecoil Wavebinder",
"Eye of Azshara",
"enUS",
},
[225493] = {
"Doomguard",
"Theater of Pain",
"enUS",
},
[105742] = {
"Turbax",
"Neltharion's Lair",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[91797] = {
"King Deepbeard",
"Eye of Azshara",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[97171] = {
"Hatecoil Arcanist",
"Eye of Azshara",
"enUS",
},
[231380] = {
"Undercrawler",
"Operation: Floodgate",
"enUS",
},
[105743] = {
"Whipsnap",
"Neltharion's Lair",
"enUS",
},
[130435] = {
"Addled Thug",
"The MOTHERLODE!!",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[98963] = {
"Blazing Imp",
"Vault of the Wardens",
"enUS",
},
[97172] = {
"Saltsea Droplet",
"Eye of Azshara",
"enUS",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[105744] = {
"Blaze",
"Neltharion's Lair",
"enUS",
},
[130436] = {
"Off-Duty Laborer",
"The MOTHERLODE!!",
"enUS",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[224219] = {
"Twilight Earthcaller",
"Grim Batol",
"enUS",
},
[97173] = {
"Restless Tides",
"Eye of Azshara",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[130437] = {
"Mine Rat",
"The MOTHERLODE!!",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
},
[224732] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[231385] = {
"Darkfuse Inspector",
"Operation: Floodgate",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[237272] = {
"Underpin's Friend's Broker",
"Mycomancer Cavern",
"enUS",
},
[235737] = {
"Bomb Tail",
"Liberation of Undermine",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[170234] = {
"Oppressive Banner",
"Theater of Pain",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[151812] = {
"Detect-o-Bot",
"Operation: Mechagon",
"enUS",
},
[234204] = {
"Congealed Clot",
"Excavation Site 9",
"enUS",
},
[216293] = {
"Trilling Attendant",
"Ara-Kara, City of Echoes",
"enUS",
},
[220643] = {
"Deepwater Makura",
"The Sinkhole",
"enUS",
},
[239834] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[234205] = {
"Corruption Parasite",
"Excavation Site 9",
"enUS",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
},
[210153] = {
"Ol' Waxbeard",
"Darkflame Cleft",
"enUS",
},
[237276] = {
"Underpin's Friend's Mother",
"Earthcrawl Mines",
"enUS",
},
[234206] = {
"Nightmare Crawler",
"Excavation Site 9",
"enUS",
},
[239836] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[234207] = {
"Tainted Feaster",
"Excavation Site 9",
"enUS",
},
[102295] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[234208] = {
"Hideous Amalgamation",
"Excavation Site 9",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[129802] = {
"Earthrager",
"The MOTHERLODE!!",
"enUS",
},
[214762] = {
"Nightfall Commander",
"The Dawnbreaker",
"enUS",
},
[229603] = {
"Darkfuse Flare",
"Liberation of Undermine",
"enUS",
},
[234209] = {
"Coagulated Mass",
"Excavation Site 9",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
},
[214251] = {
"Kobyss Witherer",
"Tak-Rethan Abyss",
"enUS",
},
[104215] = {
"Patrol Captain Gerdo",
"Court of Stars",
"enUS",
},
[100249] = {
"Channeler Varisz",
"Eye of Azshara",
"enUS",
},
[162309] = {
"Kul'tharok",
"Theater of Pain",
"enUS",
},
[234210] = {
"Silent Slitherer",
"Excavation Site 9",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[233955] = {
"Charred Fanatic",
"Liberation of Undermine",
"enUS",
},
[213741] = {
"Voidstone Awakened",
"The Rookery",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
},
[96028] = {
"Wrath of Azshara",
"Eye of Azshara",
"enUS",
},
[100250] = {
"Binder Ashioi",
"Eye of Azshara",
"enUS",
},
[233956] = {
"Wild Thunderbolt",
"Liberation of Undermine",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
},
[104217] = {
"Talixae Flamewreath",
"Court of Stars",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
},
[220141] = {
"Royal Jelly Purveyor",
"Cinderbrew Meadery",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
},
[104218] = {
"Advisor Melandrus",
"Court of Stars",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[229356] = {
"Imperious Blaster",
"Liberation of Undermine",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[238569] = {
"Mini Amp",
"Liberation of Undermine",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[40484] = {
"Erudax",
"Grim Batol",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[213751] = {
"Dynamite Mine Cart",
"Darkflame Cleft",
"enUS",
},
[220148] = {
"Gem Hoarder",
"The Dread Pit",
"enUS",
},
[102430] = {
"Tarspitter Slug",
"Neltharion's Lair",
"enUS",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[222964] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[218103] = {
"Nerubian Lord",
"Earthcrawl Mines",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[229363] = {
"Imperious Soundwave",
"Liberation of Undermine",
"enUS",
},
[229619] = {
"Blazing Fueldemon",
"Liberation of Undermine",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[229364] = {
"Imperious Deathtone",
"Liberation of Undermine",
"enUS",
},
[229365] = {
"Imperious Mouthpiece",
"Liberation of Undermine",
"enUS",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
},
[229366] = {
"Stagehand",
"Liberation of Undermine",
"enUS",
},
[224249] = {
"Twilight Lavabender",
"Grim Batol",
"enUS",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
"enUS",
},
[223994] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[238068] = {
"Geargrinder Rager",
"Liberation of Undermine",
"enUS",
},
[223995] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[215040] = {
"Kobyss Bonechewer",
"Tak-Rethan Abyss",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
},
[220158] = {
"Under-Lord Vik'tis",
"The Dread Pit",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
},
[106785] = {
"Bitterbrine Slave",
"Eye of Azshara",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
},
[221183] = {
"Barrel of Fireworks",
"Operation: Floodgate",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
},
[106786] = {
"Bitterbrine Slave",
"Eye of Azshara",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[237305] = {
"Underpin's Friend of a Friend",
"Earthcrawl Mines",
"enUS",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[106787] = {
"Bitterbrine Slave",
"Eye of Azshara",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[186644] = {
"Leymor",
"The Azure Vault",
},
[220164] = {
"Darkened Husk",
"The Dread Pit",
"enUS",
},
[216326] = {
"Ascended Neophyte",
"City of Threads",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
"enUS",
},
[102566] = {
"Grimhorn the Enslaver",
"Vault of the Wardens",
"enUS",
},
[231935] = {
"Junkyard Hyena",
"Liberation of Undermine",
"enUS",
},
[211977] = {
"Pack Mole",
"Darkflame Cleft",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"Earthcrawl Mines",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[225539] = {
"Kobold Ambusher",
"Kriegval's Rest",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[216584] = {
"Nerubian Captain",
"Earthcrawl Mines",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[227843] = {
"Bloodfang Hyena",
"Liberation of Undermine",
"enUS",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[220423] = {
"Retired Lord Vul'azak",
"City of Threads",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
},
[233474] = {
"Gallagio Goon",
"Liberation of Undermine",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[163621] = {
"Goregrind",
"The Necrotic Wake",
"enUS",
},
[223497] = {
"Worker Bee",
"Cinderbrew Meadery",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[223498] = {
"Bee-let",
"Cinderbrew Meadery",
"enUS",
},
[65310] = {
"Turnip Punching Bag",
"Priory of the Sacred Flame",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[213008] = {
"Wriggling Darkspawn",
"Darkflame Cleft",
"enUS",
},
[231176] = {
"Scaffolding",
"Operation: Floodgate",
"enUS",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
},
[225804] = {
"Geargrinder Biker",
"Liberation of Undermine",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[99629] = {
"Bitterbrine Scavenger",
"Eye of Azshara",
"enUS",
},
[216338] = {
"Hulking Bloodguard",
"Ara-Kara, City of Echoes",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
},
[224271] = {
"Twilight Warlock",
"Grim Batol",
"enUS",
},
[216339] = {
"Sureki Unnaturaler",
"City of Threads",
"enUS",
},
[214548] = {
"Slippery Syphoner",
"Tak-Rethan Abyss",
"enUS",
},
[210966] = {
"Sureki Webmage",
"The Dawnbreaker",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
},
[216340] = {
"Sentry Stagshell",
"Ara-Kara, City of Echoes",
"enUS",
},
[220946] = {
"Venture Co. Honey Harvester",
"Cinderbrew Meadery",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
},
[214550] = {
"Deepwater Snapper",
"Tak-Rethan Abyss",
"enUS",
},
[107435] = {
"Suspicious Noble",
"Court of Stars",
"enUS",
},
[216342] = {
"Skittering Assistant",
"City of Threads",
"enUS",
},
[230927] = {
"Darkfuse Shredder Pilot",
"Operation: Floodgate",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
},
[223253] = {
"Bloodstained Webmage",
"Ara-Kara, City of Echoes",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[163891] = {
"Rotmarrow Slime",
"Plaguefall",
},
[211228] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[163892] = {
"Rotting Slimeclaw",
"Plaguefall",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
"enUS",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[237587] = {
"Mechanized Peacekeeper",
"Liberation of Undermine",
"enUS",
},
[223770] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
"enUS",
},
[137029] = {
"Ordnance Specialist",
"The MOTHERLODE!!",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
},
[136006] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
"enUS",
},
[164920] = {
"Drust Soulcleaver",
"Mists of Tirna Scithe",
},
[223772] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
"enUS",
},
[196394] = {
"Tuskarr Training Dummy",
"Theater of Pain",
"enUS",
},
[135240] = {
"Soul Essence",
"UNKNOWN",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
},
[223773] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
"enUS",
},
[225821] = {
"The Geargrinder",
"Liberation of Undermine",
"enUS",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
},
[167994] = {
"Ossified Conscript",
"Theater of Pain",
"enUS",
},
[223775] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[223776] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[231197] = {
"Bubbles",
"Operation: Floodgate",
"enUS",
},
[225568] = {
"Kobold Guardian",
"Kriegval's Rest",
"enUS",
},
[223777] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[220195] = {
"Sureki Silkbinder",
"City of Threads",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[220196] = {
"Herald of Ansurek",
"City of Threads",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
"enUS",
},
[238108] = {
"Cement Shoes",
"Liberation of Undermine",
"enUS",
},
[138061] = {
"Venture Co. Longshoreman",
"The MOTHERLODE!!",
"enUS",
},
[220197] = {
"Royal Swarmguard",
"City of Threads",
"enUS",
},
[233247] = {
"Imperious Mixer",
"Liberation of Undermine",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"The Shadowlands",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
},
[102583] = {
"Fel Scorcher",
"Vault of the Wardens",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
"enUS",
},
[98362] = {
"Troubled Soul",
"Khaz Algar (Surface)",
"enUS",
},
[102584] = {
"Malignant Defiler",
"Vault of the Wardens",
"enUS",
},
[210478] = {
"Infected Beast",
"Fungal Folly",
"enUS",
},
[232228] = {
"Waterworks Bottomfeeder",
"Operation: Floodgate",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[210479] = {
"Carnivorous Lasher",
"Fungal Folly",
"enUS",
},
[196406] = {
"Rubbery Fish Head",
"The MOTHERLODE!!",
"enUS",
},
[92350] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[213806] = {
"Splotch",
"Throne of the Tides",
},
[113204] = {
"Scaly",
"Neltharion's Lair",
"enUS",
},
[167493] = {
"Venomous Sniper",
"Plaguefall",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
},
[228648] = {
"Rik Reverb",
"Liberation of Undermine",
"enUS",
},
[133463] = {
"Venture Co. War Machine",
"The MOTHERLODE!!",
"enUS",
},
[229161] = {
"Darkfuse Brute",
"Liberation of Undermine",
"enUS",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
"enUS",
},
[218671] = {
"Venture Co. Pyromaniac",
"Cinderbrew Meadery",
"enUS",
},
[229162] = {
"Darkfuse Houndmaster",
"Liberation of Undermine",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[231978] = {
"Sharpshot Sentry",
"Liberation of Undermine",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[41139] = {
"Naz'jar Oracle",
"Throne of the Tides",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[101437] = {
"Burning Geode",
"Neltharion's Lair",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
},
[208441] = {
"Wasserelementar",
"Theater of Pain",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[228144] = {
"Darkfuse Soldier",
"Operation: Floodgate",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[91332] = {
"Stoneclaw Hunter",
"Neltharion's Lair",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[223541] = {
"Stolen Loader",
"Mycomancer Cavern",
},
[92612] = {
"Mightstone Breaker",
"Neltharion's Lair",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[17252] = {
"Khilgorod",
"Theater of Pain",
"enUS",
},
[95939] = {
"Skrog Tidestomper",
"Eye of Azshara",
"enUS",
},
[216634] = {
"Swooping Spreader",
"Earthcrawl Mines",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[163157] = {
"Amarth",
"The Necrotic Wake",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
},
[138338] = {
"Reanimated Guardian",
"The Underrot",
},
[95940] = {
"Bitterbrine Scavenger",
"Eye of Azshara",
"enUS",
},
[220730] = {
"Royal Venomshell",
"City of Threads",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[229686] = {
"Venture Co. Surveyor",
"Operation: Floodgate",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
},
[229175] = {
"Darkfuse Stunner",
"Liberation of Undermine",
"enUS",
},
[99651] = {
"Faceless Voidcaster",
"Vault of the Wardens",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
"enUS",
},
[208450] = {
"Wandering Candle",
"Darkflame Cleft",
"enUS",
},
[231223] = {
"Disturbed Kelp",
"Operation: Floodgate",
"enUS",
},
[211777] = {
"Spitfire Fusetender",
"Kriegval's Rest",
"enUS",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[237109] = {
"Gallagio Customer Care",
"Liberation of Undermine",
"enUS",
},
[229177] = {
"Torq",
"Liberation of Undermine",
"enUS",
},
[229433] = {
"Skiggy Muckheimer",
"Liberation of Undermine",
"enUS",
},
[219454] = {
"Crazed Abomination",
"The Underkeep",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
},
[170838] = {
"Unyielding Contender",
"Theater of Pain",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[132713] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[229434] = {
"Melbo the Magnificent",
"Liberation of Undermine",
"enUS",
},
[214338] = {
"Kobyss Spearfisher",
"Tak-Rethan Abyss",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[151649] = {
"Defense Bot Mk I",
"Operation: Mechagon",
"enUS",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
"enUS",
},
[234553] = {
"Dark Walker",
"Excavation Site 9",
"enUS",
},
[173655] = {
"Mistveil Matriarch",
"Mists of Tirna Scithe",
"enUS",
},
[229180] = {
"Darkfuse Gunner",
"Liberation of Undermine",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[229181] = {
"Flarendo",
"Liberation of Undermine",
"enUS",
},
[229437] = {
"Gallagio Dealer",
"Liberation of Undermine",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
},
[144231] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
"enUS",
},
[208456] = {
"Shuffling Horror",
"Darkflame Cleft",
"enUS",
},
[229438] = {
"Gallagio Jackbot",
"Liberation of Undermine",
"enUS",
},
[129208] = {
"Dread Captain Lockwood",
"Siege of Boralus",
"enUS",
},
[227903] = {
"Darkfuse Growler",
"Liberation of Undermine",
"enUS",
},
[144232] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
"enUS",
},
[208457] = {
"Skittering Darkness",
"Darkflame Cleft",
"enUS",
},
[229439] = {
"Gallagio Security",
"Liberation of Undermine",
"enUS",
},
[225601] = {
"Webbed Victim",
"The Dawnbreaker",
"enUS",
},
[99655] = {
"Void-Touched Juggernaut",
"Vault of the Wardens",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
"enUS",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[214343] = {
"Kobyss Trickster",
"Tak-Rethan Abyss",
"enUS",
},
[229440] = {
"Princeguard Muscle",
"Liberation of Undermine",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"Kriegval's Rest",
"enUS",
},
[229953] = {
"Mug'Zee",
"Liberation of Undermine",
"enUS",
},
[216648] = {
"Nx",
"City of Threads",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[216649] = {
"Vx",
"City of Threads",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
},
[151657] = {
"Bomb Tonk",
"Operation: Mechagon",
"enUS",
},
[225605] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[99657] = {
"Deranged Mindflayer",
"Vault of the Wardens",
"enUS",
},
[95947] = {
"Mak'rana Hardshell",
"Eye of Azshara",
"enUS",
},
[151658] = {
"Strider Tonk",
"Operation: Mechagon",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
},
[214348] = {
"Undersea Abomination",
"Tak-Rethan Abyss",
"enUS",
},
[210510] = {
"Flimflam the Cowardly",
"Darkflame Cleft",
"enUS",
},
[151659] = {
"Rocket Tonk",
"Operation: Mechagon",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
"enUS",
},
[134005] = {
"Shalebiter",
"The MOTHERLODE!!",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[223562] = {
"Brew Drop",
"Cinderbrew Meadery",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
},
[228424] = {
"Darkfuse Mechadrone",
"Operation: Floodgate",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
},
[227145] = {
"Waterworks Crocolisk",
"Operation: Floodgate",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
},
[231496] = {
"Venture Co. Diver",
"Operation: Floodgate",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
},
[231497] = {
"Bombshell Crab",
"Operation: Floodgate",
"enUS",
},
[129214] = {
"Coin-Operated Crowd Pummeler",
"The MOTHERLODE!!",
"enUS",
},
[219983] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[219984] = {
"Xeph'itik",
"City of Threads",
"enUS",
},
[144246] = {
"K.U.-J.0.",
"Operation: Mechagon",
"enUS",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
"enUS",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[208728] = {
"Treasure Wraith",
"Fungal Folly",
"enUS",
},
[144248] = {
"Head Machinist Sparkflux",
"Operation: Mechagon",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
},
[210264] = {
"Bee Wrangler",
"Cinderbrew Meadery",
"enUS",
},
[167533] = {
"Advent Nevermore",
"Theater of Pain",
"enUS",
},
[217429] = {
"Overfiend",
"Liberation of Undermine",
"enUS",
},
[219732] = {
"Jervaidke",
"The Sinkhole",
"enUS",
},
[144249] = {
"Omega Buster",
"Operation: Mechagon",
"enUS",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[167534] = {
"Rek the Hardened",
"Theater of Pain",
"enUS",
},
[239435] = {
"Darkfuse Thug",
"Liberation of Undermine",
"enUS",
},
[98384] = {
"Razormouth",
"Neltharion's Lair",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[129601] = {
"Cutwater Harpooner",
"Freehold",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[210267] = {
"I'pa",
"Cinderbrew Meadery",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[207453] = {
"Fungal Rotspreader",
"Mycomancer Cavern",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
},
[204127] = {
"Kobold Taskfinder",
"Kriegval's Rest",
"enUS",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[207454] = {
"Fungal Gutter",
"Fungal Folly",
"enUS",
},
[210269] = {
"Hired Muscle",
"Cinderbrew Meadery",
"enUS",
},
[167538] = {
"Dokigg the Brutalizer",
"Theater of Pain",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
},
[138369] = {
"Footbomb Hooligan",
"The MOTHERLODE!!",
"enUS",
},
[230740] = {
"Shreddinator 3000",
"Operation: Floodgate",
"enUS",
},
[207456] = {
"Fungal Speartender",
"Fungal Folly",
"enUS",
},
[150396] = {
"Aerial Unit R-21/X",
"Operation: Mechagon",
"enUS",
},
[210271] = {
"Brew Master Aldryr",
"Cinderbrew Meadery",
"enUS",
},
[229462] = {
"Balloon",
"Liberation of Undermine",
"enUS",
},
[150397] = {
"King Mechagon",
"Operation: Mechagon",
"enUS",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
},
[228951] = {
"Nerubian Stalker",
"Earthcrawl Mines",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[237651] = {
"Lit Fuse",
"Tak-Rethan Abyss",
"enUS",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
"enUS",
},
[227929] = {
"Princeguard Demolisher",
"Liberation of Undermine",
"enUS",
},
[98900] = {
"Wyrmtongue Trickster",
"Black Rook Hold",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[228953] = {
"Skittering Intruder",
"Earthcrawl Mines",
"enUS",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
},
[203878] = {
"Kobold Mystic",
"Kriegval's Rest",
"enUS",
},
[236886] = {
"Hovering Menace",
"Mycomancer Cavern",
"enUS",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
"enUS",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[227931] = {
"Oozing Salvage",
"Liberation of Undermine",
"enUS",
},
[226396] = {
"Swampface",
"Operation: Floodgate",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[113998] = {
"Mightstone Breaker",
"Neltharion's Lair",
"enUS",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
"enUS",
},
[229212] = {
"Darkfuse Demolitionist",
"Operation: Floodgate",
"enUS",
},
[168058] = {
"Infused Quill-feather",
"Sanguine Depths",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[226398] = {
"Big M.O.M.M.A.",
"Operation: Floodgate",
"enUS",
},
[230748] = {
"Darkfuse Bloodwarper",
"Operation: Floodgate",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
},
[166524] = {
"Deathwalker",
"Theater of Pain",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[220003] = {
"Eye of the Queen",
"City of Threads",
"enUS",
},
[40320] = {
"Valiona",
"Grim Batol",
"enUS",
},
[208745] = {
"The Candle King",
"Darkflame Cleft",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
},
[236892] = {
"Treasure Crab",
"Fungal Folly",
"enUS",
},
[104277] = {
"Legion Hound",
"Court of Stars",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[226402] = {
"Bront",
"Operation: Floodgate",
"enUS",
},
[208747] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[229729] = {
"Nullbot",
"Awakening The Machine",
"enUS",
},
[223844] = {
"Covert Webmancer",
"City of Threads",
"enUS",
},
[226403] = {
"Keeza Quickfuse",
"Operation: Floodgate",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
"enUS",
},
[98521] = {
"Lord Etheldrin Ravencrest",
"Black Rook Hold",
"enUS",
},
[226404] = {
"Geezle Gigazap",
"Operation: Floodgate",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[229219] = {
"Junkyard Hobgoblin",
"Liberation of Undermine",
"enUS",
},
[220008] = {
"Cragpie",
"The Sinkhole",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
"enUS",
},
[229220] = {
"Junkyard Shredder",
"Liberation of Undermine",
"enUS",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
"enUS",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[208239] = {
"Skittering Menace",
"Earthcrawl Mines",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
"enUS",
},
[234339] = {
"Harbinger Ul'thul",
"Excavation Site 9",
"enUS",
},
[130635] = {
"Stonefury",
"The MOTHERLODE!!",
"enUS",
},
[229222] = {
"Darkfuse Melter",
"Liberation of Undermine",
"enUS",
},
[215405] = {
"Anub'zekt",
"Ara-Kara, City of Echoes",
"enUS",
},
[208241] = {
"Ankle Biter",
"Earthcrawl Mines",
"enUS",
},
[231014] = {
"Loaderbot",
"Operation: Floodgate",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
"enUS",
},
[99675] = {
"Enormous Stone Quilen",
"Vault of the Wardens",
"enUS",
},
[208242] = {
"Nerubian Darkcaster",
"Earthcrawl Mines",
"enUS",
},
[229224] = {
"Darkfuse Scrapper",
"Liberation of Undermine",
"enUS",
},
[215407] = {
"Ki'katal the Harvester",
"Ara-Kara, City of Echoes",
"enUS",
},
[208243] = {
"Nerubian Slasher",
"Earthcrawl Mines",
"enUS",
},
[99676] = {
"Mogu'shan Secret-Keeper",
"Vault of the Wardens",
"enUS",
},
[228458] = {
"One-Armed Bandit",
"Liberation of Undermine",
"enUS",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[229226] = {
"Darkfuse Junker",
"Liberation of Undermine",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
},
[208245] = {
"Skittering Swarmer",
"Earthcrawl Mines",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[229739] = {
"Malfunctioning Pylon",
"Awakening The Machine",
"enUS",
},
[171656] = {
"Venomous Sniper Captain",
"Plaguefall",
},
[231531] = {
"Territorial Bombshell",
"Liberation of Undermine",
"enUS",
},
[129231] = {
"Rixxa Fluxflame",
"The MOTHERLODE!!",
"enUS",
},
[165260] = {
"Oozing Leftovers",
"Theater of Pain",
"enUS",
},
[211062] = {
"Bill",
"Fungal Folly",
"enUS",
},
[231788] = {
"Unstable Crawler Mine",
"Liberation of Undermine",
"enUS",
},
[129232] = {
"Mogul Razdunk",
"The MOTHERLODE!!",
"enUS",
},
[219763] = {
"Mirror Master Murkna",
"The Sinkhole",
"enUS",
},
[228463] = {
"Shock Reel Assistant",
"Liberation of Undermine",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
},
[92387] = {
"Drums of War",
"Neltharion's Lair",
"enUS",
},
[210810] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[219766] = {
"Jervaidke",
"The Sinkhole",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[235631] = {
"Crawler Mine",
"The MOTHERLODE!!",
"enUS",
},
[227955] = {
"Darkfuse Skyfire",
"Liberation of Undermine",
"enUS",
},
[216441] = {
"Pale Illusion",
"Tak-Rethan Abyss",
"enUS",
},
[210812] = {
"Royal Wicklighter",
"Darkflame Cleft",
"enUS",
},
[227956] = {
"Crawler Mine",
"Liberation of Undermine",
"enUS",
},
[231027] = {
"Premium Dynamite Booty",
"Liberation of Undermine",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[144286] = {
"Asset Manager",
"The MOTHERLODE!!",
"enUS",
},
[231028] = {
"Fiery Dynamite Booty",
"Liberation of Undermine",
"enUS",
},
[164501] = {
"Mistcaller",
"Mists of Tirna Scithe",
"enUS",
},
[213885] = {
"Nightfall Dark Architect",
"The Dawnbreaker",
"enUS",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[227960] = {
"Mech Jockey",
"Liberation of Undermine",
"enUS",
},
[227961] = {
"Mechanized Peacekeeper",
"Liberation of Undermine",
"enUS",
},
[210818] = {
"Lowly Moleherd",
"Darkflame Cleft",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
},
[98533] = {
"Foul Mother",
"Vault of the Wardens",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
"enUS",
},
[213892] = {
"Nightfall Shadowmage",
"The Dawnbreaker",
"enUS",
},
[173720] = {
"Mistveil Gorgegullet",
"Mists of Tirna Scithe",
"enUS",
},
[105699] = {
"Mana Saber",
"Court of Stars",
"enUS",
},
[213893] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[214661] = {
"Goldie Baronbottom",
"Cinderbrew Meadery",
"enUS",
},
[234557] = {
"Support Rig",
"Liberation of Undermine",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
"enUS",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
"enUS",
},
[213894] = {
"Nightfall Curseblade",
"The Dawnbreaker",
"enUS",
},
[163089] = {
"Disgusting Refuse",
"Theater of Pain",
"enUS",
},
[236033] = {
"Metal Gunk",
"Operation: Mechagon",
"enUS",
},
[236823] = {
"Darkfuse Thug",
"Liberation of Undermine",
"enUS",
},
[228053] = {
"Goblin Sapper Bot",
"Liberation of Undermine",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
"enUS",
},
[216619] = {
"Orator Krix'vizk",
"City of Threads",
"enUS",
},
[213895] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[100248] = {
"Ritualist Lesha",
"Eye of Azshara",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
},
[228952] = {
"Nerubian Skulker",
"Earthcrawl Mines",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
"enUS",
},
[211061] = {
"Patreux",
"Fungal Folly",
"enUS",
},
[220504] = {
"Shadow Totem",
"Skittering Breach",
"enUS",
},
[233306] = {
"The Junkmaker",
"Liberation of Undermine",
"enUS",
},
[214920] = {
"Tasting Room Attendant",
"Cinderbrew Meadery",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
[151579] = {
"Shield Generator",
"Operation: Mechagon",
"enUS",
},
[144299] = {
"Workshop Defender",
"Operation: Mechagon",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
},
[120651] = {
"Explosives",
"Court of Stars",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
},
[229250] = {
"Venture Co. Contractor",
"Operation: Floodgate",
"enUS",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[144300] = {
"Mechagon Citizen",
"Operation: Mechagon",
"enUS",
},
[228050] = {
"Mechano Wolf",
"Liberation of Undermine",
"enUS",
},
[218865] = {
"Bee-let",
"Cinderbrew Meadery",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
},
[229251] = {
"Venture Co. Architect",
"Operation: Floodgate",
"enUS",
},
[224175] = {
"Princeguard Enforcer",
"Liberation of Undermine",
"enUS",
},
[91792] = {
"Stormwake Hydra",
"Eye of Azshara",
"enUS",
},
[96480] = {
"Viletongue Belcher",
"Vault of the Wardens",
"enUS",
},
[144301] = {
"Living Waste",
"Operation: Mechagon",
"enUS",
},
[81522] = {
"Witherbark",
"The Everbloom",
},
[210797] = {
"The Darkness",
"Darkflame Cleft",
"enUS",
},
[104295] = {
"Blazing Imp",
"Court of Stars",
"enUS",
},
[229252] = {
"Darkfuse Hyena",
"Operation: Floodgate",
"enUS",
},
[47238] = {
"Whipping Wind",
"The Vortex Pinnacle",
},
[211341] = {
"Manifested Shadow",
"The Dawnbreaker",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[214668] = {
"Venture Co. Patron",
"Cinderbrew Meadery",
"enUS",
},
[130011] = {
"Irontide Buccaneer",
"Freehold",
},
[207459] = {
"Fungal Rotcaster",
"The Spiral Weave",
"enUS",
},
[105703] = {
"Mana Wyrm",
"Court of Stars",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[144303] = {
"G.U.A.R.D.",
"Operation: Mechagon",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
"enUS",
},
[151654] = {
"Deuce Mecha-Buffer",
"Operation: Mechagon",
"enUS",
},
[211087] = {
"Speaker Shadowcrown",
"The Dawnbreaker",
"enUS",
},
[224240] = {
"Twilight Flamerender",
"Grim Batol",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[91786] = {
"Gritslime Snail",
"Eye of Azshara",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
"enUS",
},
[221102] = {
"Elder Shadeweaver",
"City of Threads",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
},
[207481] = {
"Spinshroom",
"Fungal Folly",
"enUS",
},
[231977] = {
"Darkfuse Technician",
"Liberation of Undermine",
"enUS",
},
[211089] = {
"Anub'ikkaj",
"The Dawnbreaker",
"enUS",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
"enUS",
},
[77942] = {
"Primal Storm Elemental",
"Theater of Pain",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
"enUS",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[211263] = {
"Deathscreamer Iken'tak",
"The Dawnbreaker",
"enUS",
},
[229513] = {
"Darkfuse Stunner",
"Liberation of Undermine",
"enUS",
},
[105705] = {
"Bound Energy",
"Court of Stars",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
"enUS",
},
[213905] = {
"Animated Darkness",
"The Dawnbreaker",
"enUS",
},
[130653] = {
"Wanton Sapper",
"The MOTHERLODE!!",
"enUS",
},
[230312] = {
"Volunteer Rocketeer",
"Liberation of Undermine",
"enUS",
},
[214673] = {
"Flavor Scientist",
"Cinderbrew Meadery",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
"enUS",
},
[95888] = {
"Cordana Felsong",
"Vault of the Wardens",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[129374] = {
"Scrimshaw Enforcer",
"Siege of Boralus",
"enUS",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[220815] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[167532] = {
"Heavin the Breaker",
"Theater of Pain",
"enUS",
},
[229296] = {
"Orb of Ascendance",
"Operation: Floodgate",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
"enUS",
},
[128651] = {
"Hadal Darkfathom",
"Siege of Boralus",
"enUS",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
"enUS",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[214419] = {
"Void-Cursed Crusher",
"The Rookery",
"enUS",
},
[101414] = {
"Saltscale Skulker",
"Eye of Azshara",
"enUS",
},
[167956] = {
"Dark Acolyte",
"Sanguine Depths",
},
[214209] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[230028] = {
"Darkfuse Wretch",
"Liberation of Undermine",
"enUS",
},
[218002] = {
"Benk Buzzbee",
"Cinderbrew Meadery",
"enUS",
},
[98926] = {
"Shadow Hunter",
"Vault of the Wardens",
"enUS",
},
[133007] = {
"Unbound Abomination",
"The Underrot",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[231727] = {
"1500-Pound \"Dud\"",
"Liberation of Undermine",
"enUS",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[229286] = {
"Shifty Scalper",
"Liberation of Undermine",
"enUS",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
},
[97259] = {
"Blazing Hydra Spawn",
"Eye of Azshara",
"enUS",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[96584] = {
"Immoliant Fury",
"Vault of the Wardens",
"enUS",
},
[226617] = {
"Snake",
"Fungal Folly",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[163503] = {
"Etherdiver",
"Spires of Ascension",
},
[97264] = {
"Hatecoil Shellbreaker",
"Eye of Azshara",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[230583] = {
"Sprocketmonger Lockenstock",
"Liberation of Undermine",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
},
[100713] = {
"Rockbait Fisher",
"Neltharion's Lair",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[164804] = {
"Droman Oulfarran",
"Mists of Tirna Scithe",
"enUS",
},
[238496] = {
"Slots Patron",
"Liberation of Undermine",
"enUS",
},
[137405] = {
"Gripping Terror",
"Siege of Boralus",
"enUS",
},
[213932] = {
"Sureki Militant",
"The Dawnbreaker",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[91808] = {
"Serpentrix",
"Eye of Azshara",
"enUS",
},
[214551] = {
"Wandering Gutter",
"The Sinkhole",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[231312] = {
"Venture Co. Electrician",
"Operation: Floodgate",
"enUS",
},
[228539] = {
"Nightfall Darkcaster",
"The Dawnbreaker",
"enUS",
},
[99649] = {
"Dreadlord Mendacius",
"Vault of the Wardens",
"enUS",
},
[223423] = {
"Careless Hopgoblin",
"Cinderbrew Meadery",
"enUS",
},
[213913] = {
"Kobold Flametender",
"Darkflame Cleft",
"enUS",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[236942] = {
"The Underpin",
"Excavation Site 9",
"enUS",
},
[229283] = {
"Scraps",
"Liberation of Undermine",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[229778] = {
"Automatic Ironstrider",
"Awakening The Machine",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
},
[203951] = {
"Kobold Skullface",
"Kriegval's Rest",
"enUS",
},
[234640] = {
"Globikus",
"Liberation of Undermine",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[90997] = {
"Mightstone Breaker",
"Neltharion's Lair",
"enUS",
},
[210539] = {
"Corridor Creeper",
"Darkflame Cleft",
"enUS",
},
[95920] = {
"Animated Storm",
"Eye of Azshara",
"enUS",
},
[226625] = {
"Cave Skipper",
"Fungal Folly",
"enUS",
},
[210148] = {
"Menial Laborer",
"Darkflame Cleft",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
},
[214697] = {
"Chef Chewie",
"Cinderbrew Meadery",
"enUS",
},
[219588] = {
"Yes Man",
"Cinderbrew Meadery",
"enUS",
},
[234655] = {
"Globlin",
"Liberation of Undermine",
"enUS",
},
[165189] = {
"Cat",
"Liberation of Undermine",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
"enUS",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[229281] = {
"Charred Fanatic",
"Liberation of Undermine",
"enUS",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
"enUS",
},
[220368] = {
"Failed Batch",
"Cinderbrew Meadery",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"Earthcrawl Mines",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[220314] = {
"Bogpiper",
"Mycomancer Cavern",
"enUS",
},
[228502] = {
"Dynamite Booty",
"Liberation of Undermine",
"enUS",
},
[136643] = {
"Azerite Extractor",
"The MOTHERLODE!!",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[229270] = {
"Darkfuse Destructionist",
"Liberation of Undermine",
"enUS",
},
[225606] = {
"Nightfall Shadowalker",
"The Dawnbreaker",
"enUS",
},
[229782] = {
"Awakened Phalanx",
"Awakening The Machine",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[102253] = {
"Understone Demolisher",
"Neltharion's Lair",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"Kriegval's Rest",
"enUS",
},
[212383] = {
"Kobold Taskworker",
"Darkflame Cleft",
"enUS",
},
[129879] = {
"Irontide Cleaver",
"Siege of Boralus",
"enUS",
},
[171772] = {
"Mistveil Defender",
"Mists of Tirna Scithe",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
},
[210270] = {
"Brew Drop",
"Cinderbrew Meadery",
"enUS",
},
[220572] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[220060] = {
"Taste Tester",
"Cinderbrew Meadery",
"enUS",
},
[95861] = {
"Hatecoil Oracle",
"Eye of Azshara",
"enUS",
},
[234901] = {
"Underpin's Well-Connected Friend",
"Tak-Rethan Abyss",
"enUS",
},
[162317] = {
"Gorechop",
"Theater of Pain",
"enUS",
},
[229272] = {
"Darkfuse Machinist",
"Liberation of Undermine",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[207450] = {
"Fungal Stabber",
"Fungal Folly",
"enUS",
},
[220573] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[232599] = {
"Reel Assistant",
"Liberation of Undermine",
"enUS",
},
[234902] = {
"Underpin's Explosive Ally",
"Excavation Site 9",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
"enUS",
},
[97269] = {
"Hatecoil Crestrider",
"Eye of Azshara",
"enUS",
},
[233623] = {
"Pyrotechnics",
"Liberation of Undermine",
"enUS",
},
[145185] = {
"Gnomercy 4.U.",
"Operation: Mechagon",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[215968] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
"enUS",
},
[98035] = {
"Dreadstalker",
"Theater of Pain",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
},
[231325] = {
"Darkfuse Jumpstarter",
"Operation: Floodgate",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
},
[98677] = {
"Rook Spiderling",
"Black Rook Hold",
"enUS",
},
[218016] = {
"Ravenous Cinderbee",
"Cinderbrew Meadery",
"enUS",
},
[220575] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[234904] = {
"Underpin's Bodyguard's Intern",
"Mycomancer Cavern",
"enUS",
},
[91001] = {
"Tarspitter Lurker",
"Neltharion's Lair",
"enUS",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[234393] = {
"Void Aberration",
"Excavation Site 9",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
"enUS",
},
[220576] = {
"Shadow Elemental",
"Skittering Breach",
"enUS",
},
[230299] = {
"Darkfuse Crossfire",
"Liberation of Undermine",
"enUS",
},
[232602] = {
"Subwoofer",
"Liberation of Undermine",
"enUS",
},
[234905] = {
"Aggressively Lost Hobgoblin",
"Fungal Folly",
"enUS",
},
[123227] = {
"Keystone Vendor",
"Kalimdor",
},
[96247] = {
"Vileshard Crawler",
"Neltharion's Lair",
"enUS",
},
[210265] = {
"Worker Bee",
"Cinderbrew Meadery",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
},
[220577] = {
"Nerl'athekk the Skulking",
"Skittering Breach",
"enUS",
},
[220624] = {
"Suspicious Niffen",
"Tak-Rethan Abyss",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[235162] = {
"Crony",
"Demolition Dome",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
"enUS",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
"enUS",
},
[99956] = {
"Fel-Infused Fury",
"Vault of the Wardens",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
"enUS",
},
[208743] = {
"Blazikon",
"Darkflame Cleft",
"enUS",
},
[26125] = {
"Risen Ghoul",
"Liberation of Undermine",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[216856] = {
"Black Blood",
"Ara-Kara, City of Echoes",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
},
[236948] = {
"The Underpin",
"Excavation Site 9",
"enUS",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
},
[234900] = {
"Underpin's Adoring Fan",
"Fungal Folly",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[219301] = {
"Brew Drop",
"Cinderbrew Meadery",
"enUS",
},
[231839] = {
"Scrapmaster",
"Liberation of Undermine",
"enUS",
},
[99630] = {
"Bitterbrine Scavenger",
"Eye of Azshara",
"enUS",
},
[214761] = {
"Nightfall Ritualist",
"The Dawnbreaker",
"enUS",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
"enUS",
},
[91004] = {
"Ularogg Cragshaper",
"Neltharion's Lair",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
"enUS",
},
[229537] = {
"Void Emissary",
"Ara-Kara, City of Echoes",
"enUS",
},
[227904] = {
"Darkfuse Shredder",
"Liberation of Undermine",
"enUS",
},
[238237] = {
"Darkfuse Thug",
"Liberation of Undermine",
"enUS",
},
[224164] = {
"Slots Patron",
"Liberation of Undermine",
"enUS",
},
[228514] = {
"Pit Mechanic",
"Liberation of Undermine",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
},
[100216] = {
"Hatecoil Wrangler",
"Eye of Azshara",
"enUS",
},
[229282] = {
"Wild Thunderbolt",
"Liberation of Undermine",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
"enUS",
},
[213577] = {
"Spitfire Charger",
"Kriegval's Rest",
"enUS",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[217126] = {
"Over-Indulged Patron",
"Cinderbrew Meadery",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[229435] = {
"Gallagio Cocktail",
"Liberation of Undermine",
"enUS",
},
[91005] = {
"Naraxas",
"Neltharion's Lair",
"enUS",
},
[62982] = {
"Mindbender",
"Theater of Pain",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
},
[215111] = {
"Fungarian Sporeling",
"Fungal Folly",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
"enUS",
},
[214625] = {
"Kobyss Necromancer",
"Tak-Rethan Abyss",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[231075] = {
"Chrome King Gallywix",
"Liberation of Undermine",
"enUS",
},
[229284] = {
"Guk Boomdog",
"Liberation of Undermine",
"enUS",
},
[219715] = {
"Kobyss Ambusher",
"The Sinkhole",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[204188] = {
"Tomb-Raider Drywhisker",
"Kriegval's Rest",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
"enUS",
},
[168357] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[105636] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[130909] = {
"Fetid Maggot",
"Zandalar",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
"enUS",
},
[207468] = {
"Gnarled Reviver",
"Mycomancer Cavern",
"enUS",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
"enUS",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[211119] = {
"Kasthrik",
"Fungal Folly",
"enUS",
},
[229798] = {
"Lesser Primal Storm Elemental",
"Theater of Pain",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[213934] = {
"Nightfall Tactician",
"The Dawnbreaker",
"enUS",
},
[129227] = {
"Azerokk",
"The MOTHERLODE!!",
"enUS",
},
[228954] = {
"Nerubian Marauder",
"Earthcrawl Mines",
"enUS",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
"enUS",
},
[229287] = {
"Professor Boomspark",
"Liberation of Undermine",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
},
[105720] = {
"Understone Drudge",
"Neltharion's Lair",
"enUS",
},
[137940] = {
"Safety Shark",
"The MOTHERLODE!!",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
},
[212400] = {
"Void-Touched Elemental",
"The Stonevault",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
"enUS",
},
[229288] = {
"King Flamespite",
"Liberation of Undermine",
"enUS",
},
[211121] = {
"Rank Overseer",
"Darkflame Cleft",
"enUS",
},
[233050] = {
"Giga Controls",
"Liberation of Undermine",
"enUS",
},
[164552] = {
"Rotmarrow Slime",
"Plaguefall",
},
[132056] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[229769] = {
"Medbot",
"Awakening The Machine",
"enUS",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[213937] = {
"Rasha'nan",
"The Dawnbreaker",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
},
[91785] = {
"Wandering Shellback",
"Khaz Algar",
"enUS",
},
[98173] = {
"Mystic Ssa'veh",
"Eye of Azshara",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
"enUS",
},
[225822] = {
"Vexie Fullthrottle",
"Liberation of Undermine",
"enUS",
},
[225708] = {
"Sporbit",
"Mycomancer Cavern",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[212411] = {
"Torchsnarl",
"Darkflame Cleft",
"enUS",
},
[217208] = {
"Zekvir",
"Mycomancer Cavern",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
"enUS",
},
[133963] = {
"Test Subject",
"The MOTHERLODE!!",
"enUS",
},
[144295] = {
"Mechagon Mechanic",
"Operation: Mechagon",
"enUS",
},
[151613] = {
"Anti-Personnel Squirrel",
"Operation: Mechagon",
"enUS",
},
[76446] = {
"Shadowmoon Dominator",
"Shadowmoon Burial Grounds",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[91793] = {
"Seaspray Crab",
"Eye of Azshara",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
},
[212739] = {
"Consuming Voidstone",
"The Rookery",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[230316] = {
"Mk II Electro Shocker",
"Liberation of Undermine",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[164451] = {
"Dessia the Decapitator",
"Theater of Pain",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
"enUS",
},
[136005] = {
"Rowdy Reveler",
"The MOTHERLODE!!",
"enUS",
},
[169875] = {
"Shackled Soul",
"Theater of Pain",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[216621] = {
"Nerubian Webspinner",
"Earthcrawl Mines",
"enUS",
},
[231939] = {
"Darkfuse Wrenchmonger",
"Liberation of Undermine",
"enUS",
},
[144244] = {
"The Platinum Pummeler",
"Operation: Mechagon",
"enUS",
},
[83846] = {
"Yalnu",
"The Everbloom",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[216364] = {
"Blood Overseer",
"Ara-Kara, City of Echoes",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
"enUS",
},
[223774] = {
"Blazing Fiend",
"Darkflame Cleft",
"enUS",
},
[229691] = {
"Swarmbot",
"Awakening The Machine",
"enUS",
},
[229695] = {
"Corrupted Machinist",
"Awakening The Machine",
"enUS",
},
[229706] = {
"Explosive Bomberbot",
"Awakening The Machine",
"enUS",
},
[162329] = {
"Xav the Unfallen",
"Theater of Pain",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
},
["indicator_anchor"] = {
["y"] = -4.670005798339844,
["x"] = 5.629997253417969,
["side"] = 7,
},
["health_selection_overlay_alpha"] = 0.3299999833106995,
["minor_height_scale"] = 0.94999998807907,
["aura_padding"] = 1.5,
["cast_statusbar_fadeout_time"] = 0.0099999997764826,
["aura_stack_size"] = 8,
["aura_height2"] = 20,
["aura_show_crowdcontrol"] = true,
["cast_colors"] = {
[384524] = {
true,
"orangered",
"",
},
[376683] = {
true,
"orangered",
"",
},
[375727] = {
true,
"orangered",
"",
},
[88308] = {
true,
"orangered",
"",
},
[372222] = {
true,
"orangered",
"",
},
[267354] = {
true,
"orchid",
"",
},
[427176] = {
true,
"orchid",
"",
},
[375348] = {
true,
"orangered",
"",
},
[465682] = {
true,
"orangered",
"",
},
[372735] = {
true,
"orchid",
"",
},
[266209] = {
true,
"white",
"",
},
[269843] = {
true,
"orangered",
"",
},
[283422] = {
true,
"orangered",
"",
},
[388801] = {
true,
"orchid",
"",
},
[340160] = {
true,
"orangered",
"",
},
[260894] = {
true,
"orangered",
"",
},
[375351] = {
true,
"orangered",
"",
},
[443500] = {
true,
"orangered",
"",
},
[226406] = {
true,
"orangered",
"",
},
[183088] = {
true,
"orangered",
"",
},
[267551] = {
true,
"orangered",
"",
},
[412200] = {
true,
"orchid",
"",
},
[197974] = {
true,
"orangered",
"",
},
[370764] = {
true,
"orchid",
"",
},
[201226] = {
true,
"orangered",
"",
},
[259940] = {
true,
"orangered",
"",
},
[377204] = {
true,
"orangered",
"",
},
[468813] = {
true,
"orangered",
"",
},
[412012] = {
true,
"orchid",
"",
},
[427376] = {
true,
"orchid",
"",
},
[465754] = {
true,
"orangered",
"",
},
[332708] = {
true,
"orangered",
"",
},
[275907] = {
true,
"orangered",
"",
},
[432031] = {
true,
"orchid",
"",
},
[447395] = {
true,
"orangered",
"",
},
[372107] = {
true,
"orangered",
"",
},
[257870] = {
true,
"orchid",
"",
},
[256627] = {
true,
"orangered",
"",
},
[447270] = {
true,
"orangered",
"",
},
[424958] = {
true,
"orangered",
"",
},
[333477] = {
true,
"orangered",
"",
},
[439621] = {
true,
"orangered",
"",
},
[451543] = {
true,
"orangered",
"",
},
[376892] = {
true,
"orangered",
"",
},
[367521] = {
true,
"orchid",
"",
},
[340300] = {
true,
"orangered",
"",
},
[200784] = {
true,
"orchid",
"",
},
[257426] = {
true,
"orangered",
"",
},
[1214546] = {
true,
"orangered",
"",
},
[419351] = {
true,
"orangered",
"",
},
[473220] = {
true,
"orangered",
"",
},
[269029] = {
true,
"orangered",
"",
},
[369563] = {
true,
"orangered",
"",
},
[425027] = {
true,
"orangered",
"",
},
[422541] = {
true,
"orchid",
"",
},
[448105] = {
true,
"orangered",
"",
},
[422414] = {
true,
"orangered",
"",
},
[427323] = {
true,
"orangered",
"",
},
[429427] = {
true,
"orchid",
"",
},
[412215] = {
true,
"orangered",
"",
},
[257397] = {
true,
"darkorange",
"",
},
[333294] = {
true,
"orangered",
"",
},
[384868] = {
true,
"orangered",
"",
},
[265019] = {
true,
"orangered",
"",
},
[383823] = {
true,
"orchid",
"",
},
[384978] = {
true,
"orchid",
"",
},
[372311] = {
true,
"orangered",
"",
},
[449130] = {
true,
"orangered",
"",
},
[437719] = {
true,
"orchid",
"",
},
[391118] = {
true,
"orangered",
"",
},
[472452] = {
true,
"orangered",
"",
},
[369061] = {
true,
"orangered",
"",
},
[421910] = {
true,
"orangered",
"",
},
[377383] = {
true,
"orangered",
"",
},
[323608] = {
true,
"orangered",
"",
},
[377732] = {
true,
"orchid",
"",
},
[408141] = {
true,
"orangered",
"",
},
[388060] = {
true,
"orangered",
"",
},
[272609] = {
true,
"orangered",
"",
},
[369828] = {
true,
"orchid",
"",
},
[378818] = {
true,
"orchid",
"",
},
[255567] = {
true,
"orangered",
"",
},
[1217653] = {
true,
"orangered",
"",
},
[375439] = {
true,
"orangered",
"",
},
[385958] = {
true,
"orangered",
"",
},
[411012] = {
true,
"orangered",
"",
},
[461796] = {
true,
"orchid",
"",
},
[386660] = {
true,
"orangered",
"",
},
[377034] = {
true,
"orangered",
"",
},
[382708] = {
true,
"orangered",
"",
},
[421277] = {
true,
"orangered",
"",
},
[200345] = {
true,
"orchid",
"",
},
[291865] = {
true,
"orangered",
"",
},
[188169] = {
true,
"orangered",
"",
},
[385578] = {
true,
"orangered",
"",
},
[435012] = {
true,
"orangered",
"",
},
[375251] = {
true,
"orangered",
"",
},
[459210] = {
true,
"MONK",
"",
},
[330614] = {
true,
"orangered",
"",
},
[397931] = {
true,
"mediumturquoise",
"",
},
[381525] = {
true,
"orangered",
"",
},
[183465] = {
true,
"orangered",
"",
},
[164357] = {
true,
"orangered",
"",
},
[412129] = {
true,
"orangered",
"",
},
[428293] = {
true,
"orangered",
"",
},
[382712] = {
true,
"orangered",
"",
},
[374361] = {
true,
"orangered",
"",
},
[265540] = {
true,
"orchid",
"",
},
[320729] = {
true,
"orangered",
"",
},
[382233] = {
true,
"orangered",
"",
},
[451241] = {
true,
"lightskyblue",
"",
},
[427359] = {
true,
"orchid",
"",
},
[427869] = {
true,
"orangered",
"",
},
[226304] = {
true,
"orangered",
"",
},
[426893] = {
true,
"orangered",
"",
},
[1217294] = {
true,
"orangered",
"",
},
[426860] = {
true,
"orangered",
"",
},
[372087] = {
true,
"orangered",
"",
},
[321834] = {
true,
"orangered",
"",
},
[440218] = {
true,
"orangered",
"",
},
[188404] = {
true,
"orangered",
"",
},
[411994] = {
true,
"darkorange",
"",
},
[169929] = {
true,
"orangered",
"",
},
[397889] = {
true,
"mediumturquoise",
"",
},
[257756] = {
true,
"orchid",
"",
},
[427342] = {
true,
"orchid",
"",
},
[453161] = {
true,
"orangered",
"",
},
[324323] = {
true,
"orangered",
"",
},
[320512] = {
false,
"orangered",
},
[226296] = {
true,
"orangered",
"",
},
[388392] = {
true,
"darkorange",
"",
},
[459779] = {
true,
"orangered",
"",
},
[426260] = {
true,
"orangered",
"",
},
[333488] = {
true,
"orangered",
"",
},
[462216] = {
true,
"orangered",
"",
},
[323496] = {
true,
"orangered",
"",
},
[426261] = {
true,
"orangered",
"",
},
[1217496] = {
true,
"orangered",
"",
},
[367484] = {
true,
"orchid",
"",
},
[268202] = {
true,
"orchid",
"",
},
[387910] = {
true,
"orchid",
"",
},
[199151] = {
true,
"blue",
"",
},
[426645] = {
true,
"orangered",
"",
},
[87618] = {
true,
"orangered",
"",
},
[321968] = {
true,
"orangered",
"",
},
[375327] = {
true,
"orangered",
"",
},
[396812] = {
true,
"orchid",
"",
},
[387950] = {
true,
"orangered",
"",
},
[377559] = {
true,
"orangered",
"",
},
[436592] = {
true,
"orangered",
"",
},
[382277] = {
true,
"orangered",
"",
},
[473114] = {
true,
"orangered",
"",
},
[427025] = {
true,
"orangered",
"",
},
[169179] = {
true,
"orangered",
"",
},
[268260] = {
true,
"orangered",
"",
},
[474018] = {
true,
"orangered",
"",
},
[200768] = {
true,
"orangered",
"",
},
[369465] = {
true,
"orchid",
"",
},
[431494] = {
true,
"orangered",
"",
},
[432198] = {
true,
"orangered",
"",
},
[433662] = {
true,
"orchid",
"",
},
[293986] = {
true,
"orangered",
"",
},
[449090] = {
true,
"orangered",
"",
},
[434779] = {
true,
"orangered",
"",
},
[372225] = {
true,
"orchid",
"",
},
[445457] = {
true,
"orangered",
"",
},
[388911] = {
true,
"orangered",
"",
},
[448640] = {
true,
"orangered",
"",
},
[200913] = {
true,
"orangered",
"",
},
[200291] = {
true,
"orchid",
"",
},
[156718] = {
true,
"darkorange",
"",
},
[388976] = {
true,
"orangered",
"",
},
[448619] = {
true,
"orangered",
"",
},
[441119] = {
true,
"orangered",
"",
},
[265721] = {
true,
"orangered",
"",
},
[209628] = {
true,
"blue",
"",
},
[320822] = {
true,
"orchid",
"",
},
[393432] = {
true,
"orangered",
"",
},
[262377] = {
true,
"orangered",
"",
},
[323137] = {
true,
"orangered",
"",
},
[373742] = {
true,
"orangered",
"",
},
[385536] = {
true,
"orchid",
"",
},
[432520] = {
true,
"orchid",
"",
},
[372201] = {
true,
"orangered",
"",
},
[200261] = {
true,
"orangered",
"",
},
[432967] = {
true,
"orchid",
"",
},
[331718] = {
true,
"orangered",
"",
},
[450854] = {
true,
"orangered",
"",
},
[369409] = {
true,
"orangered",
"",
},
[451496] = {
true,
"orangered",
"",
},
[474087] = {
true,
"orangered",
"",
},
[375943] = {
true,
"orangered",
"",
},
[412505] = {
true,
"orangered",
"",
},
[416139] = {
true,
"orangered",
"",
},
[391723] = {
true,
"orangered",
"",
},
[260793] = {
true,
"orangered",
"",
},
[193505] = {
true,
"orangered",
"",
},
[396665] = {
true,
"orangered",
"",
},
[253721] = {
true,
"orchid",
"",
},
[451843] = {
true,
"orangered",
"",
},
[265372] = {
true,
"orangered",
"",
},
[427616] = {
true,
"orangered",
"",
},
[376170] = {
true,
"orangered",
"",
},
[369573] = {
true,
"orangered",
"",
},
[317231] = {
true,
"orangered",
"",
},
[257288] = {
true,
"orangered",
"",
},
[339706] = {
true,
"orangered",
"",
},
[257862] = {
true,
"orangered",
"",
},
[413529] = {
true,
"orangered",
"",
},
[335308] = {
false,
"orangered",
},
[1215738] = {
true,
"orangered",
"",
},
[1214315] = {
true,
"orangered",
"",
},
[434824] = {
true,
"orangered",
"",
},
},
["hook_data_trash"] = {
{
["Enabled"] = true,
["Revision"] = 4,
["OptionsValues"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Prio"] = 99,
["Author"] = "Jervaidhe",
["PlaterCore"] = 1,
["Desc"] = "DotMaster integration stub",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable) end",
},
["__TrashAt"] = 1747037199,
["Time"] = 1747035333,
["LoadConditions"] = {
},
["Name"] = "DotMaster Integration",
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable) end",
},
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 2,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable) end",
},
["OptionsValues"] = {
},
["Author"] = "Jervaidhe",
["PlaterCore"] = 1,
["Desc"] = "DotMaster integration stub",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable) end",
},
["__TrashAt"] = 1747038229,
["Time"] = 1747037218,
["LoadConditions"] = {
},
["LastHookEdited"] = "",
["Name"] = "DotMaster Integration",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Prio"] = 99,
},
{
["Enabled"] = true,
["Revision"] = 14,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Jervaidhe",
["LoadConditions"] = {
},
["Desc"] = "DotMaster integration mod",
["Hooks"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    modTable.config = {\n        spells = DotMaster.API:GetTrackedSpells(),\n        combos = DotMaster.API:GetCombinations(),\n        defaults = DotMaster.API:GetSettings(),\n    }\nend",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local cfg = modTable.config\n    -- Sort spells by priority\n    table.sort(cfg.spells, function(a,b) return a.priority < b.priority end)\n    -- Individual spells\n    for _, s in ipairs(cfg.spells) do\n        if s.enabled and Plater.NameplateHasAura(unitFrame, s.spellID) then\n            Plater.SetNameplateColor(unitFrame, s.color)\n            return\n        end\n    end\n    -- Combos\n    for _, combo in ipairs(cfg.combos) do\n        if combo.enabled then\n            local all = true\n            for _, sid in ipairs(combo.spellList) do\n                if not Plater.NameplateHasAura(unitFrame, sid) then\n                    all = false\n                    break\n                end\n            end\n            if all then\n                Plater.SetNameplateColor(unitFrame, combo.color)\n                return\n            end\n        end\n    end\n    -- Fallback\n    Plater.RefreshNameplateColor(unitFrame)\nend",
},
["__TrashAt"] = 1747046817,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["HooksTemp"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    modTable.config = {\n        spells = DotMaster.API:GetTrackedSpells(),\n        combos = DotMaster.API:GetCombinations(),\n        defaults = DotMaster.API:GetSettings(),\n    }\nend",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local cfg = modTable.config\n    -- Sort spells by priority\n    table.sort(cfg.spells, function(a,b) return a.priority < b.priority end)\n    -- Individual spells\n    for _, s in ipairs(cfg.spells) do\n        if s.enabled and Plater.NameplateHasAura(unitFrame, s.spellID) then\n            Plater.SetNameplateColor(unitFrame, s.color)\n            return\n        end\n    end\n    -- Combos\n    for _, combo in ipairs(cfg.combos) do\n        if combo.enabled then\n            local all = true\n            for _, sid in ipairs(combo.spellList) do\n                if not Plater.NameplateHasAura(unitFrame, sid) then\n                    all = false\n                    break\n                end\n            end\n            if all then\n                Plater.SetNameplateColor(unitFrame, combo.color)\n                return\n            end\n        end\n    end\n    -- Fallback\n    Plater.RefreshNameplateColor(unitFrame)\nend",
},
["Time"] = 1747044365,
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Prio"] = 99,
},
{
["Enabled"] = true,
["Revision"] = 3,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable) end",
},
["Prio"] = 99,
["Author"] = "Jervaidhe",
["Time"] = 1747047258,
["Desc"] = "DotMaster integration stub",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable) end",
},
["__TrashAt"] = 1747047321,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["OptionsValues"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable) end",
},
["Author"] = "Jervaidhe",
["OptionsValues"] = {
},
["Desc"] = "DotMaster integration stub",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable) end",
},
["__TrashAt"] = 1747047355,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["LoadConditions"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Time"] = 1747047326,
},
{
["Enabled"] = true,
["Revision"] = 3,
["Options"] = {
},
["HooksTemp"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    modTable.config = {\n      spells = DotMaster.API:GetTrackedSpells(),\n      combos = DotMaster.API:GetCombinations(),\n      defaults = DotMaster.API:GetSettings(),\n    }\n  end",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local cfg = modTable.config\n    -- Sort spells by priority\n    table.sort(cfg.spells, function(a, b) return a.priority < b.priority end)\n    -- Individual spells\n    for _, s in ipairs(cfg.spells) do\n      if s.enabled and Plater.NameplateHasAura(unitFrame, s.spellID) then\n        Plater.SetNameplateColor(unitFrame, s.color)\n        return\n      end\n    end\n    -- Combos\n    for _, combo in ipairs(cfg.combos) do\n      if combo.enabled then\n        local all = true\n        for _, sid in ipairs(combo.spellList) do\n          if not Plater.NameplateHasAura(unitFrame, sid) then\n            all = false\n            break\n          end\n        end\n        if all then\n          Plater.SetNameplateColor(unitFrame, combo.color)\n          return\n        end\n      end\n    end\n    -- Fallback to default\n    Plater.RefreshNameplateColor(unitFrame)\n  end",
},
["OptionsValues"] = {
},
["Author"] = "Jervaidhe",
["PlaterCore"] = 1,
["Desc"] = "DotMaster integration mod",
["Hooks"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    modTable.config = {\n      spells = DotMaster.API:GetTrackedSpells(),\n      combos = DotMaster.API:GetCombinations(),\n      defaults = DotMaster.API:GetSettings(),\n    }\n  end",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local cfg = modTable.config\n    -- Sort spells by priority\n    table.sort(cfg.spells, function(a, b) return a.priority < b.priority end)\n    -- Individual spells\n    for _, s in ipairs(cfg.spells) do\n      if s.enabled and Plater.NameplateHasAura(unitFrame, s.spellID) then\n        Plater.SetNameplateColor(unitFrame, s.color)\n        return\n      end\n    end\n    -- Combos\n    for _, combo in ipairs(cfg.combos) do\n      if combo.enabled then\n        local all = true\n        for _, sid in ipairs(combo.spellList) do\n          if not Plater.NameplateHasAura(unitFrame, sid) then\n            all = false\n            break\n          end\n        end\n        if all then\n          Plater.SetNameplateColor(unitFrame, combo.color)\n          return\n        end\n      end\n    end\n    -- Fallback to default\n    Plater.RefreshNameplateColor(unitFrame)\n  end",
},
["__TrashAt"] = 1747048277,
["Time"] = 1747048257,
["LoadConditions"] = {
},
["LastHookEdited"] = "",
["Name"] = "DotMaster Integration",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Prio"] = 99,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local cfg = modTable.config\n    -- Sort spells by priority\n    table.sort(cfg.spells, function(a, b) return a.priority < b.priority end)\n    -- Individual spells\n    for _, s in ipairs(cfg.spells) do\n        if s.enabled and Plater.NameplateHasAura(unitFrame, s.spellID) then\n            Plater.SetNameplateColor(unitFrame, s.color)\n            return\n        end\n    end\n    -- Combos\n    for _, combo in ipairs(cfg.combos) do\n        if combo.enabled then\n            local all = true\n            for _, sid in ipairs(combo.spellList) do\n                if not Plater.NameplateHasAura(unitFrame, sid) then\n                    all = false\n                    break\n                end\n            end\n            if all then\n                Plater.SetNameplateColor(unitFrame, combo.color)\n                return\n            end\n        end\n    end\n    -- Fallback to default\n    Plater.RefreshNameplateColor(unitFrame)\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    modTable.config = {\n        spells = DotMaster.API:GetTrackedSpells(),\n        combos = DotMaster.API:GetCombinations(),\n        defaults = DotMaster.API:GetSettings(),\n    }\nend",
},
["scriptId"] = "table: 000001650D65E280",
["Time"] = 1747048390,
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Enabled"] = true,
["Revision"] = 4,
["Options"] = {
},
["Author"] = "Jervaidhe",
["Desc"] = "DotMaster integration mod",
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["__TrashAt"] = 1747048887,
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local cfg = modTable.config\n    -- Sort spells by priority\n    table.sort(cfg.spells, function(a, b) return a.priority < b.priority end)\n    -- Individual spells\n    for _, s in ipairs(cfg.spells) do\n        if s.enabled and Plater.NameplateHasAura(unitFrame, s.spellID) then\n            Plater.SetNameplateColor(unitFrame, s.color)\n            return\n        end\n    end\n    -- Combos\n    for _, combo in ipairs(cfg.combos) do\n        if combo.enabled then\n            local all = true\n            for _, sid in ipairs(combo.spellList) do\n                if not Plater.NameplateHasAura(unitFrame, sid) then\n                    all = false\n                    break\n                end\n            end\n            if all then\n                Plater.SetNameplateColor(unitFrame, combo.color)\n                return\n            end\n        end\n    end\n    -- Fallback to default\n    Plater.RefreshNameplateColor(unitFrame)\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    modTable.config = {\n        spells = DotMaster.API:GetTrackedSpells(),\n        combos = DotMaster.API:GetCombinations(),\n        defaults = DotMaster.API:GetSettings(),\n    }\nend",
},
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local cfg = modTable.config\n    -- Sort spells by priority\n    table.sort(cfg.spells, function(a, b) return a.priority < b.priority end)\n    -- Individual spells\n    for _, s in ipairs(cfg.spells) do\n        if s.enabled and Plater.NameplateHasAura(unitFrame, s.spellID) then\n            Plater.SetNameplateColor(unitFrame, s.color)\n            return\n        end\n    end\n    -- Combos\n    for _, combo in ipairs(cfg.combos) do\n        if combo.enabled then\n            local all = true\n            for _, sid in ipairs(combo.spellList) do\n                if not Plater.NameplateHasAura(unitFrame, sid) then\n                    all = false\n                    break\n                end\n            end\n            if all then\n                Plater.SetNameplateColor(unitFrame, combo.color)\n                return\n            end\n        end\n    end\n    -- Fallback to default\n    Plater.RefreshNameplateColor(unitFrame)\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    modTable.config = {\n      spells = DotMaster.API:GetTrackedSpells(),\n      combos = DotMaster.API:GetCombinations(),\n      defaults = DotMaster.API:GetSettings(),\n    }\n  end",
},
["Author"] = "Jervaidhe",
["OptionsValues"] = {
},
["Desc"] = "DotMaster integration mod",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    local cfg = modTable.config\n    -- Sort spells by priority\n    table.sort(cfg.spells, function(a, b) return a.priority < b.priority end)\n    -- Individual spells\n    for _, s in ipairs(cfg.spells) do\n      if s.enabled and Plater.NameplateHasAura(unitFrame, s.spellID) then\n        Plater.SetNameplateColor(unitFrame, s.color)\n        return\n      end\n    end\n    -- Combos\n    for _, combo in ipairs(cfg.combos) do\n      if combo.enabled then\n        local all = true\n        for _, sid in ipairs(combo.spellList) do\n          if not Plater.NameplateHasAura(unitFrame, sid) then\n            all = false\n            break\n          end\n        end\n        if all then\n          Plater.SetNameplateColor(unitFrame, combo.color)\n          return\n        end\n      end\n    end\n    -- Fallback to default\n    Plater.RefreshNameplateColor(unitFrame)\n  end",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    modTable.config = {\n      spells = DotMaster.API:GetTrackedSpells(),\n      combos = DotMaster.API:GetCombinations(),\n      defaults = DotMaster.API:GetSettings(),\n    }\n  end",
},
["__TrashAt"] = 1747048918,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["LoadConditions"] = {
},
["LastHookEdited"] = "Constructor",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Time"] = 1747048890,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    self.ThrottleUpdate = 0.016\n    \n    local hasMoonfire = Plater.NameplateHasAura(unitFrame, 247456)\n    local hasSunfire = Plater.NameplateHasAura(unitFrame, 164815)\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    local hasSwp = Plater.NameplateHasAura(unitFrame, 589)\n    local hasDK = Plater.NameplateHasAura(unitFrame, 191587)\n    \n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    elseif (hasSwp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.Swp)\n    elseif (hasDK) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.DK)\n    elseif not (hasMoonfire and hasSunfire) then\n        if hasMoonfire then\n            Plater.SetNameplateColor(unitFrame, modTable.config.onlyMoon)\n        elseif hasSunfire then\n            Plater.SetNameplateColor(unitFrame, modTable.config.onlySun)\n        else\n            Plater.RefreshNameplateColor (unitFrame)\n        end\n    elseif (hasMoonfire and hasSunfire) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.bothDebuffs)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    self.ThrottleUpdate = 0.016\n    \n    local hasMoonfire = Plater.NameplateHasAura(unitFrame, 247456)\n    local hasSunfire = Plater.NameplateHasAura(unitFrame, 164815)\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    local hasSwp = Plater.NameplateHasAura(unitFrame, 589)\n    local hasDK = Plater.NameplateHasAura(unitFrame, 191587)\n    \n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    elseif (hasSwp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.Swp)\n    elseif (hasDK) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.DK)\n    elseif not (hasMoonfire and hasSunfire) then\n        if hasMoonfire then\n            Plater.SetNameplateColor(unitFrame, modTable.config.onlyMoon)\n        elseif hasSunfire then\n            Plater.SetNameplateColor(unitFrame, modTable.config.onlySun)\n        else\n            Plater.RefreshNameplateColor (unitFrame)\n        end\n    elseif (hasMoonfire and hasSunfire) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.bothDebuffs)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
},
["scriptId"] = "table: 000001651F8DF7F0",
["Time"] = 1747049092,
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["Enabled"] = true,
["Revision"] = 9,
["Options"] = {
},
["Author"] = "Jervaidhe",
["Desc"] = "DotMaster integrated spell: Frailty",
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["LastHookEdited"] = "Nameplate Updated",
["__TrashAt"] = 1747049206,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    if Plater.NameplateHasAura(unitFrame, 34914) then\n        Plater.SetNameplateColor(unitFrame, 1, 0, 1)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    if Plater.NameplateHasAura(unitFrame, 34914) then\n        Plater.SetNameplateColor(unitFrame, 1, 0, 1)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["scriptId"] = "table: 00000164DC338140",
["Time"] = 1747049293,
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["Enabled"] = true,
["Revision"] = 4,
["Options"] = {
},
["Author"] = "Jervaidhe",
["Desc"] = "DotMaster Basic",
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["__TrashAt"] = 1747049298,
["LastHookEdited"] = "Nameplate Updated",
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    if Plater.NameplateHasAura(unitFrame, 34914) then\n      Plater.SetNameplateColor(unitFrame, 1, 0, 1)\n    else\n      Plater.RefreshNameplateColor(unitFrame)\n    end\n  end",
},
["Author"] = "Jervaidhe",
["LoadConditions"] = {
},
["Desc"] = "DotMaster Basic",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    if Plater.NameplateHasAura(unitFrame, 34914) then\n      Plater.SetNameplateColor(unitFrame, 1, 0, 1)\n    else\n      Plater.RefreshNameplateColor(unitFrame)\n    end\n  end",
},
["__TrashAt"] = 1747049552,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["Time"] = 1747049524,
["LastHookEdited"] = "Nameplate Updated",
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["OptionsValues"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 3,
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Options"] = {
},
["Author"] = "Jervaidhe",
["LoadConditions"] = {
},
["Desc"] = "Colors nameplates for DotMaster tracked DoTs",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\nend",
},
["__TrashAt"] = 1747049696,
["Time"] = 1747049691,
["PlaterCore"] = 1,
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\nend",
},
["Name"] = "DotMaster Integration",
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["Prio"] = 99,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\nend",
},
["scriptId"] = "table: 00000165AAB28F80",
["Time"] = 1747049735,
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["Enabled"] = true,
["Revision"] = 3,
["Options"] = {
},
["Author"] = "Jervaidhe",
["Desc"] = "Colors nameplates for DotMaster tracked DoTs",
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\nend",
},
["__TrashAt"] = 1747049738,
},
{
["Enabled"] = true,
["Revision"] = 3,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["__TrashAt"] = 1747049787,
["Author"] = "Jervaidhe",
["PlaterCore"] = 1,
["Desc"] = "Colors nameplates for DotMaster tracked DoTs",
["Hooks"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\nend",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["Prio"] = 99,
["Time"] = 1747049782,
["LoadConditions"] = {
},
["Name"] = "DotMaster Integration",
["HooksTemp"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\nend",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["Options"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\nend",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["Author"] = "Jervaidhe",
["Time"] = 1747050127,
["Desc"] = "Colors nameplates for DotMaster tracked DoTs",
["Hooks"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\n  end",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n      Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n      Plater.RefreshNameplateColor(unitFrame)\n    end\n  end",
},
["__TrashAt"] = 1747050220,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["LastHookEdited"] = "Constructor",
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["OptionsValues"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Simple config table\n    modTable.config = {\n        -- Vampiric Touch spell ID\n        spellID = 34914,\n        -- Purple color\n        dotColor = {1, 0, 1}\n    }\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Throttle updates for performance\n    self.ThrottleUpdate = 0.016\n    \n    -- Check if unit has the tracked DoT\n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        -- Apply color when DoT is found\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        -- Reset to default when no DoT\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["scriptId"] = "table: 00000165A4C92C80",
["Time"] = 1747050549,
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["Enabled"] = true,
["Revision"] = 3,
["Options"] = {
},
["Author"] = "Jervaise",
["Desc"] = "Colors nameplates when your DoTs are active",
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["HooksTemp"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Simple config table\n    modTable.config = {\n        -- Vampiric Touch spell ID\n        spellID = 34914,\n        -- Purple color\n        dotColor = {1, 0, 1}\n    }\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Throttle updates for performance\n    self.ThrottleUpdate = 0.016\n    \n    -- Check if unit has the tracked DoT\n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        -- Apply color when DoT is found\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        -- Reset to default when no DoT\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["__TrashAt"] = 1747050553,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Simple config table\n    modTable.config = {\n        -- Vampiric Touch spell ID\n        spellID = 34914,\n        -- Purple color\n        dotColor = {1, 0, 1}\n    }\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Throttle updates for performance\n    self.ThrottleUpdate = 0.016\n    \n    -- Check if unit has the tracked DoT\n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        -- Apply color when DoT is found\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        -- Reset to default when no DoT\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["scriptId"] = "table: 0000016504354750",
["Time"] = 1747050607,
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["Enabled"] = true,
["Revision"] = 3,
["Options"] = {
},
["Author"] = "Jervaise",
["Desc"] = "Colors nameplates when your DoTs are active",
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["__TrashAt"] = 1747050614,
["HooksTemp"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Simple config table\n    modTable.config = {\n        -- Vampiric Touch spell ID\n        spellID = 34914,\n        -- Purple color\n        dotColor = {1, 0, 1}\n    }\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Throttle updates for performance\n    self.ThrottleUpdate = 0.016\n    \n    -- Check if unit has the tracked DoT\n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n        -- Apply color when DoT is found\n        Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n        -- Reset to default when no DoT\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
},
{
["Enabled"] = true,
["Revision"] = 1,
["LastHookEdited"] = "Nameplate Updated",
["Author"] = "DotMaster",
["Desc"] = "Colors nameplates for DoTs",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1, 0, 1)\n  end\nend",
},
["__TrashAt"] = 1747051089,
["Name"] = "DotMaster Integration",
["Icon"] = "Interface\\Icons\\Spell_Shadow_ShadowWordPain",
["Time"] = 1747051058,
},
{
["Enabled"] = true,
["Revision"] = 3,
["LastHookEdited"] = "Nameplate Updated",
["Author"] = "DotMaster",
["Desc"] = "Colors nameplates for DoTs",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1, 0, 1)\n  end\nend",
},
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["__TrashAt"] = 1747051438,
["Icon"] = "Interface\\Icons\\Spell_Shadow_ShadowWordPain",
["Time"] = 1747051433,
},
{
["Enabled"] = false,
["Revision"] = 2,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Jervaise",
["LoadConditions"] = {
},
["Desc"] = "Colors nameplates for the first tracked DoT",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n  self.ThrottleUpdate = 0.016\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1.000000, 0.000000, 0.000000, 1.000000)\n  end\nend\n",
},
["__TrashAt"] = 1747051757,
["Time"] = 1747051743,
["PlaterCore"] = 1,
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n  self.ThrottleUpdate = 0.016\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1.000000, 0.000000, 0.000000, 1.000000)\n  end\nend\n",
},
["Name"] = "DotMaster Integration",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Prio"] = 99,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["UID"] = "0x6821e5ef573fc2b",
["Hooks"] = {
},
["__TrashAt"] = 1747052025,
["Time"] = 1747052018,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["Icon"] = "",
["Enabled"] = true,
["Revision"] = 2,
["Options"] = {
},
["Author"] = "Jervaise-Kazzak",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "New Mod",
["PlaterCore"] = 1,
["HooksTemp"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 3,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Options"] = {
},
["Author"] = "Jervaise",
["LoadConditions"] = {
},
["Desc"] = "Colors nameplates for the first tracked DoT",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    if Plater.NameplateHasAura(unitFrame, 34914) then\n        Plater.SetNameplateColor(unitFrame, 1.000000, 0.000000, 0.000000, 1.000000)\n    end\nend",
},
["__TrashAt"] = 1747052103,
["Time"] = 1747052079,
["PlaterCore"] = 1,
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    if Plater.NameplateHasAura(unitFrame, 34914) then\n        Plater.SetNameplateColor(unitFrame, 1.000000, 0.000000, 0.000000, 1.000000)\n    end\nend",
},
["Name"] = "DotMaster Integration",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Prio"] = 99,
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n  self.ThrottleUpdate = 0.016\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1.000000, 0.000000, 0.000000, 1.000000)\n  end\nend\n",
},
["Author"] = "Jervaise",
["OptionsValues"] = {
},
["Desc"] = "Colors nameplates for the first tracked DoT",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n  self.ThrottleUpdate = 0.016\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1.000000, 0.000000, 0.000000, 1.000000)\n  end\nend\n",
},
["__TrashAt"] = 1747052130,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["LoadConditions"] = {
},
["LastHookEdited"] = "",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Time"] = 1747052106,
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Author"] = "Jervaise",
["Name"] = "DotMaster Integration",
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["__TrashAt"] = 1747052147,
["Time"] = 1747052134,
["PlaterCore"] = 1,
["LoadConditions"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["OptionsValues"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 2,
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["__TrashAt"] = 1747052166,
["Author"] = "Jervaise",
["PlaterCore"] = 1,
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Prio"] = 99,
["Time"] = 1747052163,
["LoadConditions"] = {
},
["Name"] = "DotMaster Integration",
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Options"] = {
{
["Type"] = 1,
["Name"] = "Option 1",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["Enabled"] = true,
["Revision"] = 3,
["OptionsValues"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
["Author"] = "Jervaise",
["LoadConditions"] = {
},
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Prio"] = 99,
["Time"] = 1747052686,
["PlaterCore"] = 1,
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Name"] = "DotMaster Integration",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["__TrashAt"] = 1747052696,
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Author"] = "Jervaise",
["OptionsValues"] = {
},
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["__TrashAt"] = 1747052960,
["Time"] = 1747052698,
["PlaterCore"] = 1,
["LoadConditions"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Name"] = "DotMaster Integration",
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n  self.ThrottleUpdate = 0.016\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1, 0, 1, 1) -- purple\n  end\nend\n",
},
["Author"] = "Jervaise",
["LoadConditions"] = {
},
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n  self.ThrottleUpdate = 0.016\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1, 0, 1, 1) -- purple\n  end\nend\n",
},
["__TrashAt"] = 1747053124,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["Time"] = 1747052964,
["LastHookEdited"] = "Nameplate Updated",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["OptionsValues"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n  self.ThrottleUpdate = 0.016\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1, 0, 1, 1) -- purple\n  end\nend\n",
},
["Author"] = "Jervaise",
["OptionsValues"] = {
},
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n  self.ThrottleUpdate = 0.016\n  if Plater.NameplateHasAura(unitFrame, 34914) then\n    Plater.SetNameplateColor(unitFrame, 1, 0, 1, 1) -- purple\n  end\nend\n",
},
["__TrashAt"] = 1747053321,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["Time"] = 1747053126,
["LastHookEdited"] = "Nameplate Updated",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["LoadConditions"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 2,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["OptionsValues"] = {
},
["Author"] = "Jervaise",
["LoadConditions"] = {
},
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Prio"] = 99,
["Time"] = 1747053397,
["PlaterCore"] = 1,
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "DotMaster Integration",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["__TrashAt"] = 1747063743,
},
{
["Enabled"] = true,
["Revision"] = 2,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Prio"] = 99,
["Author"] = "Jervaise",
["LoadConditions"] = {
},
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["__TrashAt"] = 1747064223,
["Time"] = 1747064186,
["PlaterCore"] = 1,
["Name"] = "DotMaster Integration",
["LastHookEdited"] = "",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["OptionsValues"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["config"] = {
["vamp"] = {
1,
0,
1,
1,
},
},
["Author"] = "Jervaise",
["LoadConditions"] = {
},
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["__TrashAt"] = 1747064248,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["Time"] = 1747064228,
["LastHookEdited"] = "",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["OptionsValues"] = {
},
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["OptionsValues"] = {
},
["Author"] = "Jervaise",
["LoadConditions"] = {
},
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["__TrashAt"] = 1747064850,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["LastHookEdited"] = "Nameplate Updated",
["Time"] = 1747064615,
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["config"] = {
["vamp"] = {
1,
0,
1,
1,
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n    \n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["__TrashAt"] = 1747066953,
["Time"] = 1747064893,
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Enabled"] = true,
["Revision"] = 3,
["Options"] = {
},
["Author"] = "Jervaise",
["Desc"] = "Test integration example",
["config"] = {
["vamp"] = {
1,
0,
1,
1,
},
},
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["Prio"] = 99,
["LastHookEdited"] = "Nameplate Updated",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend",
},
["__TrashAt"] = 1747067192,
["Time"] = 1747066955,
["LoadConditions"] = {
},
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Enabled"] = true,
["Revision"] = 2,
["Options"] = {
},
["Author"] = "Jervaise",
["Desc"] = "Test integration example",
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["config"] = {
["vamp"] = {
1,
0,
1,
1,
},
},
["LastHookEdited"] = "Nameplate Updated",
},
{
["OptionsValues"] = {
["vamp"] = {
0.7607843875885,
0.086274512112141,
1,
1,
},
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    self.ThrottleUpdate = 0.016\n    \n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
},
["UID"] = "0x64aab5ae5b7675",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    self.ThrottleUpdate = 0.016\n    \n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["__TrashAt"] = 1747067197,
["Time"] = 1747052088,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/vEreTIlEr/4",
["Icon"] = 236216,
["Enabled"] = false,
["Revision"] = 146,
["semver"] = "1.0.3",
["Author"] = "Herb-Frostmourne",
["Desc"] = "Change color of nameplate to blue if enemy ONLY has moonfire, orange if ONLY sunfire, purple if both active. Good for quickly identifying next target when multidotting",
["Prio"] = 99,
["version"] = 4,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "vamp",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vampiric Touch",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Name"] = "Test",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016 -- Standard Plater throttle\n\n    -- Check for Vampiric Touch (spellID 34914)\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if hasVamp and modTable.config and modTable.config.vamp then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor(unitFrame) -- Reset to default if no DoT or no config\n    end\nend\n",
},
["ScriptType"] = 3,
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016 -- Standard Plater throttle\n\n    -- Check for Vampiric Touch (spellID 34914)\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if hasVamp and modTable.config and modTable.config.vamp then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor(unitFrame) -- Reset to default if no DoT or no config\n    end\nend\n",
},
["__TrashAt"] = 1747067410,
["Time"] = 1747067293,
["LoadConditions"] = {
},
["Icon"] = "Interface\\\\Icons\\\\Spell_Shadow_UnstableAffliction_3",
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["Author"] = "Jervaise",
["Desc"] = "DotMaster integration to color nameplates based on Vampiric Touch.",
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["NpcNames"] = {
},
["LastHookEdited"] = "",
["config"] = {
["vamp"] = {
1,
0,
1,
1,
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
},
["UID"] = "0x682221413a0ba8",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
},
["__TrashAt"] = 1747067413,
["Time"] = 1747067239,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["Icon"] = "",
["Enabled"] = true,
["Revision"] = 3,
["Options"] = {
},
["Author"] = "Jervaise-Kazzak",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "DotMaster",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
},
},
["extra_icon_anchor"] = {
["x"] = -5.2533187866211,
},
["extra_icon_wide_icon"] = false,
["range_check_alpha"] = 0.8999999761581421,
["semver"] = "1.0.10",
["aura_frame2_anchor"] = {
["y"] = 3,
["side"] = 1,
},
["aura_alpha"] = 1,
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["aura_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["castbar_icon_x_offset"] = -5,
["transparency_behavior"] = 3,
["aura_consolidate"] = true,
["extra_icon_width"] = 25,
["health_statusbar_texture"] = "PlaterBackground 2",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Execute Range"] = 1,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Extra Border"] = 2,
},
["minor_width_scale"] = 0.89999997615814,
["indicator_pet"] = false,
["aura_frame1_anchor"] = {
["y"] = 3,
["side"] = 7,
},
["honor_blizzard_plate_alpha"] = true,
["aura_timer_text_font"] = "Expressway",
["extra_icon_stack_font"] = "Expressway",
["aura_height"] = 14,
["non_targeted_alpha_enabled"] = true,
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["aura_show_buff_by_the_unit"] = false,
["saved_cvars"] = {
["nameplateShowOnlyNames"] = "1",
["nameplateOverlapV"] = "1.3999999761581",
["ShowNamePlateLoseAggroFlash"] = "1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "1",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "1",
["nameplateTargetRadialPosition"] = "1",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["clampTargetNameplateToScreen"] = "1",
["nameplateLargerScale"] = "1.2000000476837",
["nameplateMaxDistance"] = "50",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1.0",
["nameplateOtherBottomInset"] = "0.10000000149012",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "0.1",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateShowPersonalCooldowns"] = "0",
["nameplatePersonalShowAlways"] = "1",
["nameplateMotionSpeed"] = "0.024999998509884",
["ShowClassColorInNameplate"] = "1",
["nameplateGlobalScale"] = "1.0",
["nameplateShowEnemyMinions"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateShowFriendlyNPCs"] = "1",
["nameplateSelectedScale"] = "1.25",
["nameplateShowEnemyGuardians"] = "1",
["nameplateOccludedAlphaMult"] = "0.65258496999741",
["nameplateLargeBottomInset"] = "0.10000000149012",
["nameplateShowEnemyTotems"] = "0",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateMotion"] = "1",
["nameplateShowFriends"] = "1",
["nameplateMinScale"] = "1",
["nameplateSelfTopInset"] = "0.5",
["nameplateOtherTopInset"] = "0.049999997019768",
["nameplateOtherAtBase"] = "0",
["nameplateSelfBottomInset"] = "0.2",
["nameplatePlayerMaxDistance"] = "60",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateSelfAlpha"] = "0.75",
["nameplateShowAll"] = "1",
["nameplateLargeTopInset"] = "0.049999997019768",
["nameplateOverlapH"] = "0.75",
["nameplateShowFriendlyBuffs"] = "0",
},
["login_counter"] = 38254,
["extra_icon_caster_name"] = false,
["click_space_friendly"] = {
89,
1,
},
["aura_stack_font"] = "Expressway",
["blizzard_nameplate_font"] = "Expressway",
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["auras_per_row_amount"] = 3,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator1",
["blizzard_nameplate_large_font"] = "Expressway",
["aura_stack_anchor"] = {
["y"] = -4.90000057220459,
["x"] = 2.299999237060547,
["side"] = 7,
},
["plate_config"] = {
["player"] = {
["cast"] = {
nil,
14,
},
["healthbar_enabled"] = false,
["cast_incombat"] = {
nil,
14,
},
},
["friendlyplayer"] = {
["actorname_use_friends_color"] = false,
["spellpercent_text_font"] = "Accidental Presidency",
["level_text_size"] = 8,
["actorname_use_class_color"] = true,
["cast"] = {
115,
4,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0.9400000013411,
},
["fixed_class_color"] = {
1,
0.4,
0.1,
},
["spellpercent_text_anchor"] = {
["y"] = -7.310005187988281,
["x"] = -0.09999847412109375,
},
["spellname_text_outline"] = "OUTLINE",
["click_through"] = false,
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["actorname_text_font"] = "Expressway",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["mana_incombat"] = {
nil,
4,
},
["actorname_use_guild_color"] = false,
["all_names"] = true,
["big_actortitle_text_color"] = {
1,
0.8,
0,
},
["big_actortitle_text_outline"] = "NONE",
["actorname_text_spacing"] = 7,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "Expressway",
["percent_text_ooc"] = true,
["big_actorname_text_color"] = {
0.5,
1,
0.5,
},
["big_actorname_text_font"] = "Expressway",
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
115,
4,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = 0.4000015258789063,
["side"] = 3,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = 0.5999984741210938,
},
["spellpercent_text_size"] = 8,
["spellname_text_font"] = "Accidental Presidency",
["big_actorname_text_outline"] = "NONE",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["mana"] = {
nil,
4,
},
["percent_text_enabled"] = true,
["use_playerclass_color"] = true,
["level_text_alpha"] = 0.2999999821186066,
["big_actorname_text_size"] = 10,
["percent_text_font"] = "Expressway",
["buff_frame_y_offset"] = 0,
["quest_enabled"] = true,
["big_actortitle_text_size"] = 10,
["quest_color_enabled"] = true,
["health_incombat"] = {
115,
15,
},
["health"] = {
115,
15,
},
["actorname_text_size"] = 8,
["spellname_text_size"] = 9,
["actorname_text_anchor"] = {
["side"] = 9,
},
},
["friendlynpc"] = {
["big_actorname_text_size"] = 8,
["spellpercent_text_font"] = "Accidental Presidency",
["actorname_friend_color"] = {
0.71,
1,
1,
1,
},
["level_text_size"] = 8,
["actorname_use_class_color"] = false,
["cast"] = {
115,
4,
},
["big_actortitle_text_size"] = 8,
["fixed_class_color"] = {
1,
0.4,
0.1,
1,
},
["spellpercent_text_anchor"] = {
["y"] = -7.310005187988281,
["x"] = -0.8600006103515625,
},
["enabled"] = false,
["spellname_text_outline"] = "OUTLINE",
["click_through"] = false,
["module_enabled"] = false,
["actorname_text_font"] = "Expressway",
["actorname_use_guild_color"] = false,
["all_names"] = false,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 7,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0,
0.99607849121094,
1,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "Expressway",
["percent_text_ooc"] = true,
["spellname_text_size"] = 9,
["cast_incombat"] = {
115,
4,
},
["show_guild_name"] = false,
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = 0.4000015258789063,
["side"] = 3,
},
["percent_text_anchor"] = {
["x"] = -4,
["side"] = 11,
},
["spellname_text_font"] = "Accidental Presidency",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["actorname_text_size"] = 8,
["percent_text_enabled"] = true,
["use_playerclass_color"] = true,
["spellpercent_text_size"] = 8,
["actorname_text_anchor"] = {
["x"] = 4,
["side"] = 10,
},
["percent_text_size"] = 8,
["actorname_use_friends_color"] = false,
["percent_text_font"] = "Expressway",
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0.9400000013411,
},
["relevance_state"] = 3,
["health"] = {
115,
15,
},
["big_actorname_text_font"] = "Expressway",
["health_incombat"] = {
115,
15,
},
["spellpercent_text_enabled"] = true,
["level_text_alpha"] = 0.2999999821186066,
},
["global_health_height"] = 15,
["global_health_width"] = 115,
["enemyplayer"] = {
["actorname_use_friends_color"] = false,
["spellpercent_text_font"] = "Accidental Presidency",
["level_text_size"] = 8,
["cast"] = {
115,
4,
},
["big_actortitle_text_size"] = 8,
["spellpercent_text_anchor"] = {
["y"] = -7.310005187988281,
["x"] = -0.8600006103515625,
},
["spellname_text_outline"] = "OUTLINE",
["click_through"] = false,
["actorname_text_font"] = "Expressway",
["actorname_use_guild_color"] = false,
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_outline"] = "NONE",
["actorname_text_spacing"] = 6,
["only_damaged"] = false,
["quest_color_enemy"] = {
1,
0,
0.99607849121094,
1,
},
["only_thename"] = true,
["big_actortitle_text_font"] = "Expressway",
["spellpercent_text_size"] = 8,
["cast_incombat"] = {
115,
4,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = 0.4000015258789063,
["side"] = 3,
},
["percent_text_anchor"] = {
["x"] = -7,
["side"] = 11,
},
["actorname_friend_color"] = {
0.71,
1,
1,
1,
},
["spellname_text_font"] = "Accidental Presidency",
["big_actorname_text_outline"] = "NONE",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["actorname_text_size"] = 7,
["big_actorname_text_font"] = "Expressway",
["level_text_alpha"] = 0.2999999821186066,
["percent_text_size"] = 8,
["castbar_offset"] = -1.800003051757813,
["percent_text_font"] = "Expressway",
["actorname_guild_color"] = {
0.498039,
1,
0.2,
1,
},
["quest_enabled"] = true,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0.9400000013411,
},
["quest_color_enabled"] = true,
["spellname_text_size"] = 9,
["health"] = {
115,
15,
},
["actorname_text_anchor"] = {
["x"] = 7,
["side"] = 10,
},
["percent_show_health"] = false,
["health_incombat"] = {
115,
15,
},
["big_actorname_text_size"] = 8,
["level_text_enabled"] = false,
},
["enemynpc"] = {
["castbar_offset"] = -0.8000030517578125,
["spellpercent_text_font"] = "Accidental Presidency",
["show_guild_name"] = false,
["actorname_use_class_color"] = false,
["cast"] = {
115,
4,
},
["big_actortitle_text_size"] = 8,
["fixed_class_color"] = {
1,
0.4,
0.1,
1,
},
["spellpercent_text_anchor"] = {
["y"] = -8.110000610351562,
["x"] = -0.8600006103515625,
},
["actorname_text_font"] = "Expressway",
["actorname_text_outline"] = "OUTLINE",
["big_actortitle_text_color"] = {
1,
0.8,
0,
},
["big_actortitle_text_outline"] = "NONE",
["actorname_text_spacing"] = 6,
["quest_color_enemy"] = {
nil,
0,
0.99607849121094,
},
["big_actortitle_text_font"] = "Expressway",
["spellpercent_text_size"] = 8,
["big_actorname_text_color"] = {
0.5,
1,
0.5,
},
["cast_incombat"] = {
115,
4,
},
["spellname_text_anchor"] = {
["y"] = -1.5,
["x"] = 0.4000015258789063,
["side"] = 3,
},
["percent_text_anchor"] = {
["x"] = -7,
["side"] = 11,
},
["spellname_text_font"] = "Accidental Presidency",
["big_actorname_text_outline"] = "NONE",
["actorname_text_size"] = 7,
["big_actorname_text_font"] = "Expressway",
["use_playerclass_color"] = true,
["big_actorname_text_size"] = 8,
["level_text_alpha"] = 0.2999999821186066,
["percent_text_size"] = 8,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0.9400000013411,
},
["percent_text_font"] = "Expressway",
["spellname_text_size"] = 9,
["health"] = {
115,
15,
},
["percent_show_health"] = false,
["actorname_text_anchor"] = {
["x"] = 7,
["side"] = 10,
},
["health_incombat"] = {
115,
15,
},
["level_text_enabled"] = false,
},
},
["aura_y_offset"] = 3,
["use_ui_parent"] = true,
["border_thickness"] = 0.800000011920929,
["resources_settings"] = {
["chr"] = {
["Player-1305-0CB1B33D"] = "HolyPower",
["Player-1305-0A47A816"] = "ComboPoints",
["Player-1305-0D00569E"] = "ComboPoints",
["Player-1305-0CAED41C"] = "Runes",
["Player-1305-0C5CD727"] = "SoulShards",
["Player-1305-0C15F54D"] = "Chi",
["Player-1305-0D259CB0"] = "Runes",
["Player-1305-0CEE8FDD"] = "ComboPoints",
["Player-1305-0CB1A1F7"] = "ArcaneCharges",
["Player-1305-0CEDF8AA"] = "SoulShards",
},
},
["spell_animation_list"] = {
[27285] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1,
["scale_upY"] = 1.1,
["scale_downX"] = 0.9,
["scale_downY"] = 0.9,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[188443] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[46968] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 0.95,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.1,
["frequency"] = 120,
},
},
[275779] = {
["1"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[11366] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 10,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[228354] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[32645] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1000000238419,
["scale_upY"] = 1.1999999284744,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
["8"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 4.0999999046326,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.12000000476837,
["cooldown"] = 0.5,
["frequency"] = 2.6099998950958,
},
},
[189112] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.34999999403954,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.8799999952316,
["fade_in"] = 0,
["duration"] = 0.40000000596046,
["cooldown"] = 0.5,
["frequency"] = 51.979999542236,
},
},
[187874] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.85,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 100,
},
},
[185763] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.25999999046326,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 3.6583230495453,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.15999999642372,
["cooldown"] = 0.5,
["frequency"] = 23.525663375854,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[31661] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[203782] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = true,
["scaleY"] = -1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1.05,
["amplitude"] = 1.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[100784] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[31935] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[53351] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["8"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[257045] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[107270] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 200,
},
},
[17364] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.02,
["scale_upY"] = 1.02,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.10000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["8"] = {
["scaleY"] = -1,
["fade_out"] = 0.11,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[49998] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["enabled"] = true,
["amplitude"] = 1.0330086946487,
["fade_in"] = 0.01,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[7268] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[206930] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0199999809265,
["scale_upY"] = 1,
["scale_downX"] = 0.97999995946884,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["8"] = {
["scaleY"] = -1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 5.6999998092651,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
[196278] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.75,
["fade_in"] = 0.01,
["duration"] = 0.05,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[162243] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 1,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[196819] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.1999999284744,
["scale_upY"] = 1.2999999523163,
["scale_downX"] = 0.89999997615814,
["scale_downY"] = 0.89999997615814,
["duration"] = 0.04,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
["8"] = {
["scaleY"] = 1,
["fade_out"] = 0.1799999922514,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["enabled"] = true,
["amplitude"] = 5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.21999999880791,
["cooldown"] = 0.5,
["frequency"] = 3.3099999427795,
},
},
[264178] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.08,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 2.5,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[199804] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 0.88999938964844,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.1699999570847,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.19999998807907,
["cooldown"] = 0.5,
["frequency"] = 23.525676727295,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0499999523163,
["scale_upY"] = 1.0499999523163,
["scale_downX"] = 1,
["scale_downY"] = 1,
["duration"] = 0.050000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[187708] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[185438] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.19999998807907,
["absolute_sineX"] = false,
["scaleY"] = -1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 6.460000038147,
["fade_in"] = 0,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[86040] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.1,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 2,
["fade_in"] = 0.05,
["duration"] = 0.15,
["cooldown"] = 0.25,
["frequency"] = 20,
},
},
[52174] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.15,
["scale_upY"] = 1.15,
["scale_downX"] = 0.8,
["scale_downY"] = 0.8,
["duration"] = 0.075,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.2,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.15,
["critical_scale"] = 1,
["amplitude"] = 6,
["fade_in"] = 0.01,
["duration"] = 0.3,
["cooldown"] = 0.5,
["frequency"] = 50,
},
},
[2643] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[324540] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 2,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.89999997615814,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1499999910593,
["cooldown"] = 0.5,
["frequency"] = 25.650197982788,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[53595] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["critical_scale"] = 1,
["amplitude"] = 3,
["fade_in"] = 0.01,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
},
[108853] = {
["1"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["3"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["2"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
["4"] = {
["scaleY"] = 1,
["fade_out"] = 0.02,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.1,
["enabled"] = true,
["amplitude"] = 1,
["fade_in"] = 0.01,
["duration"] = 0.12,
["cooldown"] = 0.5,
["frequency"] = 25,
},
},
[204157] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 6,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.03,
["scale_upY"] = 1.03,
["scale_downX"] = 0.97,
["scale_downY"] = 0.97,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[228478] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.099999994039536,
["absolute_sineX"] = true,
["scaleY"] = 0.79999923706055,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.20000076293945,
["critical_scale"] = 1.05,
["amplitude"] = 2.5,
["fade_in"] = 0,
["duration"] = 0.099999994039535,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.0299999713898,
["scale_upY"] = 1.0299999713898,
["scale_downX"] = 0.96999996900559,
["scale_downY"] = 0.96999996900559,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[148135] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.09,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 1,
["critical_scale"] = 1.05,
["amplitude"] = 1.75,
["fade_in"] = 0.01,
["duration"] = 0.099999994039536,
["cooldown"] = 0.5,
["frequency"] = 60.874122619629,
},
},
[199547] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["2"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["5"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["4"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["7"] = {
["enabled"] = true,
["fade_out"] = 0.089999996125698,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0.59999847412109,
["critical_scale"] = 1.05,
["amplitude"] = 3,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1,
["cooldown"] = 0.5,
["frequency"] = 1,
},
["6"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
["8"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.039999961853,
["scale_upY"] = 1.039999961853,
["scale_downX"] = 0.96999996900558,
["scale_downY"] = 0.96999996900558,
["duration"] = 0.05,
["cooldown"] = 0.75,
["enabled"] = true,
},
},
[117418] = {
["1"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["3"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.1499999910593,
["absolute_sineX"] = false,
["scaleY"] = 1,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.099998474121094,
["critical_scale"] = 1.05,
["amplitude"] = 0.1499999910593,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.1799999922514,
["cooldown"] = 0.5,
["frequency"] = 116.00999450684,
},
},
[222024] = {
["1"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["3"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["2"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["5"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["4"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["7"] = {
["enabled"] = true,
["scale_upX"] = 1,
["duration"] = 0.050000000745058,
["scale_downX"] = 1,
["animation_type"] = "scale",
["critical_scale"] = 1,
["scale_upY"] = 1.1000000238419,
["cooldown"] = 0.75,
["scale_downY"] = 0.89999997615814,
},
["6"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
["8"] = {
["enabled"] = true,
["fade_out"] = 0.019999999552965,
["absolute_sineX"] = true,
["scaleY"] = 1,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["critical_scale"] = 1,
["amplitude"] = 1.7999999523163,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.050000000745058,
["cooldown"] = 0.5,
["frequency"] = 11.14999961853,
},
},
[155166] = {
["1"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["3"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["2"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
["4"] = {
["scaleY"] = 0.6,
["fade_out"] = 0.01,
["absolute_sineX"] = false,
["absolute_sineY"] = false,
["animation_type"] = "frameshake",
["scaleX"] = 0.2,
["enabled"] = true,
["amplitude"] = 0.45,
["fade_in"] = 0.01,
["duration"] = 0.2,
["cooldown"] = 0,
["frequency"] = 200,
},
},
[8042] = {
["1"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["3"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["2"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["5"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["4"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["7"] = {
["animation_type"] = "scale",
["scale_upX"] = 1.05,
["scale_upY"] = 1.05,
["scale_downX"] = 0.95,
["scale_downY"] = 0.95,
["duration"] = 0.060000000745058,
["cooldown"] = 0.75,
["enabled"] = true,
},
["6"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
["8"] = {
["scaleY"] = -1,
["fade_out"] = 0.05,
["absolute_sineX"] = false,
["absolute_sineY"] = true,
["animation_type"] = "frameshake",
["scaleX"] = 0,
["enabled"] = true,
["amplitude"] = 7.5,
["fade_in"] = 0.0099999997764826,
["duration"] = 0.06,
["cooldown"] = 0.5,
["frequency"] = 3.0999999046326,
},
},
},
["indicator_scale"] = 0.5299999713897705,
["focus_color"] = {
nil,
nil,
nil,
0.51164245605469,
},
["castbar_icon_size"] = "same as castbar plus healthbar",
["npc_colors"] = {
[211290] = {
true,
false,
"lightskyblue",
},
[190403] = {
true,
false,
"mediumspringgreen",
},
[81820] = {
true,
false,
"lightskyblue",
},
[207969] = {
true,
false,
"lightskyblue",
},
[228537] = {
true,
false,
"darkorange",
},
[190340] = {
true,
false,
"mediumspringgreen",
},
[214421] = {
true,
false,
"lightskyblue",
},
[207459] = {
true,
false,
"lightskyblue",
},
[59546] = {
true,
false,
"lightskyblue",
},
[186125] = {
true,
false,
"lightskyblue",
},
[211228] = {
true,
false,
"lightskyblue",
},
[190405] = {
true,
false,
"lightskyblue",
},
[130909] = {
true,
false,
"mediumspringgreen",
},
[172265] = {
true,
false,
"lightskyblue",
},
[228539] = {
true,
false,
"lightskyblue",
},
[216339] = {
true,
false,
"lightskyblue",
},
[190342] = {
true,
false,
"lightskyblue",
},
[95842] = {
true,
false,
"lightskyblue",
},
[164920] = {
true,
false,
"mediumspringgreen",
},
[135474] = {
true,
false,
"lightskyblue",
},
[228540] = {
true,
false,
"lightskyblue",
},
[186191] = {
true,
false,
"lightskyblue",
},
[231223] = {
true,
false,
"lightskyblue",
},
[190407] = {
true,
false,
"lightskyblue",
},
[164921] = {
true,
false,
"lightskyblue",
},
[98813] = {
true,
false,
"lightskyblue",
},
[208165] = {
true,
false,
"lightskyblue",
},
[206696] = {
true,
false,
"mediumspringgreen",
},
[129601] = {
false,
false,
"lightpink",
},
[168627] = {
true,
false,
"lightskyblue",
},
[133432] = {
true,
false,
"lightskyblue",
},
[216342] = {
true,
false,
"lightskyblue",
},
[219983] = {
true,
false,
"mediumspringgreen",
},
[204206] = {
true,
false,
"lightskyblue",
},
[113537] = {
true,
false,
"mediumspringgreen",
},
[184022] = {
true,
false,
"lightskyblue",
},
[126919] = {
true,
false,
"lightskyblue",
},
[225605] = {
true,
false,
"lightskyblue",
},
[129602] = {
true,
false,
"mediumspringgreen",
},
[75979] = {
true,
false,
"lightskyblue",
},
[184023] = {
true,
false,
"lightskyblue",
},
[220368] = {
true,
false,
"darkorange",
},
[225606] = {
true,
false,
"darkorange",
},
[102232] = {
true,
false,
"lightskyblue",
},
[164414] = {
true,
false,
"lightskyblue",
},
[196671] = {
true,
false,
"mediumspringgreen",
},
[144294] = {
true,
false,
"lightskyblue",
},
[190348] = {
true,
false,
"lightskyblue",
},
[187602] = {
true,
false,
"lightskyblue",
},
[213216] = {
true,
false,
"mediumspringgreen",
},
[144295] = {
true,
false,
"lightskyblue",
},
[163458] = {
true,
false,
"lightskyblue",
},
[207468] = {
true,
false,
"lightskyblue",
},
[213217] = {
true,
false,
"lightskyblue",
},
[81985] = {
true,
false,
"lightskyblue",
},
[199037] = {
true,
false,
"lightskyblue",
},
[163459] = {
true,
false,
"lightskyblue",
},
[206064] = {
true,
false,
"lightskyblue",
},
[189265] = {
true,
false,
"lightskyblue",
},
[229251] = {
true,
false,
"darkorange",
},
[164929] = {
true,
false,
"mediumspringgreen",
},
[197697] = {
true,
false,
"mediumspringgreen",
},
[128455] = {
true,
false,
"mediumspringgreen",
},
[189266] = {
true,
false,
"mediumspringgreen",
},
[165824] = {
true,
false,
"lightskyblue",
},
[168443] = {
true,
false,
"lightskyblue",
},
[212453] = {
true,
false,
"lightskyblue",
},
[197698] = {
true,
false,
"mediumspringgreen",
},
[213913] = {
true,
false,
"lightskyblue",
},
[206066] = {
true,
false,
"lightskyblue",
},
[192333] = {
true,
false,
"lightskyblue",
},
[104247] = {
true,
false,
"lightskyblue",
},
[200126] = {
true,
false,
"lightskyblue",
},
[196102] = {
true,
false,
"lightskyblue",
},
[168572] = {
true,
false,
"lightskyblue",
},
[84957] = {
true,
false,
"lightskyblue",
},
[98275] = {
true,
false,
"mediumspringgreen",
},
[187160] = {
true,
false,
"mediumspringgreen",
},
[45912] = {
true,
false,
"lightskyblue",
},
[164804] = {
true,
false,
"mediumspringgreen",
},
[173044] = {
true,
false,
"lightskyblue",
},
[195265] = {
true,
false,
"lightskyblue",
},
[168942] = {
true,
false,
"lightskyblue",
},
[204918] = {
true,
false,
"lightskyblue",
},
[138281] = {
true,
false,
"mediumspringgreen",
},
[193293] = {
true,
false,
"mediumspringgreen",
},
[168318] = {
true,
false,
"lightskyblue",
},
[224962] = {
true,
false,
"lightskyblue",
},
[170490] = {
true,
false,
"lightskyblue",
},
[98370] = {
true,
false,
"lightskyblue",
},
[229252] = {
true,
false,
"lightskyblue",
},
[205363] = {
true,
false,
"lightskyblue",
},
[84990] = {
true,
false,
"lightskyblue",
},
[194316] = {
true,
false,
"lightskyblue",
},
[166275] = {
true,
false,
"lightskyblue",
},
[45928] = {
true,
false,
"mediumspringgreen",
},
[228424] = {
true,
false,
"lightskyblue",
},
[47238] = {
true,
false,
"lightskyblue",
},
[130661] = {
true,
false,
"lightskyblue",
},
[212827] = {
true,
false,
"lightskyblue",
},
[220314] = {
true,
false,
"lightskyblue",
},
[194317] = {
true,
false,
"lightskyblue",
},
[166276] = {
true,
false,
"lightskyblue",
},
[212775] = {
true,
false,
"lightskyblue",
},
[104278] = {
true,
false,
"lightskyblue",
},
[181861] = {
true,
false,
"mediumspringgreen",
},
[174197] = {
true,
false,
"lightskyblue",
},
[164552] = {
true,
false,
"lightskyblue",
},
[205158] = {
true,
false,
"lightskyblue",
},
[128969] = {
true,
false,
"lightskyblue",
},
[190294] = {
true,
false,
"lightskyblue",
},
[220060] = {
true,
false,
"lightskyblue",
},
[196043] = {
true,
false,
"lightskyblue",
},
[189464] = {
true,
false,
"lightskyblue",
},
[199748] = {
true,
false,
"lightskyblue",
},
[133685] = {
true,
false,
"lightskyblue",
},
[144296] = {
true,
false,
"mediumspringgreen",
},
[162040] = {
true,
false,
"lightskyblue",
},
[194894] = {
true,
false,
"lightskyblue",
},
[59545] = {
true,
false,
"lightskyblue",
},
[196044] = {
true,
false,
"lightskyblue",
},
[137405] = {
true,
false,
"lightskyblue",
},
[168578] = {
true,
false,
"lightskyblue",
},
[168058] = {
true,
false,
"lightskyblue",
},
[220815] = {
true,
false,
"lightskyblue",
},
[216293] = {
true,
false,
"lightskyblue",
},
[231176] = {
true,
false,
"darkorange",
},
[167876] = {
true,
false,
"lightskyblue",
},
[196045] = {
true,
false,
"lightskyblue",
},
[167493] = {
true,
false,
"lightskyblue",
},
[192788] = {
true,
false,
"lightskyblue",
},
[41139] = {
true,
false,
"lightskyblue",
},
[163086] = {
true,
false,
"mediumspringgreen",
},
[214761] = {
true,
false,
"lightskyblue",
},
[221979] = {
true,
false,
"lightskyblue",
},
[205691] = {
true,
false,
"lightskyblue",
},
[90997] = {
true,
false,
"mediumspringgreen",
},
[192789] = {
true,
false,
"mediumspringgreen",
},
[135365] = {
true,
false,
"lightskyblue",
},
[167111] = {
true,
false,
"lightskyblue",
},
[199368] = {
true,
false,
"DEATHKNIGHT",
},
[214762] = {
true,
false,
"lightskyblue",
},
[212389] = {
true,
false,
"lightskyblue",
},
[45930] = {
true,
false,
"lightskyblue",
},
[213932] = {
true,
false,
"lightskyblue",
},
[231496] = {
true,
false,
"lightskyblue",
},
[162057] = {
true,
false,
"lightskyblue",
},
[40484] = {
true,
false,
"mediumspringgreen",
},
[190345] = {
true,
false,
"lightskyblue",
},
[186658] = {
true,
false,
"lightskyblue",
},
[206140] = {
true,
false,
"lightskyblue",
},
[137830] = {
true,
false,
"lightskyblue",
},
[90998] = {
true,
false,
"lightskyblue",
},
[99366] = {
true,
false,
"lightskyblue",
},
[223770] = {
true,
false,
"lightskyblue",
},
[170690] = {
true,
false,
"lightskyblue",
},
[98280] = {
true,
false,
"lightskyblue",
},
[129788] = {
true,
false,
"lightskyblue",
},
[170882] = {
true,
false,
"lightskyblue",
},
[189340] = {
true,
false,
"mediumspringgreen",
},
[135240] = {
true,
false,
"lightskyblue",
},
[201223] = {
true,
false,
"lightskyblue",
},
[133835] = {
true,
false,
"lightskyblue",
},
[151657] = {
true,
false,
"lightskyblue",
},
[59552] = {
true,
false,
"lightskyblue",
},
[135049] = {
true,
false,
"lightskyblue",
},
[223772] = {
true,
false,
"lightskyblue",
},
[220003] = {
true,
false,
"mediumspringgreen",
},
[135241] = {
true,
false,
"lightskyblue",
},
[224219] = {
true,
false,
"lightskyblue",
},
[220195] = {
true,
false,
"lightskyblue",
},
[186339] = {
true,
false,
"lightskyblue",
},
[98792] = {
true,
false,
"mediumspringgreen",
},
[195842] = {
true,
false,
"lightskyblue",
},
[212786] = {
true,
false,
"mediumspringgreen",
},
[105715] = {
true,
false,
"lightskyblue",
},
[212403] = {
true,
false,
"lightskyblue",
},
[122969] = {
true,
false,
"lightskyblue",
},
[223773] = {
true,
false,
"lightskyblue",
},
[188067] = {
true,
false,
"lightskyblue",
},
[169927] = {
true,
false,
"lightskyblue",
},
[133007] = {
true,
false,
"mediumspringgreen",
},
[216364] = {
true,
false,
"lightskyblue",
},
[193944] = {
true,
false,
"lightskyblue",
},
[213937] = {
true,
false,
"mediumspringgreen",
},
[224732] = {
true,
false,
"lightskyblue",
},
[220197] = {
true,
false,
"mediumspringgreen",
},
[197905] = {
true,
false,
"lightskyblue",
},
[165137] = {
true,
false,
"lightskyblue",
},
[163157] = {
true,
false,
"lightskyblue",
},
[190368] = {
true,
false,
"lightskyblue",
},
[215407] = {
true,
false,
"mediumspringgreen",
},
[231312] = {
true,
false,
"lightskyblue",
},
[130635] = {
true,
false,
"lightskyblue",
},
[223775] = {
true,
false,
"lightskyblue",
},
[40943] = {
true,
false,
"lightskyblue",
},
[131587] = {
true,
false,
"lightskyblue",
},
[92612] = {
true,
false,
"mediumspringgreen",
},
[40167] = {
true,
false,
"lightskyblue",
},
[184301] = {
true,
false,
"lightskyblue",
},
[91001] = {
true,
false,
"mediumspringgreen",
},
[189531] = {
true,
false,
"lightskyblue",
},
[223776] = {
true,
false,
"lightskyblue",
},
[205152] = {
true,
false,
"mediumspringgreen",
},
[169893] = {
true,
false,
"mediumspringgreen",
},
[207202] = {
true,
false,
"lightskyblue",
},
[195927] = {
true,
false,
"lightskyblue",
},
[196798] = {
true,
false,
"lightskyblue",
},
[194315] = {
true,
false,
"lightskyblue",
},
[122971] = {
true,
false,
"lightskyblue",
},
[223777] = {
true,
false,
"lightskyblue",
},
[165076] = {
true,
false,
"lightskyblue",
},
[229686] = {
true,
false,
"lightskyblue",
},
[189470] = {
true,
false,
"lightskyblue",
},
[195928] = {
true,
false,
"lightskyblue",
},
[230740] = {
true,
false,
"mediumspringgreen",
},
[214439] = {
true,
false,
"lightskyblue",
},
[123227] = {
true,
false,
"lightskyblue",
},
[171656] = {
true,
false,
"lightskyblue",
},
[231380] = {
true,
false,
"lightskyblue",
},
[210109] = {
true,
false,
"mediumspringgreen",
},
[197398] = {
false,
false,
"white",
},
[208193] = {
true,
false,
"lightskyblue",
},
[210812] = {
true,
false,
"lightskyblue",
},
[213942] = {
true,
false,
"lightskyblue",
},
[122972] = {
true,
false,
"lightskyblue",
},
[229069] = {
true,
false,
"lightskyblue",
},
[164567] = {
true,
false,
"lightskyblue",
},
[170572] = {
true,
false,
"lightskyblue",
},
[192800] = {
true,
false,
"lightskyblue",
},
[212793] = {
true,
false,
"lightskyblue",
},
[190373] = {
true,
false,
"lightskyblue",
},
[113998] = {
true,
false,
"mediumspringgreen",
},
[102788] = {
true,
false,
"lightskyblue",
},
[205384] = {
true,
false,
"lightskyblue",
},
[223844] = {
true,
false,
"lightskyblue",
},
[128434] = {
true,
false,
"lightskyblue",
},
[186116] = {
true,
false,
"lightskyblue",
},
[131545] = {
true,
false,
"lightskyblue",
},
[133836] = {
true,
false,
"lightskyblue",
},
[207940] = {
true,
false,
"lightskyblue",
},
[122973] = {
true,
false,
"lightskyblue",
},
[218671] = {
true,
false,
"lightskyblue",
},
[224249] = {
true,
false,
"mediumspringgreen",
},
[199749] = {
true,
false,
"mediumspringgreen",
},
[214264] = {
true,
false,
"mediumspringgreen",
},
[206074] = {
true,
false,
"lightskyblue",
},
[164506] = {
true,
false,
"lightskyblue",
},
[212412] = {
true,
false,
"lightskyblue",
},
[220141] = {
true,
false,
"lightskyblue",
},
[168594] = {
true,
false,
"lightskyblue",
},
[151476] = {
true,
false,
"mediumspringgreen",
},
[167956] = {
true,
false,
"lightskyblue",
},
[163503] = {
true,
false,
"lightskyblue",
},
[211263] = {
true,
false,
"mediumspringgreen",
},
[129553] = {
true,
false,
"lightskyblue",
},
[101991] = {
true,
false,
"lightskyblue",
},
[100531] = {
true,
false,
"mediumspringgreen",
},
[165529] = {
true,
false,
"lightskyblue",
},
[213934] = {
true,
false,
"mediumspringgreen",
},
[59555] = {
true,
false,
"lightskyblue",
},
[189227] = {
false,
false,
"mediumspringgreen",
},
[131864] = {
true,
false,
"lightskyblue",
},
[190377] = {
true,
false,
"lightskyblue",
},
[91000] = {
true,
false,
"mediumspringgreen",
},
[231385] = {
true,
false,
"mediumspringgreen",
},
[45922] = {
true,
false,
"lightskyblue",
},
[133912] = {
true,
false,
"lightskyblue",
},
[191847] = {
true,
false,
"lightskyblue",
},
[134232] = {
true,
false,
"lightskyblue",
},
[186226] = {
true,
false,
"lightskyblue",
},
[210818] = {
true,
false,
"lightskyblue",
},
[221102] = {
true,
false,
"lightskyblue",
},
[134024] = {
true,
false,
"lightskyblue",
},
[195930] = {
true,
false,
"lightskyblue",
},
[129370] = {
true,
false,
"lightskyblue",
},
[230748] = {
true,
false,
"lightskyblue",
},
[203857] = {
true,
false,
"lightskyblue",
},
[169875] = {
true,
false,
"lightskyblue",
},
[213885] = {
true,
false,
"mediumspringgreen",
},
[91006] = {
true,
false,
"lightskyblue",
},
[184580] = {
true,
false,
"lightskyblue",
},
[208456] = {
true,
false,
"lightskyblue",
},
[217208] = {
true,
false,
"lightskyblue",
},
[105704] = {
true,
false,
"lightskyblue",
},
[40633] = {
true,
false,
"mediumspringgreen",
},
[166299] = {
true,
false,
"lightskyblue",
},
[190381] = {
true,
false,
"lightskyblue",
},
[41096] = {
true,
false,
"lightskyblue",
},
[186420] = {
true,
false,
"lightskyblue",
},
[207946] = {
true,
false,
"lightskyblue",
},
[136470] = {
true,
false,
"lightskyblue",
},
[212673] = {
true,
false,
"mediumspringgreen",
},
[220158] = {
true,
false,
"mediumspringgreen",
},
[231197] = {
true,
false,
"mediumspringgreen",
},
[197535] = {
true,
false,
"lightskyblue",
},
[214066] = {
true,
false,
"lightskyblue",
},
[186220] = {
true,
false,
"lightskyblue",
},
[144071] = {
true,
false,
"lightskyblue",
},
[95771] = {
true,
false,
"lightskyblue",
},
[229537] = {
true,
false,
"orange",
},
[95766] = {
true,
false,
"mediumspringgreen",
},
[186741] = {
true,
false,
"lightskyblue",
},
[198047] = {
true,
false,
"lightskyblue",
},
[206351] = {
true,
false,
"lightskyblue",
},
[196642] = {
false,
false,
"white",
},
[45935] = {
true,
false,
"lightskyblue",
},
[185528] = {
true,
false,
"lightskyblue",
},
[213806] = {
true,
false,
"lightskyblue",
},
[212739] = {
true,
false,
"mediumspringgreen",
},
[166302] = {
true,
false,
"lightskyblue",
},
[209801] = {
true,
false,
"mediumspringgreen",
},
[167963] = {
true,
false,
"lightskyblue",
},
[206065] = {
true,
false,
"lightskyblue",
},
[138187] = {
true,
false,
"lightskyblue",
},
[185529] = {
true,
false,
"lightskyblue",
},
[214209] = {
true,
false,
"lightskyblue",
},
[195877] = {
true,
false,
"lightskyblue",
},
[197985] = {
true,
false,
"lightskyblue",
},
[168418] = {
true,
false,
"lightskyblue",
},
[217531] = {
true,
false,
"lightskyblue",
},
[174210] = {
true,
false,
"lightskyblue",
},
[195878] = {
true,
false,
"lightskyblue",
},
[40634] = {
true,
false,
"lightskyblue",
},
[163621] = {
true,
false,
"mediumspringgreen",
},
[131492] = {
true,
false,
"lightskyblue",
},
[217533] = {
true,
false,
"lightskyblue",
},
[95834] = {
true,
false,
"lightskyblue",
},
[104295] = {
true,
false,
"lightskyblue",
},
[98706] = {
true,
false,
"mediumspringgreen",
},
[131812] = {
true,
false,
"lightskyblue",
},
[131685] = {
true,
false,
"lightskyblue",
},
[173655] = {
true,
false,
"mediumspringgreen",
},
[163882] = {
true,
false,
"lightskyblue",
},
[44404] = {
true,
false,
"lightskyblue",
},
[213892] = {
true,
false,
"lightskyblue",
},
[76446] = {
true,
false,
"lightskyblue",
},
[224240] = {
true,
false,
"mediumspringgreen",
},
[100527] = {
true,
false,
"lightskyblue",
},
[196115] = {
true,
false,
"lightskyblue",
},
[171799] = {
true,
false,
"lightskyblue",
},
[185656] = {
true,
false,
"lightskyblue",
},
[207186] = {
true,
false,
"lightskyblue",
},
[213893] = {
true,
false,
"lightskyblue",
},
[167967] = {
true,
false,
"lightskyblue",
},
[129367] = {
true,
false,
"lightskyblue",
},
[165919] = {
true,
false,
"lightskyblue",
},
[174802] = {
true,
false,
"lightskyblue",
},
[222964] = {
true,
false,
"lightskyblue",
},
[95769] = {
true,
false,
"lightskyblue",
},
[220730] = {
true,
false,
"mediumspringgreen",
},
[96664] = {
true,
false,
"lightskyblue",
},
[187897] = {
true,
false,
"mediumspringgreen",
},
[223253] = {
true,
false,
"lightskyblue",
},
[167965] = {
true,
false,
"lightskyblue",
},
[160495] = {
true,
false,
"lightskyblue",
},
[134284] = {
true,
false,
"lightskyblue",
},
[165222] = {
true,
false,
"lightskyblue",
},
[168886] = {
true,
false,
"lightskyblue",
},
[213895] = {
true,
false,
"darkorange",
},
[165414] = {
true,
false,
"lightskyblue",
},
[75713] = {
true,
false,
"lightskyblue",
},
[196202] = {
true,
false,
"lightskyblue",
},
[84989] = {
true,
false,
"lightskyblue",
},
[195929] = {
true,
false,
"lightskyblue",
},
[184130] = {
true,
false,
"mediumspringgreen",
},
[223541] = {
true,
false,
"mediumspringgreen",
},
[173016] = {
true,
false,
"lightskyblue",
},
[168992] = {
true,
false,
"lightskyblue",
},
[205337] = {
true,
false,
"lightskyblue",
},
[131817] = {
true,
false,
"mediumspringgreen",
},
[211341] = {
true,
false,
"lightskyblue",
},
[220599] = {
true,
false,
"lightskyblue",
},
[189235] = {
true,
false,
"lightskyblue",
},
[219454] = {
true,
false,
"lightskyblue",
},
[193457] = {
true,
false,
"mediumspringgreen",
},
[131666] = {
true,
false,
"lightskyblue",
},
[199717] = {
true,
false,
"lightskyblue",
},
[195876] = {
true,
false,
"lightskyblue",
},
[211087] = {
true,
false,
"lightskyblue",
},
[193373] = {
true,
false,
"lightskyblue",
},
[184132] = {
true,
false,
"lightskyblue",
},
[45919] = {
true,
false,
"mediumspringgreen",
},
[163618] = {
true,
false,
"lightskyblue",
},
[225204] = {
true,
false,
"lightskyblue",
},
[75459] = {
true,
false,
"lightskyblue",
},
[131819] = {
true,
false,
"lightskyblue",
},
[186229] = {
true,
false,
"mediumspringgreen",
},
[131436] = {
true,
false,
"mediumspringgreen",
},
[216326] = {
true,
false,
"lightskyblue",
},
[196576] = {
true,
false,
"lightskyblue",
},
[168420] = {
true,
false,
"lightskyblue",
},
[120651] = {
true,
false,
"darkorange",
},
[102287] = {
true,
false,
"mediumspringgreen",
},
[196548] = {
true,
false,
"lightskyblue",
},
[211089] = {
true,
false,
"mediumspringgreen",
},
[184581] = {
true,
false,
"mediumspringgreen",
},
[220196] = {
true,
false,
"lightskyblue",
},
[168357] = {
true,
false,
"lightskyblue",
},
[190362] = {
true,
false,
"lightskyblue",
},
[207939] = {
true,
false,
"lightskyblue",
},
[164461] = {
true,
false,
"lightskyblue",
},
[195696] = {
true,
false,
"lightskyblue",
},
[131821] = {
true,
false,
"lightskyblue",
},
[133482] = {
true,
false,
"mediumspringgreen",
},
[239834] = {
true,
false,
"lightskyblue",
},
[214348] = {
true,
false,
"lightskyblue",
},
[208698] = {
true,
false,
"lightskyblue",
},
[104300] = {
true,
false,
"lightskyblue",
},
[83892] = {
true,
false,
"lightskyblue",
},
[138465] = {
true,
false,
"mediumspringgreen",
},
[43873] = {
true,
false,
"mediumspringgreen",
},
[136549] = {
true,
false,
"mediumspringgreen",
},
[223994] = {
true,
false,
"lightskyblue",
},
[205151] = {
true,
false,
"mediumspringgreen",
},
[193462] = {
true,
false,
"lightskyblue",
},
[138338] = {
true,
false,
"lightskyblue",
},
[187155] = {
true,
false,
"lightskyblue",
},
[100532] = {
true,
false,
"lightskyblue",
},
[208438] = {
true,
false,
"mediumspringgreen",
},
[200137] = {
true,
false,
"lightskyblue",
},
[189247] = {
true,
false,
"lightskyblue",
},
[214350] = {
true,
false,
"lightskyblue",
},
[205727] = {
true,
false,
"lightskyblue",
},
[97197] = {
true,
false,
"lightskyblue",
},
[83893] = {
true,
false,
"lightskyblue",
},
[221760] = {
true,
false,
"lightskyblue",
},
[191164] = {
true,
false,
"lightskyblue",
},
[191739] = {
true,
false,
"mediumspringgreen",
},
[130011] = {
true,
false,
"mediumspringgreen",
},
[186246] = {
true,
false,
"lightskyblue",
},
[194895] = {
true,
false,
"lightskyblue",
},
[100485] = {
true,
false,
"mediumspringgreen",
},
[210966] = {
true,
false,
"lightskyblue",
},
[207453] = {
true,
false,
"lightskyblue",
},
[98521] = {
true,
false,
"lightskyblue",
},
[190207] = {
true,
false,
"lightskyblue",
},
[39392] = {
true,
false,
"lightskyblue",
},
[210264] = {
true,
false,
"mediumspringgreen",
},
[104270] = {
true,
false,
"lightskyblue",
},
[163891] = {
true,
false,
"lightskyblue",
},
[207198] = {
true,
false,
"lightskyblue",
},
[133870] = {
true,
false,
"lightskyblue",
},
[162039] = {
true,
false,
"lightskyblue",
},
[223423] = {
true,
false,
"mediumspringgreen",
},
[187033] = {
true,
false,
"mediumspringgreen",
},
[207199] = {
true,
false,
"lightskyblue",
},
[165872] = {
true,
false,
"lightskyblue",
},
[224271] = {
true,
false,
"lightskyblue",
},
[206697] = {
true,
false,
"lightskyblue",
},
[213338] = {
true,
false,
"lightskyblue",
},
[214673] = {
true,
false,
"lightskyblue",
},
[163126] = {
true,
false,
"lightskyblue",
},
[190404] = {
true,
false,
"mediumspringgreen",
},
[129600] = {
true,
false,
"lightskyblue",
},
[190401] = {
true,
false,
"mediumspringgreen",
},
[81819] = {
true,
false,
"lightskyblue",
},
[129374] = {
true,
false,
"mediumspringgreen",
},
[207456] = {
true,
false,
"lightskyblue",
},
[213343] = {
true,
false,
"mediumspringgreen",
},
[76104] = {
true,
false,
"lightskyblue",
},
[220423] = {
true,
false,
"mediumspringgreen",
},
[211289] = {
true,
false,
"lightskyblue",
},
[219984] = {
true,
false,
"lightskyblue",
},
[98243] = {
true,
false,
"mediumspringgreen",
},
[212765] = {
true,
false,
"lightskyblue",
},
[45477] = {
true,
false,
"mediumspringgreen",
},
[216338] = {
true,
false,
"mediumspringgreen",
},
[163128] = {
true,
false,
"lightskyblue",
},
[206698] = {
true,
false,
"lightskyblue",
},
[218324] = {
true,
false,
"mediumspringgreen",
},
},
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.CastBarBorder:SetIgnoreParentScale(false)\n        \n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.CastBarBorder:SetIgnoreParentScale(false)\n        \n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1747052164,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133004,
["Enabled"] = true,
["Revision"] = 157,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast Bar Border",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 12\n    envTable.Anchor = {\n        side = 6, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.ExtraQuestMarker22154:Hide()\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.CheckForQuest (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.ExtraQuestMarker22154) then\n        \n        unitFrame.ExtraQuestMarker22154:Hide()\n        \n    end    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.Texture = [[Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon]]\n    envTable.Size = 12\n    envTable.Anchor = {\n        side = 6, --right side\n        x = 2,\n        y = 0\n    }\n    \n    if (not unitFrame.ExtraQuestMarker22154) then\n        unitFrame.ExtraQuestMarker22154 = unitFrame:CreateTexture (nil, \"overlay\")\n        local texture = unitFrame.ExtraQuestMarker22154\n        \n        texture:SetTexture (envTable.Texture)\n        texture:SetSize (envTable.Size, envTable.Size)\n        Plater.SetAnchor (texture, envTable.Anchor)\n    end\n    \n    function envTable.CheckForQuest (unitFrame)\n        if (unitFrame.namePlateIsQuestObjective) then\n            unitFrame.ExtraQuestMarker22154:Show()\n            \n        else\n            unitFrame.ExtraQuestMarker22154:Hide()\n            \n        end\n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1747067434,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/c1aJr4761/1",
["Icon"] = "Interface\\OPTIONSFRAME\\UI-OptionsFrame-NewFeatureIcon",
["Enabled"] = true,
["Revision"] = 46,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show an extra icon if the unit is a part of a quest you're current doing. You may adjust where the exclamation mark is shown in the Constructor.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Extra Quest Icon",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["nameLength"] = 15,
["manualNameOverwrites"] = {
{
"Mordretha, the Endless Empress",
"Mordretha",
},
},
},
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenName(unitId, unitFrame, modTable.config, envTable)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenName(unitId, unitFrame, modTable.config, envTable)\nend",
["Initialization"] = "function (modTable)\n    local UnitName = UnitName\n    local select = select\n    local concat = table.concat\n    local strsplit = strsplit\n    local UnitGUID = UnitGUID\n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    \n    local utf8len = function(str)\n        if utf8Enabled then\n            return str:utf8len()\n        end\n        \n        local count = 0\n        for _ in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n        end\n        \n        return count\n    end\n    \n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    -- Left to right works in the following steps for \"The Best Warrior Linaori\":\n    -- T. Best Warrior Linaori\n    -- T.B. Warrior Linaori\n    -- T.B.W. Linaori\n    local reduceLeftToRight\n    reduceLeftToRight = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not rightPart or utf8len(rightPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return leftPart .. \" \" .. rightPart, \"\"\n        end\n        \n        local firstWord, remainingRightPart = rightPart:match(\"^([^ ]*)[ ](.*)$\")\n        if not firstWord then\n            firstWord = rightPart\n            remainingRightPart = \"\"\n        end\n        leftPart = leftPart .. utf8sub(firstWord, 1, 1) .. \".\"\n        \n        return reduceLeftToRight(leftPart, remainingRightPart, lastPartLength, nameLength)\n    end\n    \n    -- Right to left works in the following steps for \"The Best Warrior Linaori\":\n    -- The Best W. Linaori\n    -- The B.W. Linaori\n    -- T.B.W. Linaori\n    local reduceRightToLeft\n    reduceRightToLeft = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not leftPart or utf8len(leftPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return \"\", leftPart .. \" \" .. rightPart\n        end\n        \n        local remainingLeftPart, lastWord = leftPart:match(\"^(.*)[ ]([^ ]*)$\")\n        \n        if not remainingLeftPart then\n            remainingLeftPart = \"\"\n            lastWord = leftPart\n        end\n        \n        rightPart = utf8sub(lastWord, 1, 1) .. \".\" .. rightPart\n        \n        return reduceRightToLeft(remainingLeftPart, rightPart, lastPartLength, nameLength)\n    end\n    \n    local cutOffName = function (wholeName, config)\n        if config.noSplitCutoff then\n            return utf8sub(wholeName, 1, config.nameLength)\n        end\n        \n        return wholeName\n    end\n    \n    local returnUpdateName = function (unitFrame, visibleName)\n        unitFrame.namePlateUnitName = visibleName\n        unitFrame.PlateFrame.namePlateUnitName = visibleName\n        unitFrame.healthBar.unitName:SetText(visibleName)\n    end\n    \n    modTable.shortenName = function (unitId, unitFrame, config, envTable)\n        if not unitId then return end\n        \n        local nameLength = config.nameLength\n        local name = unitFrame.namePlateUnitName\n        \n        -- let the player overwrite the name regardless of length based on the NPC name\n        local manualNameOverwrite = config.manualNameOverwrites[name]\n        if manualNameOverwrite then\n            return returnUpdateName(unitFrame, manualNameOverwrite)\n        end\n        \n        -- let the player overwrite the name regardless of length based on the NPC ID\n        local npcId = select(6, strsplit(\"-\", UnitGUID(unitId)))\n        local manualNpcIdOverwrite = config.manualNameOverwrites[npcId]\n        if manualNpcIdOverwrite then\n            return returnUpdateName(unitFrame, manualNpcIdOverwrite)\n        end\n        \n        -- the original name is short enough already\n        if utf8len(name) <= nameLength then\n            return returnUpdateName(unitFrame, name)\n        end\n        \n        -- Naming often implies \"<name>, <title>\" or \"<title> <name>\"\n        if name:find(\",\") then\n            -- assumed that \",\" implies a title, and try to strip them of their title\n            local possibleName = name:match(\"^(.*)[,][^,]*$\")\n            \n            if possibleName then\n                if utf8len(possibleName) <= nameLength then\n                    return returnUpdateName(unitFrame, possibleName)\n                end\n                \n                -- in case of longer names: \"Linaori the best fury warrior ever, of the deeps\n                name = possibleName\n            end\n        end\n        \n        -- Forsworn Squad-Leader -> Forsworn Squad Leader\n        -- Squad-Leader of the Forsworn -> Squad Leader of the Forsworn\n        if config.hyphenAsSpace then\n            local lastPart\n            \n            -- keep \"Forsworn Squad-Leader\" as is, while still replacing \"Squad-Leader of the Forsworn\"\n            if config.keepHyphenInLastName then\n                local _, spaces = name:gsub(\" \", \"\")\n                if spaces > 0 then\n                    name, lastPart = name:match(\"^(.*)[ ]([^ ]*)$\")\n                end\n            end\n            \n            name = name:gsub(\"-\", \" \")\n            if lastPart then\n                name = name .. \" \" .. lastPart\n            end\n        end\n        \n        -- amount of times we can check if the name needs replacing\n        local _, occurrences = name:gsub(\" \", \"\")\n        \n        -- no spaces left to split on, just return whatever can be made of it\n        if occurrences == 0 then\n            return returnUpdateName(unitFrame, cutOffName(name, config))\n        end\n        \n        local nameToShorten, nameToKeep, nameToKeepLength\n        if config.keepRightSide then\n            -- we always want the last name if possible\n            -- example: Cleave Training Dummy -> Dummy\n            nameToShorten, nameToKeep = name:match(\"^(.*)[ ]([^ ]*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        else\n            -- we always want the first name if possible\n            -- example: Cleave Training Dummy -> Cleave\n            nameToKeep, nameToShorten = name:match(\"^([^ ]*)[ ](.*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        end\n        \n        -- in case the name to keep is too long, just use that\n        if nameToKeepLength > nameLength or not config.abbreviate then\n            return returnUpdateName(unitFrame, cutOffName(nameToKeep, config))\n        end\n        \n        local shortenedName\n        if config.abbreviateLeftToRight then\n            shortenedName, _ = reduceLeftToRight(\"\", nameToShorten, nameToKeepLength, nameLength)\n        else\n            _, shortenedName = reduceRightToLeft(nameToShorten, \"\", nameToKeepLength, nameLength)\n        end\n        \n        if config.keepRightSide then\n            return returnUpdateName(unitFrame, shortenedName .. \" \" .. nameToKeep)\n        else\n            return returnUpdateName(unitFrame, nameToKeep .. \" \" .. shortenedName)\n        end\n    end\nend",
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenName(unitId, unitFrame, modTable.config, envTable)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenName(unitId, unitFrame, modTable.config, envTable)\nend",
["Initialization"] = "function (modTable)\n    local UnitName = UnitName\n    local select = select\n    local concat = table.concat\n    local strsplit = strsplit\n    local UnitGUID = UnitGUID\n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    \n    local utf8len = function(str)\n        if utf8Enabled then\n            return str:utf8len()\n        end\n        \n        local count = 0\n        for _ in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n        end\n        \n        return count\n    end\n    \n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    -- Left to right works in the following steps for \"The Best Warrior Linaori\":\n    -- T. Best Warrior Linaori\n    -- T.B. Warrior Linaori\n    -- T.B.W. Linaori\n    local reduceLeftToRight\n    reduceLeftToRight = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not rightPart or utf8len(rightPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return leftPart .. \" \" .. rightPart, \"\"\n        end\n        \n        local firstWord, remainingRightPart = rightPart:match(\"^([^ ]*)[ ](.*)$\")\n        if not firstWord then\n            firstWord = rightPart\n            remainingRightPart = \"\"\n        end\n        leftPart = leftPart .. utf8sub(firstWord, 1, 1) .. \".\"\n        \n        return reduceLeftToRight(leftPart, remainingRightPart, lastPartLength, nameLength)\n    end\n    \n    -- Right to left works in the following steps for \"The Best Warrior Linaori\":\n    -- The Best W. Linaori\n    -- The B.W. Linaori\n    -- T.B.W. Linaori\n    local reduceRightToLeft\n    reduceRightToLeft = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not leftPart or utf8len(leftPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return \"\", leftPart .. \" \" .. rightPart\n        end\n        \n        local remainingLeftPart, lastWord = leftPart:match(\"^(.*)[ ]([^ ]*)$\")\n        \n        if not remainingLeftPart then\n            remainingLeftPart = \"\"\n            lastWord = leftPart\n        end\n        \n        rightPart = utf8sub(lastWord, 1, 1) .. \".\" .. rightPart\n        \n        return reduceRightToLeft(remainingLeftPart, rightPart, lastPartLength, nameLength)\n    end\n    \n    local cutOffName = function (wholeName, config)\n        if config.noSplitCutoff then\n            return utf8sub(wholeName, 1, config.nameLength)\n        end\n        \n        return wholeName\n    end\n    \n    local returnUpdateName = function (unitFrame, visibleName)\n        unitFrame.namePlateUnitName = visibleName\n        unitFrame.PlateFrame.namePlateUnitName = visibleName\n        unitFrame.healthBar.unitName:SetText(visibleName)\n    end\n    \n    modTable.shortenName = function (unitId, unitFrame, config, envTable)\n        if not unitId then return end\n        \n        local nameLength = config.nameLength\n        local name = unitFrame.namePlateUnitName\n        \n        -- let the player overwrite the name regardless of length based on the NPC name\n        local manualNameOverwrite = config.manualNameOverwrites[name]\n        if manualNameOverwrite then\n            return returnUpdateName(unitFrame, manualNameOverwrite)\n        end\n        \n        -- let the player overwrite the name regardless of length based on the NPC ID\n        local npcId = select(6, strsplit(\"-\", UnitGUID(unitId)))\n        local manualNpcIdOverwrite = config.manualNameOverwrites[npcId]\n        if manualNpcIdOverwrite then\n            return returnUpdateName(unitFrame, manualNpcIdOverwrite)\n        end\n        \n        -- the original name is short enough already\n        if utf8len(name) <= nameLength then\n            return returnUpdateName(unitFrame, name)\n        end\n        \n        -- Naming often implies \"<name>, <title>\" or \"<title> <name>\"\n        if name:find(\",\") then\n            -- assumed that \",\" implies a title, and try to strip them of their title\n            local possibleName = name:match(\"^(.*)[,][^,]*$\")\n            \n            if possibleName then\n                if utf8len(possibleName) <= nameLength then\n                    return returnUpdateName(unitFrame, possibleName)\n                end\n                \n                -- in case of longer names: \"Linaori the best fury warrior ever, of the deeps\n                name = possibleName\n            end\n        end\n        \n        -- Forsworn Squad-Leader -> Forsworn Squad Leader\n        -- Squad-Leader of the Forsworn -> Squad Leader of the Forsworn\n        if config.hyphenAsSpace then\n            local lastPart\n            \n            -- keep \"Forsworn Squad-Leader\" as is, while still replacing \"Squad-Leader of the Forsworn\"\n            if config.keepHyphenInLastName then\n                local _, spaces = name:gsub(\" \", \"\")\n                if spaces > 0 then\n                    name, lastPart = name:match(\"^(.*)[ ]([^ ]*)$\")\n                end\n            end\n            \n            name = name:gsub(\"-\", \" \")\n            if lastPart then\n                name = name .. \" \" .. lastPart\n            end\n        end\n        \n        -- amount of times we can check if the name needs replacing\n        local _, occurrences = name:gsub(\" \", \"\")\n        \n        -- no spaces left to split on, just return whatever can be made of it\n        if occurrences == 0 then\n            return returnUpdateName(unitFrame, cutOffName(name, config))\n        end\n        \n        local nameToShorten, nameToKeep, nameToKeepLength\n        if config.keepRightSide then\n            -- we always want the last name if possible\n            -- example: Cleave Training Dummy -> Dummy\n            nameToShorten, nameToKeep = name:match(\"^(.*)[ ]([^ ]*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        else\n            -- we always want the first name if possible\n            -- example: Cleave Training Dummy -> Cleave\n            nameToKeep, nameToShorten = name:match(\"^([^ ]*)[ ](.*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        end\n        \n        -- in case the name to keep is too long, just use that\n        if nameToKeepLength > nameLength or not config.abbreviate then\n            return returnUpdateName(unitFrame, cutOffName(nameToKeep, config))\n        end\n        \n        local shortenedName\n        if config.abbreviateLeftToRight then\n            shortenedName, _ = reduceLeftToRight(\"\", nameToShorten, nameToKeepLength, nameLength)\n        else\n            _, shortenedName = reduceRightToLeft(nameToShorten, \"\", nameToKeepLength, nameLength)\n        end\n        \n        if config.keepRightSide then\n            return returnUpdateName(unitFrame, shortenedName .. \" \" .. nameToKeep)\n        else\n            return returnUpdateName(unitFrame, nameToKeep .. \" \" .. shortenedName)\n        end\n    end\nend",
},
["Time"] = 1747044368,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/QHPCLaX03/11",
["Icon"] = 134331,
["Enabled"] = true,
["Revision"] = 711,
["semver"] = "1.0.10",
["Author"] = "Linalori-Ragnaros",
["Desc"] = "Tries to make sense of long names",
["Prio"] = 99,
["version"] = 11,
["PlaterCore"] = 1,
["Name"] = "Smart Name Shortener",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 2,
["Max"] = 99,
["Desc"] = "The length of the name can be before cutoff is applied",
["Min"] = 0,
["Key"] = "nameLength",
["Value"] = 18,
["Name"] = "Name length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "hyphenAsSpace",
["Value"] = true,
["Name"] = "Treat hyphens (-) as space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Also split names on hyphens instead of just the whole word",
},
{
["Type"] = 4,
["Key"] = "keepHyphenInLastName",
["Value"] = true,
["Name"] = "Keep hyphen in the last name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When hyphens are treated as spaces, keep the last part of the name intact",
},
{
["Type"] = 4,
["Key"] = "noSplitCutoff",
["Value"] = true,
["Name"] = "Cutoff when no split can be done",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When the smallest word is still longer than \"Name length\", cut it off to the name length. If unchecked, will return the full name",
},
{
["Type"] = 4,
["Key"] = "abbreviate",
["Value"] = true,
["Name"] = "Abbreviate names (W.O. Warcraft)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If unchecked, nothing is shown instead",
},
{
["Type"] = 4,
["Key"] = "abbreviateLeftToRight",
["Value"] = false,
["Name"] = "Abbreviate left to right",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Where to start abbreviation. (ltr) \"T. Best Linaori\" vs (rtl) \"The B. Linaori\"",
},
{
["Type"] = 4,
["Key"] = "keepRightSide",
["Value"] = true,
["Name"] = "Keep right side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Keep the right side instead of left side of the name. Right side: \"T.B. Warrior\". Left side: \"The B.L.\"",
},
{
["Type"] = 7,
["Key"] = "manualNameOverwrites",
["Value"] = {
{
"Mordretha, the Endless Empress",
"Mordretha",
},
},
["Name"] = "Manual name overwrites",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If a name matches the key, overwrite it with value and don't guess anything after",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n",
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CheckAggro (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.CheckAggro (unitFrame)\n        --if the player isn't in combat, ignore this check\n        if (not Plater.IsInCombat()) then\n            return\n        end\n        \n        --if this unit isn't in combat, ignore\n        if (not unitFrame.InCombat) then\n            return \n        end\n        \n        --player is a tank?\n        if (Plater.PlayerIsTank) then\n            --player isn't tanking this unit?\n            if (not unitFrame.namePlateThreatIsTanking) then\n                --check if a second tank is tanking it\n                if (Plater.ZoneInstanceType == \"raid\") then\n                    --return a list with the name of tanks in the raid\n                    local tankPlayersInTheRaid = Plater.GetTanks()\n                    \n                    --get the target name of this unit\n                    local unitTargetName = UnitName (unitFrame.targetUnitID)\n                    \n                    --check if the unit isn't targeting another tank in the raid and paint the color\n                    if (not tankPlayersInTheRaid [unitTargetName]) then\n                        Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                    else\n                        --another tank is tanking this unit\n                        --do nothing\n                    end\n                    \n                else\n                    Plater.SetNameplateColor (unitFrame, Plater.db.profile.tank.colors.noaggro)\n                end\n            end\n            \n        else\n            --player is a dps or healer\n            if (unitFrame.namePlateThreatIsTanking) then\n                Plater.SetNameplateColor (unitFrame, Plater.db.profile.dps.colors.aggro)\n            end\n            \n        end        \n    end\nend\n\n\n\n\n\n\n",
},
["Time"] = 1746663268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\checked_64",
["Enabled"] = false,
["Revision"] = 48,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "When a mob is attacking you, force show the threat color. For tanks, force threat color if the mob is not attacking you.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Force Threat Color",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border options\n    local borderSize = 3\n    local borderColor = \"white\"\n    \n    if (not unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            local r, g, b, a = DetailsFramework:ParseColors (borderColor)\n            unitFrame.healthBar.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            unitFrame.healthBar.TargetBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.TargetBorder:UpdateSizes()            \n            \n            unitFrame.healthBar.TargetBorder:Show()\n        else\n            unitFrame.healthBar.TargetBorder:Hide()\n        end\n    end\nend",
},
["Hooks"] = {
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder:Hide()\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border options\n    local borderSize = 3\n    local borderColor = \"white\"\n    \n    if (not unitFrame.healthBar.TargetBorder) then\n        unitFrame.healthBar.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            local r, g, b, a = DetailsFramework:ParseColors (borderColor)\n            unitFrame.healthBar.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            unitFrame.healthBar.TargetBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n            unitFrame.healthBar.TargetBorder:UpdateSizes()            \n            \n            unitFrame.healthBar.TargetBorder:Show()\n        else\n            unitFrame.healthBar.TargetBorder:Hide()\n        end\n    end\nend",
},
["Time"] = 1747044366,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/targetborder/1",
["Icon"] = "Interface\\CHATFRAME\\UI-ChatInputBorder",
["Enabled"] = true,
["Revision"] = 71,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add a border around the current target.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Target Border",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
["Swp"] = {
1,
0.4627451300621,
0,
1,
},
["onlyMoon"] = {
0.32549020648003,
0.65882354974747,
1,
1,
},
["onlySun"] = {
1,
0.4627451300621,
0,
1,
},
["bothDebuffs"] = {
0.7607843875885,
0.086274512112141,
1,
1,
},
["vamp"] = {
0.7607843875885,
0.086274512112141,
1,
1,
},
["DK"] = {
0.7607843875885,
0.086274512112141,
1,
1,
},
},
["HooksTemp"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    self.ThrottleUpdate = 0.016\n    \n    local hasMoonfire = Plater.NameplateHasAura(unitFrame, 164812)\n    local hasSunfire = Plater.NameplateHasAura(unitFrame, 164815)\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    local hasSwp = Plater.NameplateHasAura(unitFrame, 589)\n    local hasDK = Plater.NameplateHasAura(unitFrame, 191587)\n    \n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    elseif (hasSwp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.Swp)\n    elseif (hasDK) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.DK)\n    elseif not (hasMoonfire and hasSunfire) then\n        if hasMoonfire then\n            Plater.SetNameplateColor(unitFrame, modTable.config.onlyMoon)\n        elseif hasSunfire then\n            Plater.SetNameplateColor(unitFrame, modTable.config.onlySun)\n        else\n            Plater.RefreshNameplateColor (unitFrame)\n        end\n    elseif (hasMoonfire and hasSunfire) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.bothDebuffs)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["UID"] = "0x6821e3ea56c1941",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    self.ThrottleUpdate = 0.016\n    \n    local hasMoonfire = Plater.NameplateHasAura(unitFrame, 164812)\n    local hasSunfire = Plater.NameplateHasAura(unitFrame, 164815)\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n    local hasSwp = Plater.NameplateHasAura(unitFrame, 589)\n    local hasDK = Plater.NameplateHasAura(unitFrame, 191587)\n    \n    \n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    elseif (hasSwp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.Swp)\n    elseif (hasDK) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.DK)\n    elseif not (hasMoonfire and hasSunfire) then\n        if hasMoonfire then\n            Plater.SetNameplateColor(unitFrame, modTable.config.onlyMoon)\n        elseif hasSunfire then\n            Plater.SetNameplateColor(unitFrame, modTable.config.onlySun)\n        else\n            Plater.RefreshNameplateColor (unitFrame)\n        end\n    elseif (hasMoonfire and hasSunfire) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.bothDebuffs)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    \nend\n\n\n",
},
["Time"] = 1747067229,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["Icon"] = 236216,
["Enabled"] = false,
["Revision"] = 143,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Only Moonfire Colour",
["Value"] = {
0.062745101749897,
0.078431375324726,
0.35686275362968,
1,
},
["Key"] = "onlyMoon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Colour of plate when only Moonfire is active",
},
{
["Type"] = 1,
["Name"] = "Only Sunfire Colour",
["Value"] = {
1,
0.4627451300621,
0,
1,
},
["Key"] = "onlySun",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Colour of plate when only Sunfire is active",
},
{
["Type"] = 1,
["Name"] = "Both Debuffs Colour",
["Value"] = {
1,
0,
0.97254908084869,
1,
},
["Key"] = "bothDebuffs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Colour of plate when both debuffs are active",
},
{
["Type"] = 1,
["Name"] = "Vampiric Touch",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "vamp",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "SWP",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "Swp",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "SWP",
},
{
["Type"] = 1,
["Name"] = "DK",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "DK",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "DK",
},
},
["Author"] = "Herb-Frostmourne",
["Desc"] = "Change color of nameplate to blue if enemy ONLY has moonfire, orange if ONLY sunfire, purple if both active. Good for quickly identifying next target when multidotting",
["Prio"] = 99,
["Name"] = "Druid & SP Dot Colors",
["PlaterCore"] = 1,
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["UID"] = "0x682222183d553c",
["Hooks"] = {
["Nameplate Updated"] = "		function (self, unitId, unitFrame, envTable, modTable)\n			--insert code here\n			\n		end\n	",
["Constructor"] = "		function (self, unitId, unitFrame, envTable, modTable)\n			--insert code here\n			\n		end\n	",
},
["Time"] = 1747067434,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["Icon"] = "",
["Enabled"] = true,
["Revision"] = 3,
["Options"] = {
},
["Author"] = "Jervaise-Kazzak",
["Desc"] = "",
["Prio"] = 99,
["Name"] = "bokmaster",
["PlaterCore"] = 1,
["HooksTemp"] = {
["Nameplate Updated"] = "		function (self, unitId, unitFrame, envTable, modTable)\n			--insert code here\n			\n		end\n	",
["Constructor"] = "		function (self, unitId, unitFrame, envTable, modTable)\n			--insert code here\n			\n		end\n	",
},
},
{
["Enabled"] = true,
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Author"] = "Jervaise",
["OptionsValues"] = {
},
["Desc"] = "Test integration example",
["Hooks"] = {
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    local hasVamp = Plater.NameplateHasAura(unitFrame, 34914)\n\n    if (hasVamp) then\n        Plater.SetNameplateColor(unitFrame, modTable.config.vamp)\n    else\n        Plater.RefreshNameplateColor (unitFrame)\n    end\nend",
},
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["LoadConditions"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Time"] = 1747067436,
},
},
["auras_per_row_auto"] = false,
["extra_icon_caster_outline"] = "OUTLINE",
["auras_per_row_amount2"] = 2,
["disable_omnicc_on_auras"] = true,
["aura_width"] = 18,
["ghost_auras"] = {
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["cast_audiocues"] = {
[384524] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[376683] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375727] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[88308] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372222] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[267354] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[427176] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[375348] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[465682] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372735] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[374839] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[269843] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[283422] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388801] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[340160] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[260894] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375351] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[443500] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[226406] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[183088] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[267551] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412200] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[197974] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[370764] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[201226] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[259940] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377204] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[468813] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412012] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[427376] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[465754] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[332708] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[275907] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[432031] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[447395] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[395184] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372107] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[257870] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[256627] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[268260] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[424958] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[472452] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[439621] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[451543] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[376892] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[367521] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[340300] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200784] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[257426] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[1214546] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[419351] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[473220] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[434779] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369563] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[425027] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[422541] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[448105] = "nil",
[422414] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[427323] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[429427] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[412215] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[257397] = "nil",
[333294] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[1214315] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[265019] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[384978] = "nil",
[387910] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[265721] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[449130] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[437719] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[333488] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[333477] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369061] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[421910] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377383] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[323608] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377732] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[408141] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388060] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[450854] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369828] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[266209] = "nil",
[257862] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[164357] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375439] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[385958] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[411012] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[268202] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[386660] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377034] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382708] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[421277] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200345] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[291865] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[188169] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[385578] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[257288] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375251] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[459210] = "Interface\\AddOns\\WeakAuras\\Media\\Sounds\\Glass.mp3",
[383823] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[459779] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[381525] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[183465] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372225] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[200913] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[428293] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382712] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[374361] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[265540] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[253721] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[369573] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[1217653] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[427869] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[416139] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[226304] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[426893] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[330614] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[262377] = "Interface\\AddOns\\WeakAuras\\Media\\Sounds\\RunAway.ogg",
[372087] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[321834] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[440218] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[188404] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369409] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[397889] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[473114] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[257756] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[427342] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[453161] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[451496] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[324323] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[331718] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388392] = "nil",
[384868] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[426260] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[317231] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[426261] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[387629] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[323496] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[1217496] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[367484] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[434824] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[226296] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382233] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[426645] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[87618] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[321968] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[393432] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[209628] = "nil",
[448640] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[377559] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[374563] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[436592] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[427025] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[448619] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[169179] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[397931] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[372201] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200768] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[369465] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[431494] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[200291] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[433662] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[293986] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[449090] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[432198] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[396665] = "nil",
[445457] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[388911] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[375327] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[396812] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[474018] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[156718] = "nil",
[388976] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[382277] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[462216] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[441119] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[272609] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[320822] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[387950] = "nil",
[372311] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[269029] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[373742] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[385536] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[432520] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[199151] = "nil",
[200261] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[432967] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[378818] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[461796] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[411994] = "nil",
[375943] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[474087] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[169929] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412505] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[427359] = "Interface\\Addons\\SharedMedia_Causese\\sound\\CC.ogg",
[391723] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[260793] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[193505] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[447270] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[323137] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[255567] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[265372] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[427616] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[376170] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[391118] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[320729] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[435012] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[339706] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[1215738] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[413529] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[451843] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[426860] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[412129] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
[1217294] = "Interface\\Addons\\SharedMedia_Causese\\sound\\Front.ogg",
},
["pet_width_scale"] = 0.94999998807907,
["health_animation_time_dilatation"] = 2.6199998855591,
["target_highlight_color"] = {
0.9764706492424,
1,
0.97254908084869,
},
["cast_statusbar_spark_alpha"] = 0.79999995231628,
["indicator_raidmark_scale"] = 0.8699999451637268,
["resources"] = {
["scale"] = 0.80000001192093,
},
["castbar_target_font"] = "Accidental Presidency",
["ui_parent_cast_level"] = 10,
["castbar_target_outline"] = "THICKOUTLINE",
["ui_parent_buff2_level"] = 10,
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["aura_sort"] = true,
["castbar_target_color"] = {
0.96862745098039,
0.9921568627451,
},
["pet_height_scale"] = 0.94999998807907,
["aura_x_offset"] = 0,
["first_run3"] = true,
["ui_parent_scale_tune"] = 1.47000002861023,
["ui_parent_buff_level"] = 10,
["indicator_raidmark_anchor"] = {
["y"] = 0.30999755859375,
["x"] = -0.4900054931640625,
["side"] = 10,
},
["tank"] = {
["colors"] = {
["anothertank"] = {
0.7294117808342,
0.91764712333679,
},
["aggro"] = {
0.50196081399918,
0.50196081399918,
},
},
},
["aura_tracker"] = {
["buff_tracked"] = {
["227931"] = true,
["297133"] = true,
["163689"] = true,
["233210"] = true,
["209859"] = true,
},
["debuff"] = {
348604,
335467,
},
["debuff_banned"] = {
["391403"] = true,
["406231"] = true,
["345219"] = true,
[420054] = true,
["458478"] = false,
["391568"] = true,
["462620"] = true,
["317583"] = true,
["374557"] = false,
["453850"] = false,
["356372"] = true,
["314859"] = true,
["377540"] = false,
["375905"] = true,
["462734"] = true,
["202347"] = false,
["439574"] = true,
["390276"] = false,
["440772"] = true,
["115994"] = false,
["55078"] = false,
["394979"] = true,
["199721"] = true,
["295367"] = true,
["214968"] = true,
["247777"] = false,
["1490"] = true,
["373305"] = true,
["322098"] = true,
["355721"] = true,
["281425"] = true,
["430589"] = false,
["394061"] = false,
["452229"] = false,
["403662"] = true,
["459191"] = true,
["431145"] = true,
["345801"] = false,
["279956"] = true,
["390271"] = false,
[394933] = true,
["356329"] = true,
["455857"] = true,
[440340] = true,
},
["buff_banned"] = {
["333553"] = true,
["311202"] = true,
["206150"] = true,
["61574"] = true,
["61573"] = true,
},
},
["castbar_target_show"] = true,
["cast_statusbar_color"] = {
0.98823529411765,
0.77647058823529,
0.27450980392157,
0.96000000089407,
},
["update_throttle"] = 0.199999988079071,
["extra_icon_height"] = 20,
["tocversion"] = 110100,
["castbar_icon_show"] = false,
["indicator_extra_raidmark"] = false,
["castbar_target_text_size"] = 13,
["extra_icon_timer_font"] = "Expressway",
["not_affecting_combat_alpha"] = 0.59999996423721,
["target_highlight_alpha"] = 0.2099999934434891,
["patch_version_profile"] = 1,
["target_shady_alpha"] = 0.3899999856948853,
["target_highlight_height"] = 8,
["target_shady_combat_only"] = false,
["version"] = 11,
["aura_breakline_space"] = 2.399999856948853,
["url"] = "https://wago.io/wYmUzrWb5/11",
["hover_highlight_alpha"] = 0.1499999910593033,
["patch_version"] = 39,
["range_check_in_range_or_target_alpha"] = 1,
["aura_timer_text_size"] = 9,
["aura_grow_direction"] = 1,
["number_region_first_run"] = true,
["aura_width2"] = 22,
["health_statusbar_bgcolor"] = {
0.11372549019608,
0.11372549019608,
0.11372549019608,
0.89000000059605,
},
["script_data_trash"] = {
{
["Revision"] = 1,
["OptionsValues"] = {
},
["Name"] = "DotMaster Integration",
["config"] = {
["enabled"] = true,
},
["Author"] = "DotMaster",
["Time"] = 1747031274,
["Desc"] = "Empty DotMaster integration mod",
["Hooks"] = {
["Nameplate Updated"] = true,
},
["__TrashAt"] = 1747031303,
["IconPath"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Scripts"] = {
["Nameplate Updated"] = {
["GridColor"] = {
0,
0,
0,
0,
},
["Revision"] = 1,
["Options"] = {
},
["Code"] = "function(self, unitId, unitFrame, envTable, modTable) end",
["GridSize"] = {
["Height"] = 1,
["Width"] = 1,
},
["AutoGridSize"] = true,
["SpellIds"] = {
},
["Time"] = 1747031274,
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["OptionsValues"] = {
},
},
},
["Temp_OnShowCode"] = "\n\n",
["Temp_ConstructorCode"] = "\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Options"] = {
},
},
{
["Revision"] = 1,
["Author"] = "DotMaster",
["Desc"] = "Empty DotMaster integration mod",
["Hooks"] = {
["Nameplate Updated"] = true,
},
["config"] = {
["enabled"] = true,
},
["Name"] = "DotMaster Integration",
["Scripts"] = {
["Nameplate Updated"] = {
["GridColor"] = {
0,
0,
0,
0,
},
["Revision"] = 1,
["Options"] = {
},
["Code"] = "function(self, unitId, unitFrame, envTable, modTable) end",
["GridSize"] = {
["Height"] = 1,
["Width"] = 1,
},
["AutoGridSize"] = true,
["SpellIds"] = {
},
["Time"] = 1747031735,
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["OptionsValues"] = {
},
},
},
["IconPath"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Time"] = 1747031735,
["__TrashAt"] = 1747032266,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Temp_OnShowCode"] = "\n\n",
["Hooks"] = {
["Nameplate Updated"] = true,
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1747032433,
["Scripts"] = {
["Nameplate Updated"] = {
["GridColor"] = {
0,
0,
0,
0,
},
["Revision"] = 1,
["Options"] = {
},
["Code"] = "function(self, unitId, unitFrame, envTable, modTable) end",
["GridSize"] = {
["Height"] = 1,
["Width"] = 1,
},
["AutoGridSize"] = true,
["SpellIds"] = {
},
["OptionsValues"] = {
},
["Icon"] = "Interface\\Icons\\INV_Misc_QuestionMark",
["Time"] = 1747032433,
},
},
["Temp_ConstructorCode"] = "\n\n",
["Temp_OnHideCode"] = "\n\n",
["Revision"] = 1,
["Options"] = {
},
["Author"] = "DotMaster",
["Desc"] = "DotMaster integration stub",
["config"] = {
["enabled"] = true,
},
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["__TrashAt"] = 1747032675,
["Temp_UpdateCode"] = "\n\n",
["IconPath"] = "Interface\\Icons\\INV_Misc_QuestionMark",
},
{
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["__TrashAt"] = 1747046838,
["Author"] = "DotMaster",
["Scripts"] = {
["Nameplate Updated"] = {
["GridColor"] = {
0.1,
0.1,
0.1,
0.2,
},
["Revision"] = 1,
["Options"] = {
},
["Code"] = "function (self, unitId, unitFrame, envTable, modTable)\n\n    self.ThrottleUpdate = 0.016\n\n    -- Get all enabled DoTs from DotMaster\n    local trackingSpells = {}\n    if DotMaster and DotMaster.dmspellsdb then\n        local _, playerClass = UnitClass(\"player\")\n        for spellID, config in pairs(DotMaster.dmspellsdb) do\n            if config.enabled == 1 and config.wowclass == playerClass then\n                trackingSpells[spellID] = {\n                    id = spellID,\n                    name = config.spellname or \"Unknown\",\n                    priority = config.priority or 999,\n                    color = config.color or {1, 0, 1, 1}\n                }\n            end\n        end\n    end\n\n    -- Check for DoTs - identical approach to sample mod\n    local hasDoT = false\n    local bestColor = nil\n    local bestPriority = 9999\n\n    for spellID, spellData in pairs(trackingSpells) do\n        if Plater.NameplateHasAura(unitFrame, spellID) then\n            if spellData.priority < bestPriority then\n                hasDoT = true\n                bestColor = spellData.color\n                bestPriority = spellData.priority\n            end\n        end\n    end\n\n    -- Apply color exactly like the sample mod\n    if hasDoT and bestColor then\n        -- We have a DoT, apply DotMaster color\n        if DotMaster.coloredPlates then\n            DotMaster.coloredPlates[unitId] = true\n        end\n        Plater.SetNameplateColor(unitFrame, bestColor[1], bestColor[2], bestColor[3], bestColor[4] or 1)\n    else\n        -- No DotMaster DoT found for this unit\n        if envTable.isFTCEnabled then\n            -- FTC is ON, but no DoT. Plater handles threat/default color. Reset our state.\n            if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n                Plater.RefreshNameplateColor(unitFrame)\n                DotMaster.coloredPlates[unitId] = nil\n            end\n        else\n            -- FTC is OFF and no DoT. Let Plater do its thing entirely.\n            -- Do NOT call RefreshNameplateColor here.\n            -- Just ensure our tracking flag is cleared if it was somehow set.\n            if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n                 DotMaster.coloredPlates[unitId] = nil\n            end\n            return\n        end\n    end\nend",
["GridSize"] = {
["Height"] = 1,
["Width"] = 1,
},
["AutoGridSize"] = true,
["SpellIds"] = {
204598,
},
["OptionsValues"] = {
},
["Icon"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
["Time"] = 1747046829,
},
},
["Desc"] = "Colors nameplates based on DoTs tracked by DotMaster",
["Hooks"] = {
["Nameplate Added"] = false,
["Target Changed"] = false,
["Player Power Update"] = false,
["Name Updated"] = false,
["Cast Start"] = false,
["Cast Stop"] = false,
["Nameplate Created"] = false,
["Nameplate Removed"] = false,
["Cast Update"] = false,
["Health Update"] = false,
["Player Talent Update"] = false,
["Nameplate Updated"] = true,
["Zone Changed"] = false,
["Load Screen"] = false,
},
["config"] = {
["enabled"] = true,
},
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["OptionsValues"] = {
},
["Temp_ConstructorCode"] = "\n\n",
["Time"] = 1747046829,
["IconPath"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
},
{
["Revision"] = 1,
["HooksTemp"] = {
},
["Author"] = "DotMaster",
["Desc"] = "Colors nameplates based on DoTs tracked by DotMaster",
["Hooks"] = {
["Nameplate Added"] = false,
["Target Changed"] = false,
["Player Power Update"] = false,
["Name Updated"] = false,
["Cast Start"] = false,
["Cast Stop"] = false,
["Nameplate Created"] = false,
["Nameplate Removed"] = false,
["Cast Update"] = false,
["Health Update"] = false,
["Player Talent Update"] = false,
["Nameplate Updated"] = true,
["Zone Changed"] = false,
["Load Screen"] = false,
},
["config"] = {
["enabled"] = true,
},
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["__TrashAt"] = 1747046844,
["Scripts"] = {
["Nameplate Updated"] = {
["GridColor"] = {
0.1,
0.1,
0.1,
0.2,
},
["Revision"] = 1,
["Options"] = {
},
["Code"] = "function (self, unitId, unitFrame, envTable, modTable)\n\n    self.ThrottleUpdate = 0.016\n\n    -- Get all enabled DoTs from DotMaster\n    local trackingSpells = {}\n    if DotMaster and DotMaster.dmspellsdb then\n        local _, playerClass = UnitClass(\"player\")\n        for spellID, config in pairs(DotMaster.dmspellsdb) do\n            if config.enabled == 1 and config.wowclass == playerClass then\n                trackingSpells[spellID] = {\n                    id = spellID,\n                    name = config.spellname or \"Unknown\",\n                    priority = config.priority or 999,\n                    color = config.color or {1, 0, 1, 1}\n                }\n            end\n        end\n    end\n\n    -- Check for DoTs - identical approach to sample mod\n    local hasDoT = false\n    local bestColor = nil\n    local bestPriority = 9999\n\n    for spellID, spellData in pairs(trackingSpells) do\n        if Plater.NameplateHasAura(unitFrame, spellID) then\n            if spellData.priority < bestPriority then\n                hasDoT = true\n                bestColor = spellData.color\n                bestPriority = spellData.priority\n            end\n        end\n    end\n\n    -- Apply color exactly like the sample mod\n    if hasDoT and bestColor then\n        -- We have a DoT, apply DotMaster color\n        if DotMaster.coloredPlates then\n            DotMaster.coloredPlates[unitId] = true\n        end\n        Plater.SetNameplateColor(unitFrame, bestColor[1], bestColor[2], bestColor[3], bestColor[4] or 1)\n    else\n        -- No DotMaster DoT found for this unit\n        if envTable.isFTCEnabled then\n            -- FTC is ON, but no DoT. Plater handles threat/default color. Reset our state.\n            if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n                Plater.RefreshNameplateColor(unitFrame)\n                DotMaster.coloredPlates[unitId] = nil\n            end\n        else\n            -- FTC is OFF and no DoT. Let Plater do its thing entirely.\n            -- Do NOT call RefreshNameplateColor here.\n            -- Just ensure our tracking flag is cleared if it was somehow set.\n            if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n                 DotMaster.coloredPlates[unitId] = nil\n            end\n            return\n        end\n    end\nend",
["GridSize"] = {
["Height"] = 1,
["Width"] = 1,
},
["AutoGridSize"] = true,
["SpellIds"] = {
204598,
},
["OptionsValues"] = {
},
["Icon"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
["Time"] = 1747046841,
},
},
["Time"] = 1747046841,
["IconPath"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
},
{
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Author"] = "DotMaster",
["Name"] = "DotMaster Integration",
["Desc"] = "Colors nameplates based on DoTs tracked by DotMaster",
["Hooks"] = {
["Nameplate Added"] = false,
["Target Changed"] = false,
["Player Power Update"] = false,
["Name Updated"] = false,
["Cast Start"] = false,
["Cast Stop"] = false,
["Nameplate Created"] = false,
["Nameplate Removed"] = false,
["Cast Update"] = false,
["Health Update"] = false,
["Player Talent Update"] = false,
["Nameplate Updated"] = true,
["Zone Changed"] = false,
["Load Screen"] = false,
},
["config"] = {
["enabled"] = true,
},
["IconPath"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
["PlaterCore"] = 1,
["Scripts"] = {
["Nameplate Updated"] = {
["GridColor"] = {
0.1,
0.1,
0.1,
0.2,
},
["Revision"] = 1,
["Options"] = {
},
["Code"] = "function (self, unitId, unitFrame, envTable, modTable)\n\n    self.ThrottleUpdate = 0.016\n\n    -- Get all enabled DoTs from DotMaster\n    local trackingSpells = {}\n    if DotMaster and DotMaster.dmspellsdb then\n        local _, playerClass = UnitClass(\"player\")\n        for spellID, config in pairs(DotMaster.dmspellsdb) do\n            if config.enabled == 1 and config.wowclass == playerClass then\n                trackingSpells[spellID] = {\n                    id = spellID,\n                    name = config.spellname or \"Unknown\",\n                    priority = config.priority or 999,\n                    color = config.color or {1, 0, 1, 1}\n                }\n            end\n        end\n    end\n\n    -- Check for DoTs - identical approach to sample mod\n    local hasDoT = false\n    local bestColor = nil\n    local bestPriority = 9999\n\n    for spellID, spellData in pairs(trackingSpells) do\n        if Plater.NameplateHasAura(unitFrame, spellID) then\n            if spellData.priority < bestPriority then\n                hasDoT = true\n                bestColor = spellData.color\n                bestPriority = spellData.priority\n            end\n        end\n    end\n\n    -- Apply color exactly like the sample mod\n    if hasDoT and bestColor then\n        -- We have a DoT, apply DotMaster color\n        if DotMaster.coloredPlates then\n            DotMaster.coloredPlates[unitId] = true\n        end\n        Plater.SetNameplateColor(unitFrame, bestColor[1], bestColor[2], bestColor[3], bestColor[4] or 1)\n    else\n        -- No DotMaster DoT found for this unit\n        if envTable.isFTCEnabled then\n            -- FTC is ON, but no DoT. Plater handles threat/default color. Reset our state.\n            if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n                Plater.RefreshNameplateColor(unitFrame)\n                DotMaster.coloredPlates[unitId] = nil\n            end\n        else\n            -- FTC is OFF and no DoT. Let Plater do its thing entirely.\n            -- Do NOT call RefreshNameplateColor here.\n            -- Just ensure our tracking flag is cleared if it was somehow set.\n            if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n                 DotMaster.coloredPlates[unitId] = nil\n            end\n            return\n        end\n    end\nend",
["GridSize"] = {
["Height"] = 1,
["Width"] = 1,
},
["AutoGridSize"] = true,
["SpellIds"] = {
204598,
},
["OptionsValues"] = {
},
["Icon"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
["Time"] = 1747046869,
},
},
["Time"] = 1747046869,
["OptionsValues"] = {
},
["__TrashAt"] = 1747046888,
},
{
["Revision"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Author"] = "DotMaster",
["IconPath"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
["Desc"] = "Colors nameplates based on DoTs tracked by DotMaster",
["Hooks"] = {
["Nameplate Added"] = false,
["Target Changed"] = false,
["Player Power Update"] = false,
["Name Updated"] = false,
["Cast Start"] = false,
["Load Screen"] = false,
["Nameplate Created"] = false,
["Nameplate Removed"] = false,
["Cast Update"] = false,
["Health Update"] = false,
["Player Talent Update"] = false,
["Nameplate Updated"] = true,
["Zone Changed"] = false,
["Cast Stop"] = false,
},
["__TrashAt"] = 1747047910,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["Scripts"] = {
["Nameplate Updated"] = {
["GridColor"] = {
0.1,
0.1,
0.1,
0.2,
},
["Revision"] = 1,
["Options"] = {
},
["Code"] = "function (self, unitId, unitFrame, envTable, modTable)\n\n    self.ThrottleUpdate = 0.016\n\n    -- Get all enabled DoTs from DotMaster\n    local trackingSpells = {}\n    if DotMaster and DotMaster.dmspellsdb then\n        local playerClass = DotMaster.GetPlayerClass()\n        for spellID, config in pairs(DotMaster.dmspellsdb) do\n            if config.enabled == 1 and config.wowclass == playerClass then\n                trackingSpells[spellID] = {\n                    id = spellID,\n                    name = config.spellname or \"Unknown\",\n                    priority = config.priority or 999,\n                    color = config.color or {1, 0, 1, 1}\n                }\n            end\n        end\n    end\n\n    -- Check for DoTs - identical approach to sample mod\n    local hasDoT = false\n    local bestColor = nil\n    local bestPriority = 9999\n\n    for spellID, spellData in pairs(trackingSpells) do\n        if Plater.NameplateHasAura(unitFrame, spellID) then\n            if spellData.priority < bestPriority then\n                hasDoT = true\n                bestColor = spellData.color\n                bestPriority = spellData.priority\n            end\n        end\n    end\n\n    -- Apply color exactly like the sample mod\n    if hasDoT and bestColor then\n        -- We have a DoT, apply DotMaster color\n        if DotMaster.coloredPlates then\n            DotMaster.coloredPlates[unitId] = true\n        end\n        Plater.SetNameplateColor(unitFrame, bestColor[1], bestColor[2], bestColor[3], bestColor[4] or 1)\n    else\n        -- No DotMaster DoT found for this unit\n        if envTable.isFTCEnabled then\n            -- FTC is ON, but no DoT. Plater handles threat/default color. Reset our state.\n            if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n                Plater.RefreshNameplateColor(unitFrame)\n                DotMaster.coloredPlates[unitId] = nil\n            end\n        else\n            -- FTC is OFF and no DoT. Let Plater do its thing entirely.\n            -- Do NOT call RefreshNameplateColor here.\n            -- Just ensure our tracking flag is cleared if it was somehow set.\n            if DotMaster.coloredPlates and DotMaster.coloredPlates[unitId] then\n                 DotMaster.coloredPlates[unitId] = nil\n            end\n            return\n        end\n    end\nend",
["GridSize"] = {
["Height"] = 1,
["Width"] = 1,
},
["AutoGridSize"] = true,
["SpellIds"] = {
},
["OptionsValues"] = {
},
["Icon"] = "Interface\\ICONS\\Spell_Shadow_ShadowWordPain",
["Time"] = 1747047870,
},
},
["Time"] = 1747047870,
["OptionsValues"] = {
},
["config"] = {
["enabled"] = true,
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\n  end",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n      Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n      Plater.RefreshNameplateColor(unitFrame)\n    end\n  end",
},
["ScriptType"] = 1,
["Hooks"] = {
["Constructor"] = "function(self, unitId, unitFrame, envTable, modTable)\n    -- Set up config table\n    modTable.config = {}\n    modTable.config.spellID = 34914\n    modTable.config.dotColor = {1, 0, 1, 1}\n  end",
["Nameplate Updated"] = "function(self, unitId, unitFrame, envTable, modTable)\n    self.ThrottleUpdate = 0.016\n\n    if Plater.NameplateHasAura(unitFrame, modTable.config.spellID) then\n      Plater.SetNameplateColor(unitFrame, modTable.config.dotColor)\n    else\n      Plater.RefreshNameplateColor(unitFrame)\n    end\n  end",
},
["UpdateCode"] = "\n\n",
["Time"] = 1747049675,
["LoadConditions"] = {
},
["IconSize"] = {
14,
14,
},
["Icon"] = "Interface\\Icons\\Spell_Shadow_UnstableAffliction_3",
["IconTexture"] = "Interface\\AddOns\\Plater\\images\\castbar_background",
["Enabled"] = false,
["Revision"] = 4,
["Options"] = {
},
["Author"] = "Jervaidhe",
["Desc"] = "Colors nameplates for DotMaster tracked DoTs",
["Prio"] = 99,
["Name"] = "DotMaster Integration",
["PlaterCore"] = 1,
["__TrashAt"] = 1747049724,
["LastHookEdited"] = "Constructor",
["IconOffset"] = {
0,
0,
},
},
},
["extra_icon_timer_outline"] = "OUTLINE",
["castbar_target_anchor"] = {
["y"] = -13,
["x"] = -2.4400024414063,
["side"] = 3,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["script_auto_imported"] = {
["Aura - Is Cast Bar [P]"] = 1,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Unit - Show Energy"] = 11,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Unit Power"] = 1,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Cast - Glowing [P]"] = 10,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Explode on Die [P]"] = 1,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Unit - Important"] = 11,
["Cast - Special Ability [P]"] = 3,
["Cast - Tank Interrupt"] = 12,
["Cast - AoE With Range [P]"] = 2,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - On Going Cast [P]"] = 2,
["Cast - Tankbuster [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - Shining Green [P]"] = 3,
["Cast - Very Important"] = 15,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Spiteful Affix"] = 3,
["Color Change"] = 1,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Voidzone [P]"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Cast - Important by Color [P]"] = 2,
["Auto Set Skull"] = 11,
["Add - Warning [P]"] = 5,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Aura Border Color"] = 1,
["Countdown"] = 12,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Heroic Leap [P]"] = 3,
["Relics 9.2 M Dungeons"] = 2,
["Explosion Affix M+"] = 14,
["Fixate On You"] = 12,
},
["aura2_grow_direction"] = 3,
["aura_border_thickness2"] = 2,
["health_cutoff_upper"] = false,
["dps"] = {
["colors"] = {
["solo"] = {
0.98823535442352,
0.98823535442352,
0.98823535442352,
},
["notontank"] = {
0.50196081399918,
0.50196081399918,
},
["noaggro"] = {
0.50196081399918,
0.50196081399918,
},
},
},
["cast_statusbar_texture"] = "Solid",
["plugins_data"] = {
["DotMasterIntegration"] = {
["enabled"] = true,
},
["PERFORMANCE_UNITS_PLUGIN"] = {
["enabled"] = true,
},
},
["indicator_faction"] = false,
["range_check_alpha_friendlies"] = 0.64999997615814,
["aura_show_enrage"] = true,
["cast_statusbar_spark_width"] = 15,
},
},
["InterruptableSpells"] = {
[342135] = true,
[187707] = true,
[96231] = true,
[32747] = true,
[429812] = true,
[6552] = true,
[57994] = true,
[426240] = true,
[116705] = true,
[420320] = true,
[147362] = true,
[97547] = true,
[351338] = true,
[386071] = true,
[1766] = true,
[132409] = true,
[47528] = true,
[31935] = true,
[420330] = true,
[420090] = true,
[91807] = true,
[347008] = true,
[183752] = true,
[220543] = true,
[93985] = true,
[427609] = true,
[2139] = true,
[19647] = true,
[339415] = true,
},
["performance_units"] = {
[176920] = true,
[214441] = true,
[211306] = true,
[196642] = true,
[167999] = true,
[189707] = true,
[220626] = true,
[219746] = true,
},
["captured_casts"] = {
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[473304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Mastermind",
["npcID"] = 133430,
},
[198079] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98949,
},
[192706] = {
["source"] = "Ritualist Lesha",
["event"] = "SPELL_CAST_START",
["npcID"] = 100248,
},
[1216687] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Gobfather",
["npcID"] = 231821,
},
[294195] = {
["source"] = "Defense Bot Mk III",
["event"] = "SPELL_CAST_START",
["npcID"] = 144298,
},
[465120] = {
["source"] = "Loaderbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 231014,
},
[1216699] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Void Launcher",
["npcID"] = 231903,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
[104318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Imp",
["npcID"] = 143622,
},
["335308"] = {
["npcID"] = 171799,
},
[467169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Boomspark",
["npcID"] = 229287,
},
[330532] = {
["source"] = "Shambling Arbalest",
["event"] = "SPELL_CAST_START",
["npcID"] = 164510,
},
[1226943] = {
["source"] = "Dissenter Troosilver",
["event"] = "SPELL_CAST_START",
["npcID"] = 241232,
},
[1216709] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Gobfather",
["npcID"] = 231821,
},
[422648] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2787,
},
[207806] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[431349] = {
["source"] = "Nightfall Dark Architect",
["event"] = "SPELL_CAST_START",
["npcID"] = 213885,
},
["382277"] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balara",
["npcID"] = 193457,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[474337] = {
["source"] = "Shreddinator 3000",
["event"] = "SPELL_CAST_START",
["npcID"] = 230740,
},
["432520"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Darkcaster",
["npcID"] = 213893,
},
[317231] = {
["encounterName"] = "Xav the Unfallen",
["source"] = "Xav the Unfallen",
["encounterID"] = 2366,
["event"] = "SPELL_CAST_START",
["npcID"] = 162329,
},
[465127] = {
["isChanneled"] = true,
["source"] = "Loaderbot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231014,
},
[472293] = {
["encounterName"] = "Rik Reverb",
["source"] = "Pyrotechnics",
["npcID"] = 233623,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3011,
},
[118905] = {
["source"] = "Capacitor Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 61245,
},
[427260] = {
["source"] = "Cursed Rooktender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207199,
},
[390926] = {
["source"] = "Candlelit Big-Boomer",
["event"] = "SPELL_CAST_START",
["npcID"] = 211546,
},
[439031] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[467178] = {
["source"] = "Gallagio Cocktail",
["event"] = "SPELL_CAST_START",
["npcID"] = 229435,
},
[433403] = {
["isChanneled"] = false,
["source"] = "Skittering Swarmer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208245,
},
[415492] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[424704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Gutter",
["npcID"] = 207454,
},
[196296] = {
["source"] = "Stormwake Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[209602] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
["377034"] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
["378818"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Thaumaturge",
["npcID"] = 192788,
},
[467182] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[468206] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shifty Scalper",
["npcID"] = 229286,
},
[468207] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3009,
},
["382712"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wilted Oak",
["npcID"] = 186229,
},
[468208] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shifty Scalper",
["npcID"] = 229286,
},
[456438] = {
["source"] = "Mindless Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 220958,
},
[167385] = {
["source"] = "Crystalmaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 225978,
},
[433410] = {
["source"] = "Chittering Fearmonger",
["event"] = "SPELL_CAST_START",
["npcID"] = 216583,
},
[200905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96015,
},
[1220869] = {
["source"] = "Underpin's Bodyguard's Intern",
["event"] = "SPELL_CAST_START",
["npcID"] = 234904,
},
[433411] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
[276304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rowdy Reveler",
["npcID"] = 136005,
},
["459779"] = {
["encounterName"] = "Demolition Duo",
["source"] = "Bront",
["npcID"] = 226402,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[449277] = {
["event"] = "SPELL_CAST_START",
["source"] = "General Emmerich",
["npcID"] = 215371,
},
[1216784] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hovering Menace",
["npcID"] = 236886,
},
[1216790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hovering Menace",
["npcID"] = 236886,
},
["257288"] = {
["encounterName"] = "Chopper Redhook",
["source"] = "Irontide Cleaver",
["npcID"] = 129879,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2098,
},
[455932] = {
["source"] = "Kobyss Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214625,
},
[468726] = {
["source"] = "Venture Co. Diver",
["event"] = "SPELL_CAST_START",
["npcID"] = 231496,
},
[1216794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hovering Menace",
["npcID"] = 236886,
},
[1214754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Askari",
["npcID"] = 134012,
},
["199151"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angerhoof Bull",
["npcID"] = 96611,
},
[390943] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[1222949] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2364,
},
[438025] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218002,
},
[451843] = {
["source"] = "Stormguard Gorren",
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[1216815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 236933,
},
[445705] = {
["source"] = "Deepwater Makura",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
["474087"] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2364,
},
[424212] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[426771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Bound Despoiler",
["npcID"] = 212765,
},
[444683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramolith",
["npcID"] = 221568,
},
["451496"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Queen",
["npcID"] = 220003,
},
[461060] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[465666] = {
["source"] = "Darkfuse Jumpstarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 231325,
},
["384524"] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[1214790] = {
["source"] = "Melbo the Magnificent",
["event"] = "SPELL_CAST_START",
["npcID"] = 229434,
},
[200913] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[330565] = {
["source"] = "Ancient Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 164506,
},
[453897] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
["434824"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nakt",
["npcID"] = 218324,
},
[1216845] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Darkfuse Wrenchmonger",
["npcID"] = 231939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[468229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shifty Scalper",
["npcID"] = 229286,
},
[214988] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[449295] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[431896] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Thirsty Patron",
["npcID"] = 215819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[214989] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
["448640"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[471303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Stunner",
["npcID"] = 229513,
},
[314708] = {
["event"] = "SPELL_CAST_START",
["source"] = "HK-3 Aerial Dissuasion Unit",
["npcID"] = 159261,
},
[472839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swigs Farsight",
["npcID"] = 231288,
},
[448787] = {
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[445205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[421665] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210149,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[445718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Seized Loader",
["npcID"] = 223866,
},
[446230] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["event"] = "SPELL_CAST_START",
["npcID"] = 214348,
},
[465165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Flare",
["npcID"] = 229603,
},
[445207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Howler",
["npcID"] = 221979,
},
[195801] = {
["isChanneled"] = true,
["source"] = "Skrog Tidestomper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95939,
},
[455443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxx",
["npcID"] = 226267,
},
[466190] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["encounterID"] = 3054,
["event"] = "SPELL_CAST_START",
["npcID"] = 226404,
},
[464655] = {
["source"] = "Mechadrone Sniper",
["event"] = "SPELL_CAST_START",
["npcID"] = 229069,
},
[448791] = {
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 206704,
},
[453909] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brew Drop",
["npcID"] = 218671,
},
[426275] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[445210] = {
["source"] = "Spitfire Charger",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
["333477"] = {
["npcID"] = 163621,
},
[201176] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[426277] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[465682] = {
["source"] = "Darkfuse Inspector",
["event"] = "SPELL_CAST_START",
["npcID"] = 231385,
},
["262377"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawler Mine",
["npcID"] = 133482,
},
[200154] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[464149] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3012,
},
["439621"] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Nx",
["npcID"] = 216648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[466197] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["encounterID"] = 3054,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226404,
},
[317791] = {
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[445217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
["333294"] = {
["npcID"] = 169893,
},
[317792] = {
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_START",
["npcID"] = 163366,
},
[330586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Butcher",
["npcID"] = 169927,
},
[433448] = {
["isChanneled"] = true,
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216621,
},
["395184"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Proto-Dragon",
["npcID"] = 185883,
},
[469272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperious Mixer",
["npcID"] = 233247,
},
[424750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Rotcaster",
["npcID"] = 207459,
},
[1216937] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Underpin",
["npcID"] = 236948,
},
[425264] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[1223085] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
["419351"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Saboteur",
["npcID"] = 208438,
},
[450854] = {
["source"] = "Deathscreamer Iken'tak",
["event"] = "SPELL_CAST_START",
["npcID"] = 211263,
},
[449831] = {
["isChanneled"] = true,
["source"] = "Battlefront Hauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222719,
},
[467231] = {
["source"] = "Gallagio Dealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 229437,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[467234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Princeguard Enforcer",
["npcID"] = 224175,
},
[460582] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "Reel Assistant",
["npcID"] = 228463,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[426295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[471841] = {
["isChanneled"] = true,
["source"] = "Waterworks Bottomfeeder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231312,
},
[470308] = {
["source"] = "Sureki Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 232094,
},
["373742"] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["npcID"] = 189340,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2613,
},
[434998] = {
["source"] = "Chef Chewie",
["event"] = "SPELL_CAST_START",
["npcID"] = 214697,
},
[368983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
["340160"] = {
["npcID"] = 173655,
},
["372201"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Irontorch",
["npcID"] = 189464,
},
[448818] = {
["source"] = "Kobold Skullface",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
[224729] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "Fiery Dynamite Booty",
["encounterID"] = 3014,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231028,
},
[446261] = {
["source"] = "Vanishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 224922,
},
[448820] = {
["source"] = "Kobold Skullface",
["event"] = "SPELL_CAST_START",
["npcID"] = 203951,
},
["474018"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
["265540"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fetid Maggot",
["npcID"] = 130909,
},
[302972] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Scrap King",
["npcID"] = 151623,
},
[435004] = {
["isChanneled"] = true,
["source"] = "Chef Chewie",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214697,
},
[446776] = {
["source"] = "War Lynx",
["event"] = "SPELL_CAST_START",
["npcID"] = 206699,
},
["428293"] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
["431494"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightfall Tactician",
["npcID"] = 213934,
},
[460595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thirsty Salvager",
["npcID"] = 220756,
},
[470831] = {
["source"] = "Ahn'tak",
["event"] = "SPELL_CAST_START",
["npcID"] = 240968,
},
["260894"] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["npcID"] = 131318,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2111,
},
["268260"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Cannoneer",
["npcID"] = 138465,
},
[465715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Stunner",
["npcID"] = 229513,
},
["388060"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stinkbreath",
["npcID"] = 187033,
},
["450854"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathscreamer Iken'tak",
["npcID"] = 211263,
},
[330614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rancid Gasbag",
["npcID"] = 163086,
},
[453946] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2960,
},
[262092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Thug",
["npcID"] = 130435,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Deepflayer",
["npcID"] = 215773,
},
[1219086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scraps",
["npcID"] = 229283,
},
[260813] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Mogul Razdunk",
["npcID"] = 129232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2108,
},
[210150] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[466742] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Scrapmaster",
["npcID"] = 231839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[1219096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trashmaster Blazedump",
["npcID"] = 238011,
},
["421277"] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[460603] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[440134] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218002,
},
[434505] = {
["source"] = "Venture Co. Patron",
["event"] = "SPELL_CAST_START",
["npcID"] = 214668,
},
["226304"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[471352] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Darkfuse Technician",
["npcID"] = 231977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[427342] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[468794] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[469818] = {
["source"] = "Bubbles",
["event"] = "SPELL_CAST_START",
["npcID"] = 231197,
},
[466748] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Junkyard Hyena",
["npcID"] = 231935,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[444743] = {
["source"] = "Risen Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 221760,
},
[428879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
["381525"] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["npcID"] = 190484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[199663] = {
["source"] = "Ghostly Councilor",
["event"] = "SPELL_CAST_START",
["npcID"] = 98370,
},
[450885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[197105] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[205549] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[466751] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[440652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[467776] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Pit Mechanic",
["npcID"] = 228514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[445771] = {
["source"] = "Deepwater Makura",
["event"] = "SPELL_CAST_START",
["npcID"] = 220643,
},
[448843] = {
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
["1217294"] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
["441119"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bee Wrangler",
["npcID"] = 210264,
},
[191735] = {
["source"] = "Felsworn Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 98954,
},
[283551] = {
["encounterName"] = "King Mechagon",
["source"] = "Omega Buster",
["npcID"] = 144249,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2260,
},
[384366] = {
["source"] = "Ashwhite Kestrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 215070,
},
[427865] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[1215065] = {
["encounterName"] = "Tussle Tonks",
["source"] = "The Platinum Pummeler",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 144244,
},
[460618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overworked Cook",
["npcID"] = 220744,
},
[183548] = {
["source"] = "Stoneclaw Grubmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 102404,
},
[387950] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[271784] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Footbomb Hooligan",
["npcID"] = 138369,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[26262] = {
["source"] = "Void Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 65282,
},
[424798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infected Beast",
["npcID"] = 210478,
},
[427357] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[445781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Seized Loader",
["npcID"] = 223866,
},
[450899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
["257397"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bonesaw",
["npcID"] = 129788,
},
[1221226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mini Amp",
["npcID"] = 238569,
},
[448341] = {
["source"] = "Kobold Thwacker",
["event"] = "SPELL_CAST_START",
["npcID"] = 203877,
},
["377383"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[466765] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["npcID"] = 230583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
[1217138] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["encounterID"] = 2391,
["event"] = "SPELL_CAST_START",
["npcID"] = 164461,
},
["375351"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glacial Proto-Dragon",
["npcID"] = 190403,
},
[468813] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["encounterID"] = 3054,
["event"] = "SPELL_CAST_START",
["npcID"] = 226404,
},
[425315] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[1219192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperious Blaster",
["npcID"] = 229356,
},
[465232] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["npcID"] = 230583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
["426260"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[1215102] = {
["encounterName"] = "Tussle Tonks",
["source"] = "The Platinum Pummeler",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 144244,
},
[422246] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2829,
},
[460116] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3009,
},
[341902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battlefield Ritualist",
["npcID"] = 174197,
},
[387960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[446300] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["event"] = "SPELL_CAST_START",
["npcID"] = 214348,
},
[292264] = {
["encounterName"] = "King Mechagon",
["source"] = "Omega Buster",
["npcID"] = 144249,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2260,
},
["422541"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Horror",
["npcID"] = 208456,
},
["472452"] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["npcID"] = 228424,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[214771] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99651,
},
[440162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungarian Creepcap",
["npcID"] = 218665,
},
[426345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Touched Elemental",
["npcID"] = 212400,
},
[448863] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[226287] = {
["source"] = "Vileshard Chunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 101438,
},
[448864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[426860] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
[474453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 237587,
},
[465754] = {
["source"] = "Shreddinator 3000",
["event"] = "SPELL_CAST_START",
["npcID"] = 230740,
},
[470873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Junkyard Hobgoblin",
["npcID"] = 229219,
},
[429422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[469340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperious Mixer",
["npcID"] = 233247,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 97259,
},
[3110] = {
["source"] = "Ruptuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 416,
},
[453989] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. Pyromaniac",
["npcID"] = 218671,
},
[450407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orta",
["npcID"] = 221067,
},
[470366] = {
["source"] = "Bul'kan the Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 235799,
},
["188404"] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["npcID"] = 97788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1805,
},
[465761] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[474461] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[436592] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[428916] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[429428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Burst Totem",
["npcID"] = 214287,
},
[440687] = {
["source"] = "Royal Jelly Purveyor",
["event"] = "SPELL_CAST_START",
["npcID"] = 220141,
},
[427382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[427894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Master Damian",
["npcID"] = 212831,
},
["320512"] = {
["npcID"] = 163892,
},
[451435] = {
["source"] = "Voidwraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 224466,
},
[463206] = {
["source"] = "Chef Chewie",
["event"] = "SPELL_CAST_START",
["npcID"] = 214697,
},
[1217231] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["npcID"] = 230583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
[1213139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taskmaster Askari",
["npcID"] = 134012,
},
["391723"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[275907] = {
["encounterName"] = "Azerokk",
["source"] = "Azerokk",
["npcID"] = 129227,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2106,
},
[1215194] = {
["encounterName"] = "Tussle Tonks",
["source"] = "The Platinum Pummeler",
["npcID"] = 144244,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2257,
},
[459627] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[196870] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[263628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[1217249] = {
["source"] = "Gallagio Customer Care",
["event"] = "SPELL_CAST_START",
["npcID"] = 237109,
},
[450929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orta",
["npcID"] = 221067,
},
[336809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azmogal",
["npcID"] = 162873,
},
[468841] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["encounterID"] = 3054,
["event"] = "SPELL_CAST_START",
["npcID"] = 226404,
},
["396812"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[209410] = {
["source"] = "Duskwatch Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104247,
},
[470379] = {
["source"] = "Slimy Sewage",
["event"] = "SPELL_CAST_START",
["npcID"] = 234571,
},
["257756"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Buccaneer",
["npcID"] = 129527,
},
[424322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Fiend",
["npcID"] = 220815,
},
[333231] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["encounterID"] = 2391,
["event"] = "SPELL_CAST_START",
["npcID"] = 164461,
},
[446328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow-Hemmed Fog Beast",
["npcID"] = 221663,
},
[293827] = {
["source"] = "Mechagon Tinkerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 144294,
},
[464240] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[468846] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["encounterID"] = 3054,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226404,
},
[193803] = {
["isChanneled"] = true,
["source"] = "Tarspitter Grub",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 92538,
},
["393432"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Defender",
["npcID"] = 190340,
},
[463218] = {
["source"] = "Hired Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 210269,
},
[1217279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Thug",
["npcID"] = 130435,
},
[195595] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 99300,
},
[1217283] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[431491] = {
["source"] = "Nightfall Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 214762,
},
[1219333] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
["449130"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[294855] = {
["encounterName"] = "Machinist's Garden",
["source"] = "Detect-o-Bot",
["encounterID"] = 2259,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 152033,
},
[1221384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
},
[1221385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
},
[423305] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[1217294] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
["385958"] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[323515] = {
["encounterName"] = "Gorechop",
["source"] = "Gorechop",
["npcID"] = 162317,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2365,
},
[450941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Knight",
["npcID"] = 222820,
},
[470388] = {
["source"] = "Anub'Ranax",
["event"] = "SPELL_CAST_START",
["npcID"] = 240969,
},
[1217301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggressively Lost Hobgoblin",
["npcID"] = 234905,
},
[333241] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Raging Bloodhorn",
["encounterID"] = 2391,
["event"] = "SPELL_CAST_START",
["npcID"] = 170850,
},
[466808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Wretch",
["npcID"] = 230028,
},
[1217311] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggressively Lost Hobgoblin",
["npcID"] = 234905,
},
[460156] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
[207881] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[426893] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[470392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corpulent Slime",
["npcID"] = 233026,
},
["432967"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sentry Stagshell",
["npcID"] = 216340,
},
[1217326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underpin's Adoring Fan",
["npcID"] = 234900,
},
[471930] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "Reel Assistant",
["npcID"] = 228463,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[444296] = {
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[471419] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[318406] = {
["encounterName"] = "Gorechop",
["source"] = "Gorechop",
["npcID"] = 162317,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2365,
},
[197137] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[1219384] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Scrapmaster",
["npcID"] = 231839,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3012,
},
["388392"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Textbook",
["npcID"] = 196044,
},
[470910] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Gallagio Goon",
["npcID"] = 233474,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[471423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Harasser",
["npcID"] = 225853,
},
["447270"] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["npcID"] = 207946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2847,
},
[440207] = {
["source"] = "Voidstone Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[196883] = {
["source"] = "Lord Etheldrin Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98521,
},
[464772] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[1217354] = {
["isChanneled"] = true,
["source"] = "Underpin's Adoring Fan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234900,
},
[466308] = {
["source"] = "Scavenging Trashrat",
["event"] = "SPELL_CAST_START",
["npcID"] = 234548,
},
[433045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underpin's Well-Connected Friend",
["npcID"] = 234901,
},
["377732"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refti Custodian",
["npcID"] = 184319,
},
[1217361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underpin's Adoring Fan",
["npcID"] = 234900,
},
[285150] = {
["encounterName"] = "Tussle Tonks",
["source"] = "Gnomercy 4.U.",
["encounterID"] = 2257,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 145185,
},
["433662"] = {
["isChanneled"] = true,
["source"] = "Black Blood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216856,
},
[448399] = {
["source"] = "Kobold Taskfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[330697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diseased Horror",
["npcID"] = 170690,
},
[421277] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[464776] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[285152] = {
["encounterName"] = "Tussle Tonks",
["source"] = "Gnomercy 4.U.",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 145185,
},
[1217371] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Underpin",
["npcID"] = 236942,
},
["267551"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
},
[465801] = {
["source"] = "Darkfuse Crossfire",
["event"] = "SPELL_CAST_START",
["npcID"] = 230299,
},
[472454] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["npcID"] = 228424,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3020,
},
[293854] = {
["isChanneled"] = false,
["source"] = "Mechagon Tinkerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 144294,
},
[460173] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Pit Mechanic",
["npcID"] = 228514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[101546] = {
["isChanneled"] = true,
["source"] = "Fire Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69791,
},
[456081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temaya",
["npcID"] = 221973,
},
[433053] = {
["source"] = "Kobyss Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214625,
},
["370764"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Fury",
["npcID"] = 187160,
},
[432030] = {
["source"] = "Sureki Screamer",
["event"] = "SPELL_CAST_START",
["npcID"] = 232099,
},
[434589] = {
["source"] = "Overfiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 217429,
},
[473994] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 229177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[450454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orta",
["npcID"] = 221067,
},
[436637] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[1219448] = {
["isChanneled"] = true,
["source"] = "Darkfuse Shredder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 227904,
},
["462216"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[293861] = {
["source"] = "Anti-Personnel Squirrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 151613,
},
[440222] = {
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[469392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subwoofer",
["npcID"] = 232602,
},
[460181] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[466834] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Sharpshot Sentry",
["npcID"] = 231978,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[474511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Walker",
["npcID"] = 234553,
},
[1217418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underpin's Well-Connected Friend",
["npcID"] = 234901,
},
[459671] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[341969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blighted Sludge-Spewer",
["npcID"] = 174210,
},
[465813] = {
["source"] = "Undercrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 231380,
},
[331223] = {
["source"] = "Soulforged Bonereaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 162763,
},
[436644] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["encounterID"] = 2930,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214661,
},
[269302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Assassin",
["npcID"] = 134232,
},
[198428] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[446368] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[1219477] = {
["source"] = "Propaganda Pusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 225826,
},
[435622] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
["434779"] = {
["encounterName"] = "Orator Krix'vizk",
["source"] = "Orator Krix'vizk",
["npcID"] = 216619,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2907,
},
["384868"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Longbow",
["npcID"] = 192789,
},
[195103] = {
["isChanneled"] = true,
["source"] = "Wandering Shellback",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91785,
},
[339415] = {
["encounterName"] = "Xav the Unfallen",
["source"] = "Xav the Unfallen",
["encounterID"] = 2366,
["event"] = "SPELL_CAST_START",
["npcID"] = 162329,
},
["377559"] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2568,
},
[330716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Guardian",
["npcID"] = 167998,
},
[445860] = {
["encounterName"] = "Mirror Master Murkna",
["source"] = "Mirror Master Murkna",
["npcID"] = 219763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2999,
},
[440231] = {
["source"] = "Dark-Crazed Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 206067,
},
[1213354] = {
["event"] = "SPELL_CAST_START",
["source"] = "Princeguard Muscle",
["npcID"] = 229440,
},
[1217449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underpin's Well-Connected Friend",
["npcID"] = 234901,
},
[336859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azmogal",
["npcID"] = 162873,
},
[1217452] = {
["source"] = "Underpin's Well-Connected Friend",
["event"] = "SPELL_CAST_START",
["npcID"] = 234901,
},
[341977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diseased Horror",
["npcID"] = 170690,
},
["451543"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hollows Resident",
["npcID"] = 219983,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[1215411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite Extractor",
["npcID"] = 136643,
},
["432198"] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[425394] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[456611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zillix",
["npcID"] = 221976,
},
[389572] = {
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[456100] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temaya",
["npcID"] = 221973,
},
[191524] = {
["source"] = "Blade Dancer Illianna",
["event"] = "SPELL_CAST_START",
["npcID"] = 96657,
},
[459683] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3009,
},
[449960] = {
["source"] = "Ragefin Carver",
["event"] = "SPELL_CAST_START",
["npcID"] = 215652,
},
[464801] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[269313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanton Sapper",
["npcID"] = 130653,
},
[465826] = {
["isChanneled"] = true,
["source"] = "Darkfuse Crossfire",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 230299,
},
[465827] = {
["source"] = "Darkfuse Bloodwarper",
["event"] = "SPELL_CAST_START",
["npcID"] = 230748,
},
[331237] = {
["source"] = "Soulforged Bonereaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 162763,
},
[464804] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
["267354"] = {
["isChanneled"] = true,
["source"] = "Hired Assassin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 134232,
},
[466340] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[448429] = {
["source"] = "Kobold Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 203878,
},
[195109] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[466341] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[464806] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[474018] = {
["source"] = "Voidrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[466342] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[344546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistress Dyrax",
["npcID"] = 162880,
},
[449455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Voidsoul",
["npcID"] = 212453,
},
[1217496] = {
["source"] = "Bubbles",
["event"] = "SPELL_CAST_START",
["npcID"] = 231197,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
["260793"] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["npcID"] = 131817,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2118,
},
[464809] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[464810] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[465322] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[432059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Hexthrower",
["npcID"] = 213685,
},
[1217510] = {
["source"] = "Underpin's Well-Connected Friend",
["event"] = "SPELL_CAST_START",
["npcID"] = 234901,
},
[207906] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[426943] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[466860] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["npcID"] = 230583,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3013,
},
[463790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Gunner",
["npcID"] = 229180,
},
[333294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nefarious Darkspeaker",
["npcID"] = 169893,
},
[465326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodfang Hyena",
["npcID"] = 227843,
},
[1215481] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Volunteer Rocketeer",
["npcID"] = 230312,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[288774] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Pylon",
["npcID"] = 229739,
},
[465328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodfang Hyena",
["npcID"] = 227843,
},
[443835] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["encounterID"] = 2826,
["event"] = "SPELL_CAST_START",
["npcID"] = 208743,
},
["374563"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazzling Dragonfly",
["npcID"] = 190362,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[462771] = {
["source"] = "Venture Co. Surveyor",
["event"] = "SPELL_CAST_START",
["npcID"] = 229686,
},
[208165] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[466866] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["npcID"] = 228648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3011,
},
[474031] = {
["source"] = "Void-Cursed Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214419,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[467379] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[468915] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperious Blaster",
["npcID"] = 229356,
},
["412505"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyr's Vanguard",
["npcID"] = 205151,
},
[463798] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 229177,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
[319997] = {
["source"] = "Shambling Arbalest",
["event"] = "SPELL_CAST_START",
["npcID"] = 164510,
},
[212773] = {
["source"] = "Duskwatch Reinforcement",
["event"] = "SPELL_CAST_START",
["npcID"] = 107073,
},
["259940"] = {
["encounterName"] = "Rixxa Fluxfume",
["source"] = "Rixxa Fluxflame",
["npcID"] = 129231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2107,
},
[455101] = {
["source"] = "Flame Viscerator Ignes",
["event"] = "SPELL_CAST_START",
["npcID"] = 222762,
},
[1213469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Princeguard Enforcer",
["npcID"] = 224175,
},
[451008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Knight",
["npcID"] = 222820,
},
[1215521] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Underpin",
["npcID"] = 236942,
},
[427469] = {
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[446405] = {
["encounterName"] = "Undersea Abomination",
["source"] = "Undersea Abomination",
["encounterID"] = 2895,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214348,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91808,
},
[452035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
["1214315"] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["npcID"] = 209230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[440266] = {
["source"] = "Roaming Mongrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 218330,
},
[336893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azmogal",
["npcID"] = 162873,
},
[474554] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[1217589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sporbit",
["npcID"] = 237337,
},
[455108] = {
["source"] = "Flame Viscerator Ignes",
["event"] = "SPELL_CAST_START",
["npcID"] = 222762,
},
[1213497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Enforcer",
["npcID"] = 225851,
},
[446409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Kelp",
["npcID"] = 215702,
},
[271903] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[194611] = {
["source"] = "Shadow Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 98926,
},
["339706"] = {
["encounterName"] = "Mordretha",
["npcID"] = 173549,
["encounterID"] = 2404,
},
[280604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Refreshment Vendor",
["npcID"] = 136470,
},
[455111] = {
["source"] = "Flame Viscerator Ignes",
["event"] = "SPELL_CAST_START",
["npcID"] = 222762,
},
[463811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Gunner",
["npcID"] = 229180,
},
[333827] = {
["source"] = "Advent Nevermore",
["event"] = "SPELL_CAST_START",
["npcID"] = 167533,
},
["265372"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enthralled Guard",
["npcID"] = 131585,
},
[470465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Scrapper",
["npcID"] = 229224,
},
[430037] = {
["source"] = "Kobyss Spearfisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214338,
},
[338434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devmorta",
["npcID"] = 162875,
},
[31707] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
["183088"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mightstone Breaker",
["npcID"] = 113998,
},
[450509] = {
["source"] = "Nerubian Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[263209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mine Rat",
["npcID"] = 130437,
},
["269029"] = {
["encounterName"] = "Dread Captain Lockwood",
["source"] = "Dread Captain Lockwood",
["npcID"] = 129208,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2109,
},
[446416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Persistent Honeyslime",
["npcID"] = 222843,
},
[459210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Bound Despoiler",
["npcID"] = 212765,
},
[465863] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
["427323"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidrider",
["npcID"] = 212786,
},
[470981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guk Boomdog",
["npcID"] = 229284,
},
[473540] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2364,
},
[456653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander Artrude",
["npcID"] = 221964,
},
[427484] = {
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[463819] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Brute",
["npcID"] = 229161,
},
[451026] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[437721] = {
["isChanneled"] = true,
["source"] = "Venture Co. Pyromaniac",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218671,
},
[263215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonefury",
["npcID"] = 130635,
},
[445910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sporbit",
["npcID"] = 237337,
},
[381430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quaking Rager",
["npcID"] = 215359,
},
["200768"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Razorbeak",
["npcID"] = 95766,
},
[268846] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weapons Tester",
["npcID"] = 136934,
},
[435165] = {
["source"] = "Sir Braunpyke",
["event"] = "SPELL_CAST_START",
["npcID"] = 217658,
},
[456147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bandtail Kestrel",
["npcID"] = 220300,
},
[333839] = {
["source"] = "Rek the Hardened",
["event"] = "SPELL_CAST_START",
["npcID"] = 167534,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[336910] = {
["source"] = "Xantuth the Blighted",
["event"] = "SPELL_CAST_START",
["npcID"] = 162872,
},
[301088] = {
["source"] = "Bomb Tonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 151657,
},
[424420] = {
["source"] = "Taener Duelmal",
["event"] = "SPELL_CAST_START",
["npcID"] = 239834,
},
[465872] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 229177,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
[462802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Machinist",
["npcID"] = 229695,
},
[424421] = {
["source"] = "Taener Duelmal",
["event"] = "SPELL_CAST_START",
["npcID"] = 239834,
},
[291878] = {
["encounterName"] = "King Mechagon",
["source"] = "Aerial Unit R-21/X",
["npcID"] = 150396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2260,
},
["387950"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Caldera Stomper",
["npcID"] = 187919,
},
["376683"] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[323608] = {
["encounterName"] = "Mordretha",
["source"] = "Mordretha, the Endless Empress",
["npcID"] = 165946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2404,
},
[424423] = {
["source"] = "Sergeant Shaynemail",
["event"] = "SPELL_CAST_START",
["npcID"] = 239836,
},
[463828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Brute",
["npcID"] = 229161,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[445406] = {
["isChanneled"] = false,
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214551,
},
[333845] = {
["source"] = "Harugia the Bloodthirsty",
["event"] = "SPELL_CAST_START",
["npcID"] = 167536,
},
["397931"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Doubt",
["npcID"] = 57109,
},
[445407] = {
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
["447395"] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[331288] = {
["source"] = "Nekthara the Mangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 162744,
},
["323137"] = {
["encounterName"] = "Ingra Maloch",
["npcID"] = 164804,
["encounterID"] = 2397,
},
[429545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turned Speaker",
["npcID"] = 214350,
},
[443363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swarming Sandwhisper",
["npcID"] = 215360,
},
[424429] = {
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 206704,
},
[474069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Growler",
["npcID"] = 227903,
},
[424431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
["200784"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
["321968"] = {
["npcID"] = 164929,
},
[448485] = {
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[451044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[330784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maniacal Soulbinder",
["npcID"] = 160495,
},
[469981] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
["437719"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[1217721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snake Eyes",
["npcID"] = 237264,
},
[418295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
["1215738"] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Paceran the Virulent",
["npcID"] = 164463,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2391,
},
["1217653"] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["npcID"] = 226403,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3019,
},
[432113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[268865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weapons Tester",
["npcID"] = 136934,
},
[432114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dogmatic Forgecaster",
["npcID"] = 212884,
},
[418297] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[461796] = {
["source"] = "Darkfuse Demolitionist",
["event"] = "SPELL_CAST_START",
["npcID"] = 229212,
},
[425974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[448492] = {
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[465380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Houndmaster",
["npcID"] = 229162,
},
[333861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harugia the Bloodthirsty",
["npcID"] = 167536,
},
[427001] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
["375727"] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 184125,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2559,
},
[455148] = {
["source"] = "Deepflayer Broodmother",
["event"] = "SPELL_CAST_START",
["npcID"] = 220286,
},
[432120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[469478] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["encounterID"] = 3053,
["event"] = "SPELL_CAST_START",
["npcID"] = 226396,
},
[462826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Explosive Bomberbot",
["npcID"] = 229706,
},
[444915] = {
["isChanneled"] = false,
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214343,
},
[212031] = {
["source"] = "Bound Energy",
["event"] = "SPELL_CAST_START",
["npcID"] = 105705,
},
["411994"] = {
["isChanneled"] = true,
["source"] = "Infinite Chronoweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[453616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard",
["npcID"] = 225493,
},
[450546] = {
["source"] = "Nerubian Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 216584,
},
[455152] = {
["source"] = "Crateron",
["event"] = "SPELL_CAST_START",
["npcID"] = 222791,
},
[469993] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[473576] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2364,
},
[472041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 136139,
},
[432125] = {
["source"] = "Battlefront Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 222719,
},
[454643] = {
["source"] = "Emboldened Browbeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 230774,
},
["169929"] = {
["encounterName"] = "Yalnu",
["source"] = "Gnarled Ancient",
["npcID"] = 84400,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
["331718"] = {
["npcID"] = 171772,
},
[1215738] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Paceran the Virulent",
["encounterID"] = 2391,
["event"] = "SPELL_CAST_START",
["npcID"] = 164463,
},
[427011] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[1215741] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Dessia the Decapitator",
["encounterID"] = 2391,
["event"] = "SPELL_CAST_START",
["npcID"] = 164451,
},
["257870"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Buccaneer",
["npcID"] = 130011,
},
[451064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[465905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Junkyard Shredder",
["npcID"] = 229220,
},
[473070] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["encounterID"] = 3053,
["event"] = "SPELL_CAST_START",
["npcID"] = 226396,
},
[373279] = {
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_START",
["npcID"] = 189988,
},
[472047] = {
["source"] = "Arrogant Intruder",
["event"] = "SPELL_CAST_START",
["npcID"] = 225823,
},
[331316] = {
["source"] = "Dokigg the Brutalizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 167538,
},
[444925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drifting Sporebloom",
["npcID"] = 214961,
},
[209477] = {
["source"] = "Mana Wyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 105703,
},
[270419] = {
["source"] = "Unbound Deposits",
["event"] = "SPELL_CAST_START",
["npcID"] = 223532,
},
[336947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[1215760] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Gallagio Goon",
["npcID"] = 233474,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[470515] = {
["source"] = "Anub'Ranax",
["event"] = "SPELL_CAST_START",
["npcID"] = 240969,
},
[432135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waterworks Gem-Thief",
["npcID"] = 219788,
},
[330810] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shackled Soul",
["npcID"] = 169875,
},
["200291"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Scout",
["npcID"] = 98691,
},
["427376"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
["255567"] = {
["event"] = "SPELL_CAST_START",
["source"] = "T'lonja",
["npcID"] = 128455,
},
[267354] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hired Assassin",
["npcID"] = 134232,
},
[448002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[424462] = {
["source"] = "Taener Duelmal",
["event"] = "SPELL_CAST_START",
["npcID"] = 239834,
},
["424958"] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
["408141"] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[441351] = {
["source"] = "Bee Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 210264,
},
[1215787] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2364,
},
[472057] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[320069] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Dessia the Decapitator",
["encounterID"] = 2391,
["event"] = "SPELL_CAST_START",
["npcID"] = 164451,
},
[427025] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[336958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[465408] = {
["source"] = "Venture Co. Architect",
["event"] = "SPELL_CAST_START",
["npcID"] = 229251,
},
[459779] = {
["encounterName"] = "Demolition Duo",
["source"] = "Bront",
["encounterID"] = 3019,
["event"] = "SPELL_CAST_START",
["npcID"] = 226402,
},
[421910] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[428563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Flametender",
["npcID"] = 213913,
},
[271456] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Mogul Razdunk",
["npcID"] = 129232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2108,
},
[378413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
[434706] = {
["source"] = "Tasting Room Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 214920,
},
[291928] = {
["encounterName"] = "King Mechagon",
["source"] = "Aerial Unit R-21/X",
["npcID"] = 150396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2260,
},
[116] = {
["npcID"] = 188027,
},
[431637] = {
["source"] = "Nightfall Shadowalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213895,
},
[1213776] = {
["encounterName"] = "Harbinger Ul'thul",
["source"] = "Harbinger Ul'thul",
["npcID"] = 234339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3096,
},
["375348"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gusting Proto-Dragon",
["npcID"] = 190401,
},
[444944] = {
["source"] = "Light-Bathed Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 223191,
},
[431639] = {
["source"] = "Sureki Marauder",
["event"] = "SPELL_CAST_START",
["npcID"] = 232087,
},
[462856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nullbot",
["npcID"] = 229729,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
["369465"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Weaver",
["npcID"] = 186420,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[444946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormtop Terralisk",
["npcID"] = 214581,
},
[468487] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
["375327"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subterranean Proto-Dragon",
["npcID"] = 190404,
},
[462859] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[461836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candleflyer",
["npcID"] = 219341,
},
[135029] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 208441,
},
[469001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperious Mouthpiece",
["npcID"] = 229365,
},
[430109] = {
["source"] = "Cursed Thunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207198,
},
[1213805] = {
["source"] = "Venture Co. Architect",
["event"] = "SPELL_CAST_START",
["npcID"] = 229251,
},
["156718"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Corpse Spider",
["npcID"] = 76104,
},
[454675] = {
["source"] = "Rampaging Stones",
["event"] = "SPELL_CAST_START",
["npcID"] = 223526,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[464399] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[466958] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[195046] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[1213641] = {
["source"] = "Recruitment Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 225827,
},
[181089] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2836,
},
[428066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[453345] = {
["source"] = "Manifested Shadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 211341,
},
["382233"] = {
["encounterName"] = "Balakar Khan",
["source"] = "Batak",
["npcID"] = 193462,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[440551] = {
["source"] = "Kobyss Bonechewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215040,
},
[269837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amani Thug",
["npcID"] = 120843,
},
[453856] = {
["isChanneled"] = true,
["source"] = "Nightfall Tactician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225601,
},
[429091] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priest Aemya",
["npcID"] = 212827,
},
[196031] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[466961] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["npcID"] = 228648,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3011,
},
[451097] = {
["source"] = "Sureki Militant",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[429427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[467201] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229953,
},
[1213700] = {
["encounterName"] = "Harbinger Ul'thul",
["source"] = "Harbinger Ul'thul",
["npcID"] = 234339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3096,
},
[444957] = {
["source"] = "Light-Bathed Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 223191,
},
[465939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Skyfire",
["npcID"] = 227955,
},
[443111] = {
["source"] = "Dissenter Troosilver",
["event"] = "SPELL_CAST_START",
["npcID"] = 241232,
},
[440549] = {
["source"] = "Kobyss Bonechewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 215040,
},
[210261] = {
["source"] = "Duskwatch Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 104251,
},
[459799] = {
["encounterName"] = "Demolition Duo",
["source"] = "Bront",
["encounterID"] = 3019,
["event"] = "SPELL_CAST_START",
["npcID"] = 226402,
},
[451098] = {
["source"] = "Sureki Militant",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[1213621] = {
["source"] = "Princeguard Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 227929,
},
[448888] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[258622] = {
["encounterName"] = "Azerokk",
["source"] = "Azerokk",
["npcID"] = 129227,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2106,
},
[434407] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[200256] = {
["source"] = "Arcane Minion",
["event"] = "SPELL_CAST_START",
["npcID"] = 101549,
},
[388349] = {
["source"] = "Sightless Wavecutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 220772,
},
[432448] = {
["source"] = "Nightfall Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 214761,
},
[445984] = {
["source"] = "Seeping Jawcrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 224536,
},
[426734] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[453496] = {
["isChanneled"] = true,
["source"] = "Nightfall Shadowmage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225479,
},
[209495] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[193375] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[431364] = {
["source"] = "Nightfall Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 214761,
},
[465432] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[440137] = {
["source"] = "Feral Sharpclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 221470,
},
[450781] = {
["source"] = "Flickerflame Sticker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212629,
},
[377923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Magma",
["npcID"] = 225390,
},
[426869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Enforcer",
["npcID"] = 212548,
},
["468813"] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["npcID"] = 226404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3054,
},
["440218"] = {
["encounterName"] = "Fangs of the Queen",
["source"] = "Vx",
["npcID"] = 216649,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2908,
},
[1217954] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[1214607] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[431659] = {
["source"] = "Darkwater Necromage",
["event"] = "SPELL_CAST_START",
["npcID"] = 225576,
},
["384978"] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[467202] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229953,
},
[463900] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 229177,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
["374839"] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["npcID"] = 189478,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2612,
},
[430125] = {
["isChanneled"] = true,
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209801,
},
[451107] = {
["source"] = "Sureki Webmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 210966,
},
[451900] = {
["source"] = "Dogmatic Soot-Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212876,
},
[455909] = {
["source"] = "Oremex Flamebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 222743,
},
[197141] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[418292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Wraith",
["npcID"] = 208728,
},
[438823] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diabolic Imp",
["npcID"] = 219161,
},
[471760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Demolition Scalper",
["npcID"] = 234122,
},
[473114] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["encounterID"] = 3053,
["event"] = "SPELL_CAST_START",
["npcID"] = 226396,
},
[387652] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[1227629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manifested Shadow",
["npcID"] = 241632,
},
[198496] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[1219438] = {
["source"] = "Darkfuse Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 227904,
},
[470826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alatear",
["npcID"] = 235801,
},
[196027] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[426787] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["encounterID"] = 2838,
["event"] = "SPELL_CAST_START",
["npcID"] = 211089,
},
["275907"] = {
["encounterName"] = "Azerokk",
["source"] = "Azerokk",
["npcID"] = 129227,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2106,
},
[431493] = {
["source"] = "Nightfall Curseblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 213894,
},
[463905] = {
["source"] = "Patreux",
["event"] = "SPELL_CAST_START",
["npcID"] = 211061,
},
[418791] = {
["source"] = "Bill",
["event"] = "SPELL_CAST_START",
["npcID"] = 211062,
},
[471070] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guk Boomdog",
["npcID"] = 229284,
},
[1217855] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Geargrinder Biker",
["npcID"] = 237516,
},
[462690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkened Husk",
["npcID"] = 220164,
},
[452980] = {
["isChanneled"] = true,
["source"] = "Mindless Reaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220999,
},
[196287] = {
["source"] = "Stormwake Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[451113] = {
["source"] = "Sureki Webmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 210966,
},
["425027"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[423479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Wicklighter",
["npcID"] = 210812,
},
[432179] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[397892] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Imacu'tya",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104275,
},
[429109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[456612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zeeben",
["npcID"] = 221975,
},
[428086] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[471585] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
[422969] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[466979] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["npcID"] = 228648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3011,
},
[456745] = {
["source"] = "Crimson Deathweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
["421910"] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[440288] = {
["source"] = "Roaming Mongrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 218330,
},
[1215953] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[1213785] = {
["encounterName"] = "Harbinger Ul'thul",
["source"] = "Harbinger Ul'thul",
["npcID"] = 234339,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3096,
},
[473636] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Support Rig",
["encounterID"] = 3009,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234557,
},
[200291] = {
["source"] = "Risen Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 98691,
},
[466470] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[428089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[449071] = {
["source"] = "Kobold Taskfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 204127,
},
[474147] = {
["source"] = "Gallagio Cocktail",
["event"] = "SPELL_CAST_START",
["npcID"] = 229435,
},
[451119] = {
["source"] = "Deathscreamer Iken'tak",
["event"] = "SPELL_CAST_START",
["npcID"] = 211263,
},
[440372] = {
["source"] = "Undercrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214962,
},
[191848] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["encounterID"] = 1813,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 91808,
},
[429114] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[211464] = {
["source"] = "Felbound Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 104278,
},
[456617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zillix",
["npcID"] = 221976,
},
[474482] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Walker",
["npcID"] = 234553,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A.",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[431674] = {
["source"] = "Battlefront Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 223789,
},
[1218017] = {
["isChanneled"] = true,
["source"] = "Underpin's Explosive Ally",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234902,
},
[473638] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Pit Mechanic",
["encounterID"] = 3009,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234557,
},
[445492] = {
["source"] = "Wandering Gutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 214551,
},
[197422] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["encounterID"] = 1818,
["event"] = "SPELL_CAST_START",
["npcID"] = 95888,
},
[462892] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Swarmbot",
["npcID"] = 229739,
},
[320114] = {
["encounterName"] = "Xav the Unfallen",
["source"] = "Xav the Unfallen",
["encounterID"] = 2366,
["event"] = "SPELL_CAST_START",
["npcID"] = 162329,
},
[209413] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[440376] = {
["source"] = "Sureki Undercrawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 232170,
},
[195944] = {
["source"] = "Skrog Wavecrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91796,
},
[200248] = {
["source"] = "Risen Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 98280,
},
[425536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lowly Moleherd",
["npcID"] = 210818,
},
[460847] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "Reel Assistant",
["npcID"] = 232599,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[470845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alatear",
["npcID"] = 235801,
},
[446519] = {
["source"] = "Wary Shalehorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 228217,
},
["87618"] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[191595] = {
["source"] = "Felsworn Infester",
["event"] = "SPELL_CAST_START",
["npcID"] = 96587,
},
[431552] = {
["source"] = "Sureki Weavelasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 232088,
},
[465966] = {
["isChanneled"] = true,
["source"] = "Waterworks Bottomfeeder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231312,
},
[200551] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[427404] = {
["source"] = "Voidrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
["388801"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Warrior",
["npcID"] = 195855,
},
[425027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[201141] = {
["isChanneled"] = true,
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98810,
},
[200784] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[214001] = {
["source"] = "Risen Lancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 102095,
},
[291973] = {
["encounterName"] = "K.U.-J.0.",
["source"] = "K.U.-J.0.",
["encounterID"] = 2258,
["event"] = "SPELL_CAST_START",
["npcID"] = 144246,
},
[204896] = {
["isChanneled"] = true,
["source"] = "Bloodscent Felhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98813,
},
[196111] = {
["source"] = "Seaspray Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 91793,
},
[211299] = {
["source"] = "Watchful Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 105715,
},
[193633] = {
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98275,
},
[456246] = {
["source"] = "Earthfury Cragshar",
["event"] = "SPELL_CAST_START",
["npcID"] = 222741,
},
[270481] = {
["source"] = "Demonic Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[397907] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Baalgar the Watchful",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104274,
},
[330868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maniacal Soulbinder",
["npcID"] = 160495,
},
[212784] = {
["source"] = "Watchful Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 105715,
},
[192621] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["encounterID"] = 1816,
["event"] = "SPELL_CAST_START",
["npcID"] = 95886,
},
[214003] = {
["source"] = "Risen Swordsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 102094,
},
[465971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Skyfire",
["npcID"] = 227955,
},
[454201] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2960,
},
[211473] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Shadow Mistress",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104300,
},
[359016] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[474160] = {
["source"] = "Nightmare Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 234206,
},
[456249] = {
["source"] = "Earthfury Cragshar",
["event"] = "SPELL_CAST_START",
["npcID"] = 222741,
},
["226406"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emberhusk Dominator",
["npcID"] = 113537,
},
[434756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hired Muscle",
["npcID"] = 210269,
},
[209378] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Imacu'tya",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104275,
},
[59638] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 31216,
},
[432198] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[381535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scornful Sandshoal",
["npcID"] = 214662,
},
[441410] = {
["source"] = "Worker Bee",
["event"] = "SPELL_CAST_START",
["npcID"] = 210265,
},
[211401] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Blazing Imp",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104295,
},
[204905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99676,
},
[465463] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["encounterID"] = 3054,
["event"] = "SPELL_CAST_START",
["npcID"] = 226404,
},
[457787] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[339573] = {
["encounterName"] = "Mordretha",
["source"] = "Mordretha, the Endless Empress",
["npcID"] = 165946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2404,
},
["188169"] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["npcID"] = 91003,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1790,
},
[291613] = {
["encounterName"] = "King Mechagon",
["source"] = "Aerial Unit R-21/X",
["npcID"] = 150396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2260,
},
[439365] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[423501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rank Overseer",
["npcID"] = 211121,
},
[195284] = {
["source"] = "Restless Tides",
["event"] = "SPELL_CAST_START",
["npcID"] = 97173,
},
[466296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechanized Peacekeeper",
["npcID"] = 237587,
},
[330875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nefarious Darkspeaker",
["npcID"] = 169893,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[397897] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Jazshariu",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104273,
},
[449090] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["encounterID"] = 1814,
["event"] = "SPELL_CAST_START",
["npcID"] = 96028,
},
[1213990] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Voltaic Image",
["npcID"] = 235187,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
[342135] = {
["source"] = "Heavin the Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 167532,
},
[1216039] = {
["source"] = "Darkfuse Demolitionist",
["event"] = "SPELL_CAST_START",
["npcID"] = 229212,
},
["436592"] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["npcID"] = 214661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2930,
},
[196127] = {
["source"] = "Mak'rana Siltwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91790,
},
[446533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wary Bull",
["npcID"] = 228120,
},
[428019] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Royal Wicklighter",
["npcID"] = 210812,
},
[474168] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkfuse Wretch",
["npcID"] = 230028,
},
[473650] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[450628] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[196563] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[320644] = {
["encounterName"] = "Xav the Unfallen",
["source"] = "Xav the Unfallen",
["encounterID"] = 2366,
["event"] = "SPELL_CAST_START",
["npcID"] = 162329,
},
["374361"] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[207979] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Jazshariu",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104273,
},
[435560] = {
["encounterName"] = "Goldie Baronbottom",
["source"] = "Goldie Baronbottom",
["encounterID"] = 2930,
["event"] = "SPELL_CAST_START",
["npcID"] = 214661,
},
[195253] = {
["source"] = "Restless Tides",
["event"] = "SPELL_CAST_START",
["npcID"] = 97173,
},
[427601] = {
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[426712] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211087,
},
[427356] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[456772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[454213] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[207980] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Baalgar the Watchful",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104274,
},
[211406] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 104295,
},
[194675] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 98963,
},
[431697] = {
["source"] = "Sureki Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 232163,
},
[460867] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["encounterID"] = 3019,
["event"] = "SPELL_CAST_START",
["npcID"] = 226403,
},
[376426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Condensing Sprite",
["npcID"] = 215362,
},
["427359"] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[466178] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 229177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[385005] = {
["source"] = "Understone Drudge",
["event"] = "SPELL_CAST_START",
["npcID"] = 105636,
},
[205231] = {
["source"] = "Darkglare",
["event"] = "SPELL_CAST_START",
["npcID"] = 103673,
},
[441214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taste Tester",
["npcID"] = 220060,
},
[183633] = {
["source"] = "Rockbound Pelter",
["event"] = "SPELL_CAST_START",
["npcID"] = 91008,
},
[1218117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
["372311"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Trainee",
["npcID"] = 189266,
},
["412129"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[1218120] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Junkmaker",
["npcID"] = 233306,
},
[469378] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[440912] = {
["source"] = "Invasive Lashroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 206194,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[1215850] = {
["source"] = "Dokigg the Brutalizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 167538,
},
[474125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Growler",
["npcID"] = 227903,
},
[1218127] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Junkmaker",
["npcID"] = 233306,
},
[461895] = {
["isChanneled"] = false,
["source"] = "Orb of Ascendance",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229296,
},
[454731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmother",
["npcID"] = 220286,
},
[450637] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Lord",
["npcID"] = 218103,
},
[434773] = {
["source"] = "Venture Co. Patron",
["event"] = "SPELL_CAST_START",
["npcID"] = 214668,
},
["333488"] = {
["encounterName"] = "Amarth, The Harvester",
["npcID"] = 163157,
["encounterID"] = 2388,
},
[427609] = {
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[1218133] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[373364] = {
["source"] = "Gerenth the Vile",
["event"] = "SPELL_CAST_START",
["npcID"] = 107435,
},
[271526] = {
["encounterName"] = "Azerokk",
["source"] = "Earthrager",
["npcID"] = 129802,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2106,
},
["386660"] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2582,
},
[1214043] = {
["encounterName"] = "Underpin",
["source"] = "Crony",
["encounterID"] = 3126,
["event"] = "SPELL_CAST_START",
["npcID"] = 235162,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[267433] = {
["source"] = "Mech Jockey",
["event"] = "SPELL_CAST_START",
["npcID"] = 130488,
},
[429093] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Dynamite Mine Cart",
["npcID"] = 213751,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
[428120] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[465481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodfang Hyena",
["npcID"] = 227843,
},
[226406] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113537,
},
[1214523] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[430171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Candle",
["npcID"] = 208450,
},
[1214052] = {
["encounterName"] = "Underpin",
["source"] = "The Underpin",
["encounterID"] = 3126,
["event"] = "SPELL_CAST_START",
["npcID"] = 234168,
},
[1214053] = {
["encounterName"] = "Underpin",
["source"] = "The Underpin",
["encounterID"] = 3126,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234168,
},
[226347] = {
["source"] = "Stoneclaw Grubmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 102404,
},
[447060] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brew Drop",
["npcID"] = 222964,
},
[461389] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3014,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proscenium Punk",
["npcID"] = 215791,
},
[1218152] = {
["source"] = "Gallagio Garbage",
["event"] = "SPELL_CAST_START",
["npcID"] = 234621,
},
["321834"] = {
["encounterName"] = "Mistcaller",
["npcID"] = 164501,
["encounterID"] = 2392,
},
[444377] = {
["source"] = "Immature Kodiak",
["event"] = "SPELL_CAST_START",
["npcID"] = 227552,
},
[197144] = {
["source"] = "Hatecoil Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 100216,
},
[195129] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[449734] = {
["encounterName"] = "Rasha'nan",
["source"] = "Rasha'nan",
["encounterID"] = 2839,
["event"] = "SPELL_CAST_START",
["npcID"] = 213937,
},
[455250] = {
["source"] = "Rumblestone",
["event"] = "SPELL_CAST_START",
["npcID"] = 223546,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Fragment",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 227518,
},
[466509] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[465871] = {
["source"] = "Darkfuse Bloodwarper",
["event"] = "SPELL_CAST_START",
["npcID"] = 230748,
},
[455251] = {
["source"] = "Rumblestone",
["event"] = "SPELL_CAST_START",
["npcID"] = 223546,
},
[461904] = {
["source"] = "Orb of Ascendance",
["event"] = "SPELL_CAST_START",
["npcID"] = 229296,
},
[431544] = {
["source"] = "Stalwart Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 214935,
},
[194682] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 98963,
},
["268202"] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["npcID"] = 135552,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2117,
},
[443482] = {
["source"] = "Shadowtide Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 220886,
},
[473841] = {
["source"] = "Gallagio Jackbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 229438,
},
[448600] = {
["isChanneled"] = false,
["source"] = "Spitfire Fusetender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211777,
},
[426261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
["453161"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Bloodguard",
["npcID"] = 216338,
},
[1216557] = {
["source"] = "Darkfuse Smuggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 232777,
},
["429427"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[193505] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
["269843"] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["npcID"] = 133007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2123,
},
[337552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[430179] = {
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[449339] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
[423015] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
["388911"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Battleaxe",
["npcID"] = 196577,
},
[427359] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[1214504] = {
["encounterName"] = "Craggle Fritzbrains",
["source"] = "Craggle Fritzbrains",
["encounterID"] = 3095,
["event"] = "SPELL_CAST_START",
["npcID"] = 234291,
},
[201959] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113536,
},
[1214090] = {
["encounterName"] = "Craggle Fritzbrains",
["source"] = "Craggle Fritzbrains",
["encounterID"] = 3095,
["event"] = "SPELL_CAST_START",
["npcID"] = 234291,
},
[473168] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite Extractor",
["npcID"] = 136643,
},
["461796"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Demolitionist",
["npcID"] = 229212,
},
[443487] = {
["source"] = "Worker Bee",
["event"] = "SPELL_CAST_START",
["npcID"] = 210265,
},
[455158] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmother",
["npcID"] = 220286,
},
[432229] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
["397889"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[269493] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2105,
},
[337556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[297128] = {
["source"] = "Defense Bot Mk III",
["event"] = "SPELL_CAST_START",
["npcID"] = 144298,
},
["412012"] = {
["isChanneled"] = true,
["source"] = "Infinite Timeslicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205408,
},
[455260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[470612] = {
["encounterName"] = "Cragpie",
["source"] = "Cragpie",
["encounterID"] = 3001,
["event"] = "SPELL_CAST_START",
["npcID"] = 220008,
},
[462936] = {
["event"] = "SPELL_CAST_START",
["source"] = "Medbot",
["npcID"] = 229769,
},
[342675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bone Magus",
["npcID"] = 170882,
},
[1214039] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
[466519] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229953,
},
[282801] = {
["encounterName"] = "Tussle Tonks",
["source"] = "The Platinum Pummeler",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 144244,
},
["320729"] = {
["encounterName"] = "Xav the Unfallen",
["npcID"] = 162329,
["encounterID"] = 2366,
},
[183088] = {
["source"] = "Mightstone Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 90997,
},
[449965] = {
["source"] = "Witherthorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 214790,
},
[193585] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Rockbound Trapper",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 102232,
},
[200261] = {
["source"] = "Soul-Torn Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 98243,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["encounterID"] = 1812,
["event"] = "SPELL_CAST_START",
["npcID"] = 91797,
},
[1213803] = {
["isChanneled"] = false,
["source"] = "Venture Co. Architect",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229251,
},
[226296] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[202108] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
["387910"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algeth'ar Echoknight",
["npcID"] = 196200,
},
[427629] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[453199] = {
["source"] = "Vanishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 224922,
},
["427869"] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[196175] = {
["source"] = "Mak'rana Hardshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 95947,
},
["385578"] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[431303] = {
["source"] = "Nightfall Shadowmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 213892,
},
[317605] = {
["source"] = "Heavin the Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 167532,
},
[1216852] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Darkfuse Wrenchmonger",
["npcID"] = 231939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[474201] = {
["source"] = "Tainted Feaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 234207,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[458849] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2949,
["event"] = "SPELL_CAST_START",
["npcID"] = 220577,
},
[473690] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["encounterID"] = 3019,
["event"] = "SPELL_CAST_START",
["npcID"] = 226403,
},
[463967] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
["369563"] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[1214135] = {
["encounterName"] = "Craggle Fritzbrains",
["source"] = "Craggle Fritzbrains",
["encounterID"] = 3095,
["event"] = "SPELL_CAST_START",
["npcID"] = 234291,
},
[191726] = {
["source"] = "Greater Lightning Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[474203] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Wretch",
["npcID"] = 230028,
},
[460602] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["encounterID"] = 3019,
["event"] = "SPELL_CAST_START",
["npcID"] = 226403,
},
[200205] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[377483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer",
["npcID"] = 221572,
},
[263202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Earthshaper",
["npcID"] = 130661,
},
["411012"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[1215600] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["encounterID"] = 2391,
["event"] = "SPELL_CAST_START",
["npcID"] = 164461,
},
["376170"] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2569,
},
[470706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Machinist",
["npcID"] = 229272,
},
[440205] = {
["source"] = "Shadowtide Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 220838,
},
[1214147] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Underpin",
["npcID"] = 236942,
},
[449130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[441119] = {
["source"] = "Bee Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 210264,
},
[259940] = {
["encounterName"] = "Rixxa Fluxfume",
["source"] = "Rixxa Fluxflame",
["npcID"] = 129231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2107,
},
[448619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[472452] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 228424,
},
[468658] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[455480] = {
["source"] = "Take",
["event"] = "SPELL_CAST_START",
["npcID"] = 226272,
},
[428150] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
["265019"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Blood Matron",
["npcID"] = 131436,
},
["449090"] = {
["isChanneled"] = true,
["source"] = "Careless Hopgoblin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223423,
},
[429110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[449522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Disruptor",
["npcID"] = 216356,
},
[455274] = {
["source"] = "Rumblestone",
["event"] = "SPELL_CAST_START",
["npcID"] = 223546,
},
[427616] = {
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
["291865"] = {
["encounterName"] = "King Mechagon",
["source"] = "Aerial Unit R-21/X",
["npcID"] = 150396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2260,
},
[388897] = {
["source"] = "Deepwater Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 214550,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["encounterID"] = 1833,
["event"] = "SPELL_CAST_START",
["npcID"] = 98696,
},
[369813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[460393] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 228424,
},
[428894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[449135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glumtooth Bug-Beater",
["npcID"] = 222176,
},
["200345"] = {
["isChanneled"] = true,
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98275,
},
[449136] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glumtooth Bug-Beater",
["npcID"] = 222176,
},
[262347] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[442995] = {
["source"] = "Venture Co. Honey Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 220946,
},
[474212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Wretch",
["npcID"] = 230028,
},
[1219407] = {
["source"] = "Gallagio Security",
["event"] = "SPELL_CAST_START",
["npcID"] = 229439,
},
[202663] = {
["isChanneled"] = false,
["source"] = "Fel Scorcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102583,
},
["1217496"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbles",
["npcID"] = 231197,
},
["443500"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Swarmguard",
["npcID"] = 220197,
},
[473260] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["npcID"] = 228648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3011,
},
[260280] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Mogul Razdunk",
["npcID"] = 129232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2108,
},
[426883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskworker",
["npcID"] = 212383,
},
[448854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burly Contender",
["npcID"] = 217646,
},
[460977] = {
["source"] = "Slippery Syphoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 214548,
},
["426261"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[442998] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
["256627"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrimshaw Enforcer",
["npcID"] = 129374,
},
["369061"] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["npcID"] = 184422,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2558,
},
[275563] = {
["source"] = "Shadowstarved Bullfrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 214406,
},
[295169] = {
["isChanneled"] = true,
["source"] = "Blastatron X-80",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 151476,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 97269,
},
[1214190] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[262794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Mastermind",
["npcID"] = 133430,
},
[268797] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Alchemist",
["npcID"] = 133432,
},
[209404] = {
["source"] = "Duskwatch Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104247,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swigs Farsight",
["npcID"] = 231288,
},
[450677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orta",
["npcID"] = 221067,
},
[443001] = {
["source"] = "Sureki Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 232163,
},
[1216244] = {
["encounterName"] = "Underpin",
["source"] = "Crony",
["encounterID"] = 3126,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 235162,
},
[463169] = {
["source"] = "Venture Co. Surveyor",
["event"] = "SPELL_CAST_START",
["npcID"] = 229686,
},
[260202] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Mogul Razdunk",
["npcID"] = 129232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2108,
},
[320182] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Paceran the Virulent",
["encounterID"] = 2391,
["event"] = "SPELL_CAST_START",
["npcID"] = 164463,
},
[451702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orta",
["npcID"] = 221067,
},
[472233] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Flarendo",
["npcID"] = 229181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3010,
},
[448632] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2989,
},
[458867] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2949,
["event"] = "SPELL_CAST_START",
["npcID"] = 220577,
},
["340300"] = {
["npcID"] = 173720,
},
[331510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unyielding Contender",
["npcID"] = 170838,
},
[465009] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "Fiery Dynamite Booty",
["npcID"] = 231028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
["422414"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Horror",
["npcID"] = 208456,
},
[452013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Wolf",
["npcID"] = 222797,
},
[466545] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[448634] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2989,
},
["257862"] = {
["encounterName"] = "Hadal Darkfathom",
["source"] = "Hadal Darkfathom",
["npcID"] = 128651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2099,
},
[198024] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[458866] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2949,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220577,
},
[439403] = {
["isChanneled"] = false,
["source"] = "Yes Man",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219588,
},
[456782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[474223] = {
["source"] = "Hideous Amalgamation",
["event"] = "SPELL_CAST_START",
["npcID"] = 234208,
},
[1216508] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["npcID"] = 230583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
["451843"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
},
[454319] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flavor Scientist",
["npcID"] = 218671,
},
["375251"] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[337587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mistress Dyrax",
["npcID"] = 162880,
},
["283422"] = {
["encounterName"] = "Tussle Tonks",
["source"] = "Gnomercy 4.U.",
["npcID"] = 145185,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2257,
},
["465754"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shreddinator 3000",
["npcID"] = 230740,
},
[472178] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "Fiery Dynamite Booty",
["npcID"] = 231028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
["435012"] = {
["encounterName"] = "Anub'zekt",
["source"] = "Anub'zekt",
["npcID"] = 215405,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2906,
},
[470587] = {
["source"] = "Kobyss Witherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[276229] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "B.O.O.M.B.A.",
["npcID"] = 141303,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2108,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[202634] = {
["isChanneled"] = true,
["source"] = "Grimhorn the Enslaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 102566,
},
[428169] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[473715] = {
["source"] = "Melbo the Magnificent",
["event"] = "SPELL_CAST_START",
["npcID"] = 229434,
},
[426260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[285440] = {
["encounterName"] = "Machinist's Garden",
["source"] = "Head Machinist Sparkflux",
["encounterID"] = 2259,
["event"] = "SPELL_CAST_START",
["npcID"] = 144248,
},
[448640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[422541] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuffling Horror",
["npcID"] = 208456,
},
[474228] = {
["source"] = "Silent Slitherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 234210,
},
[450176] = {
["source"] = "Nerubian Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208243,
},
[1225925] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[473964] = {
["source"] = "Gallagio Dealer",
["event"] = "SPELL_CAST_START",
["npcID"] = 229437,
},
[337982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[191732] = {
["source"] = "Greater Lightning Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[1214246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Crab",
["npcID"] = 236892,
},
[471671] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Oppressor",
["npcID"] = 225854,
},
[474230] = {
["isChanneled"] = false,
["source"] = "Silent Slitherer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234210,
},
[270042] = {
["encounterName"] = "Rixxa Fluxfume",
["source"] = "Rixxa Fluxflame",
["npcID"] = 129231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2107,
},
[209033] = {
["source"] = "Duskwatch Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 111563,
},
[269099] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venture Co. War Machine",
["npcID"] = 133463,
},
["372087"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[291946] = {
["encounterName"] = "K.U.-J.0.",
["source"] = "K.U.-J.0.",
["encounterID"] = 2258,
["event"] = "SPELL_CAST_START",
["npcID"] = 144246,
},
[448644] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2989,
},
[267997] = {
["source"] = "Charhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 226269,
},
[271579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Earthshaper",
["npcID"] = 130661,
},
["226296"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[211477] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Legion Hound",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104277,
},
[1224492] = {
["encounterName"] = "Cauldron of Carnage",
["source"] = "Torq",
["npcID"] = 235187,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3010,
},
[1220398] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[195473] = {
["source"] = "Gritslime Snail",
["event"] = "SPELL_CAST_START",
["npcID"] = 91786,
},
[1218353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melbo the Magnificent",
["npcID"] = 229434,
},
[263262] = {
["encounterName"] = "Coin-Operated Crowd Pummeler",
["source"] = "Shalebiter",
["npcID"] = 134005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2105,
},
[157348] = {
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[450182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Mudspawn",
["npcID"] = 219897,
},
["382708"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Warden",
["npcID"] = 193293,
},
[57984] = {
["source"] = "Greater Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 95061,
},
[433040] = {
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
[472458] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
["396665"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmas",
["npcID"] = 199027,
},
[470588] = {
["source"] = "Kobyss Witherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214251,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormtop Shalemaw",
["npcID"] = 212364,
},
["265721"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorachna",
["npcID"] = 200349,
},
[1215412] = {
["source"] = "Metal Gunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 236033,
},
["323496"] = {
["npcID"] = 165872,
},
["385536"] = {
["isChanneled"] = true,
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
["426893"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Koratite",
["npcID"] = 209801,
},
[450697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
["391118"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalebane Lieutenant",
["npcID"] = 191739,
},
[427157] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2788,
},
[456327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gong'tze the Riverhewer",
["npcID"] = 221974,
},
[1216745] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2364,
},
[196515] = {
["source"] = "Binder Ashioi",
["event"] = "SPELL_CAST_START",
["npcID"] = 100250,
},
[157331] = {
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[455174] = {
["source"] = "Crateron",
["event"] = "SPELL_CAST_START",
["npcID"] = 222791,
},
[183465] = {
["source"] = "Tarspitter Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91001,
},
[420659] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[1217456] = {
["isChanneled"] = true,
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231223,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[470582] = {
["encounterName"] = "Bogpiper",
["source"] = "Bogpiper",
["npcID"] = 220314,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[422393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Darkness",
["npcID"] = 208457,
},
[257593] = {
["encounterName"] = "Azerokk",
["source"] = "Azerokk",
["npcID"] = 129227,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2106,
},
[464518] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["npcID"] = 228648,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3011,
},
[462983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automatic Ironstrider",
["npcID"] = 229778,
},
[445252] = {
["isChanneled"] = true,
["source"] = "Kobyss Necromancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214625,
},
["197974"] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["npcID"] = 100485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[456331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flickerflame Candlecrusher",
["npcID"] = 219619,
},
[334023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harugia the Bloodthirsty",
["npcID"] = 167536,
},
[194966] = {
["source"] = "Lord Etheldrin Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98521,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[443027] = {
["source"] = "Sureki Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 232161,
},
[473220] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
[200084] = {
["source"] = "Ghostly Retainer",
["event"] = "SPELL_CAST_START",
["npcID"] = 98366,
},
[430036] = {
["isChanneled"] = false,
["source"] = "Kobyss Spearfisher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214338,
},
["332708"] = {
["npcID"] = 167532,
},
[445038] = {
["source"] = "Kobyss Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 214343,
},
["293986"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blastatron X-80",
["npcID"] = 151476,
},
[1218061] = {
["source"] = "Underpin's Explosive Ally",
["event"] = "SPELL_CAST_START",
["npcID"] = 234902,
},
["193505"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vileshard Hulk",
["npcID"] = 91000,
},
[1217853] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geargrinder Biker",
["npcID"] = 237516,
},
[467212] = {
["source"] = "Princeguard Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 227929,
},
["330614"] = {
["npcID"] = 163086,
},
[439202] = {
["encounterName"] = "I'pa",
["source"] = "I'pa",
["npcID"] = 210267,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2929,
},
[339706] = {
["encounterName"] = "Mordretha",
["source"] = "Echo Bullrider",
["npcID"] = 173549,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2404,
},
[1223803] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2364,
},
[421817] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
[186269] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
[262383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. War Machine",
["npcID"] = 133463,
},
[455313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
["473114"] = {
["encounterName"] = "Swampface",
["source"] = "Swampface",
["npcID"] = 226396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3053,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[430238] = {
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[428703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[1218418] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["npcID"] = 230583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
[450197] = {
["source"] = "Skittering Swarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 208245,
},
[426145] = {
["encounterName"] = "The Candle King",
["source"] = "The Candle King",
["npcID"] = 208745,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2787,
},
[1214324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[1214325] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
["200261"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Torn Champion",
["npcID"] = 98243,
},
[448663] = {
["encounterName"] = "Under-Lord Vik'tis",
["source"] = "Under-Lord Vik'tis",
["npcID"] = 220158,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2989,
},
[1214780] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Darkfuse Mechadrone",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 228424,
},
[451734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
["427342"] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[196242] = {
["source"] = "Dreadlord Mendacius",
["event"] = "SPELL_CAST_START",
["npcID"] = 99649,
},
[466518] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[473239] = {
["source"] = "Tally Doublespeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 230940,
},
[1215409] = {
["source"] = "Waste Processing Unit",
["event"] = "SPELL_CAST_START",
["npcID"] = 144293,
},
["375439"] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["npcID"] = 181861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2610,
},
[474008] = {
["source"] = "Corruption Parasite",
["event"] = "SPELL_CAST_START",
["npcID"] = 234205,
},
[268702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonefury",
["npcID"] = 130635,
},
[442525] = {
["encounterName"] = "Brewmaster Aldryr",
["source"] = "Brew Master Aldryr",
["npcID"] = 210271,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2900,
},
[400050] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Deepflayer",
["npcID"] = 215773,
},
[200345] = {
["isChanneled"] = true,
["source"] = "Risen Archer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98275,
},
[441242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taste Tester",
["npcID"] = 220060,
},
[450714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Lord",
["npcID"] = 218103,
},
[1216812] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Gobfather",
["npcID"] = 231821,
},
[320729] = {
["encounterName"] = "Xav the Unfallen",
["source"] = "Xav the Unfallen",
["encounterID"] = 2366,
["event"] = "SPELL_CAST_START",
["npcID"] = 162329,
},
[424621] = {
["source"] = "Sergeant Shaynemail",
["event"] = "SPELL_CAST_START",
["npcID"] = 239836,
},
["372735"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[469650] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["npcID"] = 228648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3011,
},
[474237] = {
["source"] = "Silent Slitherer",
["event"] = "SPELL_CAST_START",
["npcID"] = 234210,
},
[196508] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Deranged Mindflayer",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99657,
},
["372225"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Bonesplitter",
["npcID"] = 189467,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[427176] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["npcID"] = 213008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[1222542] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 232131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[473748] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["npcID"] = 228648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3011,
},
[447135] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Over-Indulged Patron",
["npcID"] = 222964,
},
["459210"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[415406] = {
["encounterName"] = "Spinshroom",
["source"] = "Spinshroom",
["npcID"] = 207481,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2831,
},
[424891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Speartender",
["npcID"] = 207456,
},
[467606] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["npcID"] = 228648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3011,
},
[467246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shifty Scalper",
["npcID"] = 229286,
},
[276212] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Mogul Razdunk",
["npcID"] = 129232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2108,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[193951] = {
["source"] = "Barbed Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 97677,
},
[1214991] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mk II Electro Shocker",
["npcID"] = 230316,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[468631] = {
["source"] = "Venture Co. Diver",
["event"] = "SPELL_CAST_START",
["npcID"] = 231496,
},
[1216414] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Beam Turret",
["encounterID"] = 3013,
["event"] = "SPELL_CAST_START",
["npcID"] = 230358,
},
[203163] = {
["source"] = "Felspite Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 102788,
},
[1214369] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[449318] = {
["source"] = "Nerubian Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 208242,
},
["164357"] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["npcID"] = 81522,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1746,
},
[424614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Stabber",
["npcID"] = 207450,
},
[453271] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
["372222"] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["npcID"] = 186739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2585,
},
[465051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xal'atath",
["npcID"] = 230937,
},
[291865] = {
["encounterName"] = "King Mechagon",
["source"] = "Aerial Unit R-21/X",
["npcID"] = 150396,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2260,
},
[195232] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[1217653] = {
["encounterName"] = "Demolition Duo",
["source"] = "Keeza Quickfuse",
["encounterID"] = 3019,
["event"] = "SPELL_CAST_START",
["npcID"] = 226403,
},
[293986] = {
["source"] = "Blastatron X-80",
["event"] = "SPELL_CAST_START",
["npcID"] = 151476,
},
[447141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Repurposed Loaderbot",
["npcID"] = 222923,
},
["209628"] = {
["encounterName"] = "Advisor Melandrus",
["npcID"] = 104218,
["encounterID"] = 1870,
},
[472714] = {
["encounterName"] = "Rik Reverb",
["source"] = "Amplifier",
["npcID"] = 230197,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3011,
},
[1214315] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[1216431] = {
["encounterName"] = "Tussle Tonks",
["source"] = "Gnomercy 4.U.",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 145185,
},
[426283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[330562] = {
["source"] = "Ancient Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 164506,
},
[456866] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[439467] = {
["source"] = "Yes Man",
["event"] = "SPELL_CAST_START",
["npcID"] = 219588,
},
[470684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Melter",
["npcID"] = 229222,
},
["383823"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Hornsounder",
["npcID"] = 192796,
},
["388976"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[195234] = {
["source"] = "Hatecoil Wavebinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 97170,
},
[1216441] = {
["encounterName"] = "Underpin",
["source"] = "The Underpin",
["encounterID"] = 3126,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 234168,
},
[456868] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[1216443] = {
["encounterName"] = "Tussle Tonks",
["source"] = "Gnomercy 4.U.",
["encounterID"] = 2257,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 145185,
},
[449154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[470686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mechano Wolf",
["npcID"] = 228050,
},
["451241"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamerender",
["npcID"] = 224240,
},
[207261] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A.",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
["427616"] = {
["encounterName"] = "Kyrioss",
["source"] = "Unruly Stormrook",
["npcID"] = 207186,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2816,
},
[428212] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[426677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootsnout",
["npcID"] = 212412,
},
[441518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Batch",
["npcID"] = 220368,
},
[458406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Droghung",
["npcID"] = 221316,
},
[440506] = {
["source"] = "Warbling Mudskip",
["event"] = "SPELL_CAST_START",
["npcID"] = 229812,
},
["183465"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarspitter Lurker",
["npcID"] = 91001,
},
[324447] = {
["source"] = "Kobyss Spearfisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214338,
},
[202075] = {
["isChanneled"] = true,
["source"] = "Burning Geode",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101437,
},
[270595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rapacious Fathomjaw",
["npcID"] = 129305,
},
["426645"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[459943] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "The Geargrinder",
["npcID"] = 225821,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[196516] = {
["source"] = "Ritualist Lesha",
["event"] = "SPELL_CAST_START",
["npcID"] = 100248,
},
[469816] = {
["isChanneled"] = false,
["source"] = "Bubbles",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231197,
},
[269429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. War Machine",
["npcID"] = 133463,
},
[258674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Off-Duty Laborer",
["npcID"] = 130436,
},
[330703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blighted Sludge-Spewer",
["npcID"] = 174210,
},
[467109] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[259462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandskitter Crab",
["npcID"] = 129318,
},
["413529"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[202658] = {
["source"] = "Malignant Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 102584,
},
["372107"] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[1214872] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["npcID"] = 230583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
[474087] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2364,
},
[1214238] = {
["event"] = "SPELL_CAST_START",
["source"] = "Treasure Crab",
["npcID"] = 236892,
},
[426619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212411,
},
[1216475] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2364,
},
["266209"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Deathspeaker",
["npcID"] = 134284,
},
[454318] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Over-Indulged Patron",
["npcID"] = 218671,
},
[323683] = {
["encounterName"] = "Mordretha",
["source"] = "Mordretha, the Endless Empress",
["npcID"] = 165946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2404,
},
[471736] = {
["isChanneled"] = true,
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 231223,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[1224669] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[257596] = {
["encounterName"] = "Azerokk",
["source"] = "Azerokk",
["npcID"] = 129227,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2106,
},
[188046] = {
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[1221299] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mug'Zee",
["npcID"] = 229953,
},
[462508] = {
["source"] = "Void Emissary",
["event"] = "SPELL_CAST_START",
["npcID"] = 229537,
},
[188587] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[209027] = {
["source"] = "Duskwatch Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 111563,
},
[1221302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mug'Zee",
["npcID"] = 229953,
},
[427710] = {
["encounterName"] = "Bogpiper",
["source"] = "Sporbit",
["npcID"] = 225708,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2960,
},
[323825] = {
["encounterName"] = "Mordretha",
["source"] = "Grasping Rift",
["npcID"] = 165994,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2404,
},
[465580] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[337131] = {
["source"] = "Xantuth the Blighted",
["event"] = "SPELL_CAST_START",
["npcID"] = 162872,
},
[202661] = {
["source"] = "Fel Scorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102583,
},
[446646] = {
["source"] = "Sureki Valley Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 240637,
},
[471467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Houndmaster",
["npcID"] = 229162,
},
[451764] = {
["isChanneled"] = false,
["source"] = "Sir Braunpyke",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217658,
},
[203685] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 99676,
},
[467117] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[438971] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Ravenous Cinderbee",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218016,
},
[464112] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Stix Bunkjunker",
["npcID"] = 230322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
["323608"] = {
["encounterName"] = "Mordretha",
["npcID"] = 165946,
["encounterID"] = 2404,
},
[465071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Brute",
["npcID"] = 229161,
},
[452205] = {
["source"] = "Aggregation of Horrors",
["event"] = "SPELL_CAST_START",
["npcID"] = 220999,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["encounterID"] = 2877,
["event"] = "SPELL_CAST_START",
["npcID"] = 221896,
},
[1216505] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Gobfather",
["npcID"] = 231821,
},
[446649] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["encounterID"] = 2835,
["event"] = "SPELL_CAST_START",
["npcID"] = 207939,
},
[438973] = {
["source"] = "Pit Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 228574,
},
[423109] = {
["encounterName"] = "Blazikon",
["source"] = "Blazikon",
["npcID"] = 208743,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2826,
},
["427025"] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[471652] = {
["isChanneled"] = true,
["source"] = "Mechadrone Sniper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226398,
},
["448619"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Careless Hopgoblin",
["npcID"] = 223423,
},
[449290] = {
["source"] = "Sureki Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 232096,
},
[472750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swigs Farsight",
["npcID"] = 231288,
},
["369828"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Basilisk",
["npcID"] = 184023,
},
[1214468] = {
["source"] = "Mechadrone Sniper",
["event"] = "SPELL_CAST_START",
["npcID"] = 229069,
},
[470335] = {
["source"] = "Sureki Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 232096,
},
[125056] = {
["source"] = "Nahaki",
["event"] = "SPELL_CAST_START",
["npcID"] = 165189,
},
[455273] = {
["source"] = "Bloodswell Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 220891,
},
[465587] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["encounterID"] = 3014,
["event"] = "SPELL_CAST_START",
["npcID"] = 228458,
},
["169179"] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[458423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kordac",
["npcID"] = 221084,
},
[458853] = {
["encounterName"] = "Nerl'athekk the Skulking",
["source"] = "Nerl'athekk the Skulking",
["encounterID"] = 2949,
["event"] = "SPELL_CAST_START",
["npcID"] = 220577,
},
["412200"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Aerobot",
["npcID"] = 205723,
},
[157375] = {
["encounterName"] = "Xav the Unfallen",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2366,
},
[1216525] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Rocket Launcher",
["npcID"] = 230360,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
[422090] = {
["source"] = "Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[455354] = {
["source"] = "Searing Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 223528,
},
["200913"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[460472] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3014,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["encounterID"] = 2848,
["event"] = "SPELL_CAST_START",
["npcID"] = 207940,
},
[285454] = {
["encounterName"] = "Machinist's Garden",
["source"] = "Head Machinist Sparkflux",
["encounterID"] = 2259,
["event"] = "SPELL_CAST_START",
["npcID"] = 144248,
},
[214692] = {
["source"] = "Gerenth the Vile",
["event"] = "SPELL_CAST_START",
["npcID"] = 107435,
},
[437956] = {
["source"] = "Venture Co. Pyromaniac",
["event"] = "SPELL_CAST_START",
["npcID"] = 218671,
},
[456891] = {
["source"] = "Bee Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 210264,
},
[337562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devmorta",
["npcID"] = 162875,
},
[445882] = {
["source"] = "Stonehoofed Hog",
["event"] = "SPELL_CAST_START",
["npcID"] = 214928,
},
["257426"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Enforcer",
["npcID"] = 129602,
},
[267551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coin-Operated Crowd Pummeler",
["npcID"] = 129214,
},
[471733] = {
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 231223,
},
[456748] = {
["source"] = "Crimson Deathweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222692,
},
[449285] = {
["source"] = "Sureki Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 232096,
},
[1219526] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawler Mine",
["npcID"] = 227956,
},
[472659] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Gallagio Goon",
["npcID"] = 233474,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[267546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rowdy Reveler",
["npcID"] = 144231,
},
[1216142] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["encounterID"] = 3015,
["event"] = "SPELL_CAST_START",
["npcID"] = 229953,
},
["387629"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[458329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kordac",
["npcID"] = 221084,
},
[1216826] = {
["isChanneled"] = true,
["source"] = "Mechadrone Sniper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 230748,
},
[458430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Droghung",
["npcID"] = 221316,
},
["272609"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 138281,
},
[465595] = {
["source"] = "Venture Co. Electrician",
["event"] = "SPELL_CAST_START",
["npcID"] = 231312,
},
[473351] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["encounterID"] = 3020,
["event"] = "SPELL_CAST_START",
["npcID"] = 226398,
},
[467223] = {
["source"] = "Princeguard Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 227929,
},
[1220648] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Scrapmaster",
["npcID"] = 231839,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3012,
},
[469327] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[431309] = {
["source"] = "Nightfall Shadowmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 213892,
},
["416139"] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[450756] = {
["source"] = "Nightfall Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 214762,
},
[257582] = {
["encounterName"] = "Azerokk",
["source"] = "Earthrager",
["npcID"] = 129802,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2106,
},
[440195] = {
["source"] = "Shadowtide Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 220838,
},
[195108] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 91783,
},
[391793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
["88308"] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["npcID"] = 43873,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1041,
},
[474298] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2364,
},
["377204"] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
["375943"] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
["412215"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
["376892"] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["npcID"] = 186151,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2580,
},
[472764] = {
["source"] = "Consuming Voidstone",
["event"] = "SPELL_CAST_START",
["npcID"] = 212739,
},
[473276] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Sprocketmonger Lockenstock",
["npcID"] = 230583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
["367484"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[455877] = {
["source"] = "Bloodswell Creation",
["event"] = "SPELL_CAST_START",
["npcID"] = 220891,
},
["473220"] = {
["encounterName"] = "Big M.O.M.M.A.",
["source"] = "Big M.O.M.M.A.",
["npcID"] = 226398,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3020,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["encounterID"] = 1835,
["event"] = "SPELL_CAST_START",
["npcID"] = 98970,
},
[422245] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2829,
},
["320822"] = {
["npcID"] = 165222,
},
[468672] = {
["source"] = "Bombshell Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 231497,
},
[1215747] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["npcID"] = 164461,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2391,
},
[189469] = {
["source"] = "Spirit of Vengeance",
["event"] = "SPELL_CAST_START",
["npcID"] = 100364,
},
[209485] = {
["source"] = "Arcane Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 105704,
},
[470593] = {
["source"] = "Shadow Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 220572,
},
[196787] = {
["source"] = "Fel-Infused Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 99956,
},
["324323"] = {
["npcID"] = 165919,
},
[195037] = {
["source"] = "Hatecoil Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 95861,
},
[371584] = {
["source"] = "Escaped Steam",
["event"] = "SPELL_CAST_START",
["npcID"] = 227383,
},
["445457"] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["npcID"] = 207207,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2836,
},
[430805] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[467510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skiggy Muckheimer",
["npcID"] = 229433,
},
[445191] = {
["source"] = "Spitfire Charger",
["event"] = "SPELL_CAST_START",
["npcID"] = 213577,
},
[456905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[283422] = {
["encounterName"] = "Tussle Tonks",
["source"] = "Gnomercy 4.U.",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 145185,
},
["369573"] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["npcID"] = 184581,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2555,
},
[1214546] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[271698] = {
["encounterName"] = "Azerokk",
["source"] = "Azerokk",
["npcID"] = 129227,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2106,
},
[1232971] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[441627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flavor Scientist",
["npcID"] = 214673,
},
[195528] = {
["source"] = "Animated Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 95920,
},
["1214546"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Ascendant",
["npcID"] = 212793,
},
[201139] = {
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 98810,
},
[414944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Speartender",
["npcID"] = 207456,
},
[464584] = {
["encounterName"] = "Rik Reverb",
["source"] = "Rik Reverb",
["npcID"] = 228648,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3011,
},
[195172] = {
["source"] = "Hatecoil Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 91782,
},
[428762] = {
["source"] = "Arena Challenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 161757,
},
[414945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Rotspreader",
["npcID"] = 207453,
},
[431645] = {
["source"] = "Kaheti Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 214941,
},
[455136] = {
["source"] = "Crateron",
["event"] = "SPELL_CAST_START",
["npcID"] = 222791,
},
[1213852] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Underpin",
["npcID"] = 236942,
},
[200898] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["encounterID"] = 1850,
["event"] = "SPELL_CAST_START",
["npcID"] = 96015,
},
[470727] = {
["source"] = "Sureki Valley Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 240637,
},
[1219588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bombshell Crab",
["npcID"] = 233453,
},
[1215647] = {
["encounterName"] = "Underpin",
["source"] = "Crony",
["encounterID"] = 3126,
["event"] = "SPELL_CAST_START",
["npcID"] = 235162,
},
["317231"] = {
["encounterName"] = "Xav the Unfallen",
["npcID"] = 162329,
["encounterID"] = 2366,
},
["426860"] = {
["encounterName"] = "Anub'ikkaj",
["source"] = "Anub'ikkaj",
["npcID"] = 211089,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2838,
},
[463052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Phalanx",
["npcID"] = 229782,
},
[430812] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
["369409"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Custodian",
["npcID"] = 184130,
},
[456513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gong'tze the Riverhewer",
["npcID"] = 221974,
},
["367521"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonebolt Hunter",
["npcID"] = 185534,
},
[448528] = {
["source"] = "Spitfire Fusetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 211777,
},
[466124] = {
["encounterName"] = "Geezle Gigazap",
["source"] = "Geezle Gigazap",
["encounterID"] = 3054,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226404,
},
[467238] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Princeguard Enforcer",
["npcID"] = 224175,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["encounterID"] = 2861,
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[449251] = {
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 216621,
},
[17501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Cannon",
["npcID"] = 11199,
},
[211470] = {
["source"] = "Shadow Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 104300,
},
["201226"] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Fury",
["npcID"] = 100531,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1838,
},
[467176] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Flamespite",
["npcID"] = 229288,
},
["432031"] = {
["encounterName"] = "Ki'katal the Harvester",
["source"] = "Black Blood",
["npcID"] = 215968,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2901,
},
[451099] = {
["source"] = "Sureki Militant",
["event"] = "SPELL_CAST_START",
["npcID"] = 213932,
},
[461781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargassum Guardian",
["npcID"] = 212582,
},
[455380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Railbot",
["npcID"] = 218251,
},
[215754] = {
["source"] = "Spawn of Serpentrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 108655,
},
[338490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Devmorta",
["npcID"] = 162875,
},
[445996] = {
["encounterName"] = "Speaker Shadowcrown",
["source"] = "Speaker Shadowcrown",
["encounterID"] = 2837,
["event"] = "SPELL_CAST_START",
["npcID"] = 211087,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[465822] = {
["source"] = "Darkfuse Crossfire",
["event"] = "SPELL_CAST_START",
["npcID"] = 230299,
},
[465952] = {
["encounterName"] = "Chrome King Gallywix",
["source"] = "Chrome King Gallywix",
["npcID"] = 231075,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3016,
},
[463058] = {
["source"] = "Darkfuse Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 229252,
},
[378150] = {
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 189869,
},
[455894] = {
["source"] = "Oremex Flamebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 222743,
},
[472782] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Gallagio Goon",
["npcID"] = 233474,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3015,
},
[442589] = {
["source"] = "Venture Co. Honey Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 220946,
},
[449242] = {
["encounterName"] = "Tomb-Raider Drywhisker",
["source"] = "Tomb-Raider Drywhisker",
["encounterID"] = 2878,
["event"] = "SPELL_CAST_START",
["npcID"] = 204188,
},
["427176"] = {
["encounterName"] = "The Darkness",
["source"] = "Wriggling Darkspawn",
["npcID"] = 213008,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[290600] = {
["source"] = "Jawbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 151684,
},
[293729] = {
["isChanneled"] = true,
["source"] = "Mechagon Mechanic",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 144295,
},
["253721"] = {
["isChanneled"] = true,
["source"] = "Shieldbearer of Zul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 127879,
},
["448105"] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[191941] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["encounterID"] = 1815,
["event"] = "SPELL_CAST_START",
["npcID"] = 95885,
},
[463061] = {
["isChanneled"] = false,
["source"] = "Darkfuse Hyena",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229252,
},
[196028] = {
["source"] = "Hatecoil Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 97171,
},
[431333] = {
["source"] = "Nightfall Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 213893,
},
["465682"] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfuse Inspector",
["npcID"] = 231385,
},
[422122] = {
["encounterName"] = "Ol' Waxbeard",
["source"] = "Ol' Waxbeard",
["npcID"] = 210153,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2829,
},
[291626] = {
["encounterName"] = "King Mechagon",
["source"] = "Aerial Unit R-21/X",
["npcID"] = 150396,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2260,
},
[1216656] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "The Gobfather",
["npcID"] = 231821,
},
[317284] = {
["source"] = "Mistress Dyrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 162880,
},
[1220752] = {
["encounterName"] = "Stix Bunkjunker",
["source"] = "Scrapmaster",
["npcID"] = 231839,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3012,
},
[458646] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadow-Hemmed Fog Beast",
["npcID"] = 221663,
},
[324079] = {
["encounterName"] = "Mordretha",
["source"] = "Mordretha, the Endless Empress",
["npcID"] = 165946,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2404,
},
[270431] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Sage",
["npcID"] = 221962,
},
[1226917] = {
["source"] = "Dissenter Troosilver",
["event"] = "SPELL_CAST_START",
["npcID"] = 241232,
},
[433029] = {
["encounterName"] = "Mirror Master Murkna",
["source"] = "Mirror Master Murkna",
["npcID"] = 219763,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2999,
},
[439524] = {
["encounterName"] = "Benk Buzzbee",
["source"] = "Benk Buzzbee",
["encounterID"] = 2931,
["event"] = "SPELL_CAST_START",
["npcID"] = 218002,
},
[468694] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Mug'Zee",
["npcID"] = 229953,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[428266] = {
["encounterName"] = "The Darkness",
["source"] = "The Darkness",
["npcID"] = 208747,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2788,
},
[260372] = {
["encounterName"] = "Mogul Razdunk",
["source"] = "Venture Co. Skyscorcher",
["npcID"] = 132056,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2108,
},
[459995] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Geargrinder Biker",
["npcID"] = 225804,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3009,
},
[1216894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Architect",
["npcID"] = 229251,
},
[1214623] = {
["encounterName"] = "Mug'Zee, Heads of Security",
["source"] = "Gallagio Goon",
["npcID"] = 233474,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3015,
},
[3606] = {
["source"] = "Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 2523,
},
[474325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Walker",
["npcID"] = 234553,
},
[465820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waterworks Crocolisk",
["npcID"] = 227145,
},
[1216674] = {
["encounterName"] = "Sprocketmonger Lockenstock",
["source"] = "Void Turret",
["npcID"] = 231846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 3013,
},
[1214628] = {
["isChanneled"] = true,
["source"] = "Consuming Voidstone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212739,
},
[459997] = {
["encounterName"] = "Vexie and the Geargrinders",
["source"] = "Geargrinder Biker",
["npcID"] = 225804,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3009,
},
[200637] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[450786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[469721] = {
["source"] = "Bubbles",
["event"] = "SPELL_CAST_START",
["npcID"] = 231197,
},
[465765] = {
["encounterName"] = "One-Armed Bandit",
["source"] = "One-Armed Bandit",
["npcID"] = 228458,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 3014,
},
[118297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Fire Elemental",
["npcID"] = 61029,
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2025-05-12 19:29:39 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 19:25:58 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 19:22:37 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 18:47:35 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 18:43:38 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 18:36:35 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 18:27:15 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 15:35:26 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 15:32:09 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 15:29:26 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 15:24:11 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 15:15:09 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 15:03:29 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 14:57:40 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 14:56:56 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 14:53:42 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 14:49:22 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 14:43:01 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
"2025-05-12 14:42:13 | INIT | Plater-v609-Mists | Framework v607 | 11.1.5 | enUS | Jervaise",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
