# DotMaster File Cleanup Script Instructions

## Overview
This document contains instructions for cleaning up old files and completing the restructuring 
of the DotMaster addon. Follow these steps carefully to avoid breaking the addon.

## Step 1: Verify TOC File Integrity
First, make sure the TOC file only references the new files:

1. Review DotMaster.toc 
2. Verify all files referenced exist and have the correct naming convention
3. Check for any missing files in the TOC that are needed

## Step 2: Delete Old Files
The following files should be deleted as they have been replaced with the new prefixed files:

```bash
# Core files
rm init.lua
rm core.lua
rm utils.lua
rm settings.lua

# Nameplate files
rm nameplate_core.lua
rm nameplate_detection.lua
rm nameplate_coloring.lua

# Spell files
rm spell_database.lua
rm spell_utils.lua

# UI files
rm gui.lua
rm gui_common.lua 
rm gui_general_tab.lua
rm gui_spells_tab.lua
rm ui_spells.lua

# Feature files
rm find_my_dots.lua
```

## Step 3: Update Initialization References
Make sure the dm_loader.lua file properly references all the new module names for initialization:

1. Open dm_loader.lua
2. Check that all module initialization calls reference the correct module names
3. Fix any references that might still be using old names

## Step 4: Run a Quick Grep Search
Perform grep searches for the old file names to ensure no references remain:

```bash
grep -r "nameplate_" --include="*.lua" .
grep -r "spell_" --include="*.lua" .
grep -r "ui_core" --include="*.lua" .
grep -r "ui_common" --include="*.lua" .
grep -r "ui_colorpicker" --include="*.lua" .
```

## Step 5: Test Without Old Files
Test the addon in-game after removing the old files to ensure everything loads correctly.

## Step 6: Commit Changes
Once testing is successful, commit the changes:

```bash
git add -A
git commit -m "Completed file restructuring, removed old files"
git push origin develop
```

## Important Note
This restructuring introduces a dual-prefix system for UI files:
- `ui_` for framework components
- `gui_` for specialized UI components

This is intentional and should be maintained going forward. 